{"version":3,"sources":["custom/pages/error/NotFound/index.tsx","assets/styles/styled.ts","custom/pages/Account/ens/index.ts","custom/pages/Account/AddressSelector.tsx","custom/pages/Account/utils.ts","custom/hooks/useFetchProfile.ts","custom/pages/Account/Affiliate.tsx","custom/hooks/useTimeAgo.ts"],"names":["Wrapper","styled","Page","GdocsListStyle","theme","mediaWidth","upToSmall","Title","Content","Container","div","ButtonPrimary","primaryText1","buttonPrimary","background","NotFound","src","cow404IMG","alt","as","Link","to","Txt","span","props","center","fs","secondary","text6","text1","upToMedium","CHAIN_SUBGRAPH_URL","SupportedChainId","MAINNET","RINKEBY","DOMAINS_BY_ADDRESS_QUERY","gql","chainId","address","subgraphUrl","undefined","error","name","message","stack","GraphQLClient","request","resolvedAddress","toLocaleLowerCase","data","domains","map","domain","filter","domainName","ClientError","AddressSelector","dispatch","useAppDispatch","selectedAddress","useAffiliateAddress","useWeb3React","provider","useState","open","setOpen","items","setItems","toggle","useCallback","node","useRef","useOnClickOutside","tryShortenAddress","item","shortenAddress","handleSelectItem","updateAddress","useEffect","ensNames","then","response","console","info","isAddress","verify","resolveName","length","ref","AddressInfo","onClick","style","marginRight","size","marginTop","strokeWidth","MenuFlyout","ButtonMenuItem","$selected","GreenCheck","$visible","bg4","bg0","MenuItem","css","text2","button","bg3","primary1","Check","success","formatDecimal","number","numberFormatter","format","formatInt","toLocaleString","emptyState","profileData","isLoading","NotificationMessages","NotificationBanner","isVisible","level","canClose","ChainId","Affiliate","referralLink","useReferralLink","account","profile","setProfile","fetchAndSetProfileData","getProfileData","intervalId","setInterval","FETCH_INTERVAL_IN_MINUTES","clearInterval","useFetchProfile","lastUpdated","value","timeAgoValue","setTimeAgoValue","id","timeago","useTimeAgo","hasOrders","useHasOrders","isTradesTooltipVisible","totalTrades","content","wrap","date","href","getExplorerAddressLink","wordBreak","display","prefix","GNOSIS_CHAIN","verticalAlign","marginLeft","toCopy","link","horizontal","className","role","tradeVolumeUsd","totalReferrals","referralVolumeUsd","Web3Status"],"mappings":"0PAMMA,EAAUC,kBAAOC,KAAV,wCAAGD,CAAH,gHACTE,KAGA,qBAAGC,MAAkBC,WAAWC,UAA/B,IAAD,uDAGAC,KAGE,qBAAGH,MAAkBC,WAAWC,UAA/B,IAAD,iFAKFE,KAKEC,EAAYR,UAAOS,IAAV,wCAAGT,CAAH,6JAIXU,KAGS,qBAAGP,MAAkBQ,gBAE1B,qBAAGR,MAAkBS,cAAcC,cASvC,qBAAGV,MAAkBC,WAAWC,UAA/B,IAAD,4IAWW,SAASS,IACtB,OACE,eAACf,EAAD,WACE,cAAC,IAAD,8BACA,cAAC,IAAD,UACE,eAACS,EAAD,WACE,qBAAKO,IAAKC,IAAWC,IAAI,0BACzB,+EACA,cAAC,IAAD,CAAeC,GAAIC,IAAMC,GAAI,IAA7B,iC,oHC3DGC,EAAMrB,UAAOsB,KAAV,uCAAGtB,CAAH,0HAWA,SAACuB,GAAD,OAAYA,EAAMC,OAAS,SAAW,UACvC,SAACD,GAAD,OAAYA,EAAME,GAAKF,EAAME,GAAK,MAChC,SAACF,GAAD,OAAYA,EAAME,GAAgB,KAAXF,EAAME,GAAY,KAAO,QACtD,gBAAGtB,EAAH,EAAGA,MAAH,SAAUuB,UAA6BvB,EAAMwB,MAAQxB,EAAMyB,SAClE,gBAAGzB,EAAH,EAAGA,MAAOsB,EAAV,EAAUA,GAAV,OAAmBtB,EAAMC,WAAWyB,WAAnC,IAAD,gDACaJ,EAAU,GAALA,EAAW,O,wJChB3BK,GAA0C,mBAC7CC,IAAiBC,QAAU,0DADkB,cAE7CD,IAAiBE,QAAU,iEAFkB,GAK1CC,EAA2BC,cAAH,wL,sDAQvB,WACLC,EACAC,GAFK,qGAUGC,EAAcF,EAAUN,EAAmBM,QAAWG,EAVzD,yCAaM,CACLC,MAAO,CACLC,KAAM,qBACNC,QAAQ,oCAAD,OAAsCN,EAAtC,uBACPO,MAAO,MAjBV,uBAsBgB,IAAIC,gBAAcN,GAAaO,QAAuBX,EAA0B,CACjGY,gBAAiBT,EAAQU,sBAvBxB,cAsBGC,EAtBH,yBA0BIA,EAAKC,QACTC,KAAI,SAACC,GAAD,OAAYA,EAAOV,QACvBW,QAAO,SAACC,GAAD,OAAqD,OAAfA,QAAsCd,IAAfc,MA5BpE,uCA8BC,gBAAiBC,eA9BlB,wBA+BOb,EA/BP,KA+BOA,KAAMC,EA/Bb,KA+BaA,QAASC,EA/BtB,KA+BsBA,MA/BtB,kBAgCM,CAAEH,MAAO,CAAEC,OAAMC,UAASC,WAhChC,8E,mECFQ,SAASY,EAAgBhC,GACtC,IAAQc,EAAYd,EAAZc,QACFmB,EAAWC,cACXC,EAAkBC,cACxB,EAA8BC,yBAAtBxB,EAAR,EAAQA,QAASyB,EAAjB,EAAiBA,SACjB,EAAwBC,oBAAS,GAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAmB,CAACzB,IAA9C,mBAAO4B,EAAP,KAAcC,EAAd,KACMC,EAASC,uBAAY,kBAAMJ,GAAQ,SAACD,GAAD,OAAWA,OAAO,IACrDM,EAAOC,iBAAuB,MACpCC,YAAkBF,EAAMN,EAAOI,OAAS5B,GAExC,IAAMiC,EAAoBJ,uBAAY,SAACK,GACrC,IAAKA,EACH,OAAOA,EAGT,IACE,OAAOC,YAAeD,GACtB,MAAOjC,GACP,OAAOiC,KAER,IAEGE,EAAmBP,uBACvB,SAACK,GACCjB,EAASoB,YAAcH,IACvBN,MAEF,CAACX,EAAUW,IAqCb,OAlCAU,qBAAU,WACHzC,GD9BF,SAAP,oCCkCI0C,CAAS1C,EAASC,GAAS0C,MAAK,SAACC,GAC/B,GAAI,UAAWA,EAGb,OAFAC,QAAQC,KAAKF,EAASxC,YACtB0B,EAAS,CAAC7B,IAGZ6B,EAAS,GAAD,mBAAKc,GAAL,CAAe3C,UAExB,CAACA,EAASD,IAEbyC,qBAAU,WAGR,KADyBM,YAAUzB,IAAoBA,IAAoBrB,IAClDqB,EAAzB,CAMA,IAAM0B,EAAM,iDAAG,+GACiBvB,QADjB,IACiBA,OADjB,EACiBA,EAAUwB,YAAY3B,GADvC,gBAEWrB,GACtBmB,EAASoB,YAAcvC,IAHZ,2CAAH,qDAOZ+C,SAZE5B,EAASoB,YAAcvC,MAaxB,CAACqB,EAAiBrB,EAASmB,EAAUK,IAGtC,mCACoB,IAAjBI,EAAMqB,OACL,iCAASd,EAAkBnC,KAE3B,eAACtC,EAAD,CAASwF,IAAKlB,EAAd,UACE,eAACmB,EAAD,CAAaC,QAAStB,EAAtB,UACE,sBAAMuB,MAAO,CAAEC,YAAa,OAA5B,SAAsCnB,EAAkBd,KACxD,cAAC,IAAD,CAAakC,KAAM,GAAIF,MAAO,CAAEG,UAAW,OAASC,YAAa,SAElE/B,GACC,cAACgC,EAAD,UACG9B,EAAMf,KAAI,SAACuB,GAAD,OACT,eAACuB,EAAD,CAA2BC,UAAoB,KAATxB,EAAagB,QAAS,kBAAMd,EAAiBF,IAAnF,UACE,cAACyB,EAAD,CAAYN,KAAM,GAAIE,YAAa,IAAKK,SAAU1B,IAASf,IAAoB,IAC9Ec,EAAkBC,KAFAA,aAarC,IAAM1E,EAAUC,UAAOS,IAAV,wCAAGT,CAAH,mEAIT,qBAAGG,MAAkBC,WAAWyB,WAA/B,MAAD,mDAIA,qBAAG1B,MAAkBC,WAAWC,UAA/B,IAAD,gIAQE0F,EAAa/F,UAAOsB,KAAV,wCAAGtB,CAAH,4VACM,qBAAGG,MAAkBiG,OACrB,qBAAGjG,MAAkBkG,OAcvC,qBAAGlG,MAAkBC,WAAWyB,WAA/B,IAAD,oDAQEyE,EAAWC,cAAH,wTAIH,qBAAGpG,MAAkBqG,SAanBhB,EAAcxF,UAAOyG,OAAV,wCAAGzG,CAAH,wRAEF,qBAAGG,MAAkBiG,OAErB,qBAAGjG,MAAkBkG,OAChC,qBAAGlG,MAAkByB,SAaR,qBAAGzB,MAAkBuG,OAGvCV,EAAiBhG,UAAOyG,OAAV,wCAAGzG,CAAH,sRAChBsG,GACQ,qBAAGL,UAA6B,UAAY,aAG7C,gBAAG9F,EAAH,EAAGA,MAAH,SAAU8F,UAA6B9F,EAAMqG,MAAQrG,EAAMyB,SAChD,gBAAGzB,EAAH,EAAGA,MAAH,SAAU8F,WAA6B9F,EAAMwG,YAElD,qBAAGV,UAA6B,MAAQ,SAKrD,qBAAGA,WAAyB,mBAE1BT,GAKO,gBAAGrF,EAAH,EAAGA,MAAH,SAAU8F,WAA8B9F,EAAMyB,SACzC,gBAAGzB,EAAH,EAAGA,MAAH,SAAU8F,WAA8B9F,EAAMiG,OAM1DF,EAAalG,kBAAO4G,KAAV,wCAAG5G,CAAH,gDAEL,qBAAGG,MAAkB0G,WAChB,qBAAGV,SAA2B,UAAY,Y,0BCpN7CW,EAAgB,SAACC,GAC5B,OAAOA,EAASC,IAAgBC,OAAOF,GAAU,KAGtCG,EAAY,SAACH,GACxB,OAAOA,EAASA,EAAOI,iBAAmB,K,yBCItCC,GAAgC,CACpCC,YAAa,KACb7E,MAAO,GACP8E,WAAW,G,uCCkBPC,GAAuB,SAAC,GAAD,IAAG/E,EAAH,EAAGA,MAAOJ,EAAV,EAAUA,QAAV,OAC3B,qCACGI,GACC,cAACgF,GAAA,EAAD,CAAoBC,WAAS,EAACC,MAAM,QAAQC,UAAU,EAAtD,mFAIDvF,GAAWA,IAAYwF,IAAQ5F,SAC9B,cAACwF,GAAA,EAAD,CAAoBC,WAAS,EAACC,MAAM,OAAOC,UAAU,EAArD,qGAOS,SAASE,KACtB,IAAMC,EAAeC,cACrB,EAA6DnE,yBAArDoE,EAAR,EAAQA,QAAR,IAAiB5F,eAAjB,MAA2BwF,IAAQ5F,QAAnC,EACA,ED/Ba,WACb,MAA6B4B,yBAArBoE,EAAR,EAAQA,QAAS5F,EAAjB,EAAiBA,QACjB,EAA8B0B,mBAA4BsD,IAA1D,mBAAOa,EAAP,KAAgBC,EAAhB,KA4BA,OA1BArD,qBAAU,WAAO,SACAsD,IADD,qFACd,2GAEQ/F,IAAW4F,EAFnB,uBAGME,GAAW,SAACD,GAAD,mBAAC,eAAkBA,GAAnB,IAA4BX,WAAW,EAAM9E,MAAO,QAHrE,SAIgC4F,YAAehG,EAAS4F,GAJxD,OAIYX,EAJZ,OAKMa,GAAW,SAACD,GAAD,mBAAC,eAAkBA,GAAnB,IAA4BX,WAAW,EAAOD,mBAL/D,uBAOMa,EAAWd,IAPjB,0DAUInC,QAAQzC,MAAR,MACA0F,GAAW,SAACD,GAAD,mBAAC,eACPA,GADM,IAETX,WAAW,EACX9E,MAAO,0DAdb,0DADc,wBAoBd,IAAM6F,EAAaC,YAAYH,EAAwBI,KAGvD,OADAJ,IACO,kBAAMK,cAAcH,MAC1B,CAACL,EAAS5F,IAEN6F,ECC4BQ,GAA3BpB,EAAR,EAAQA,YAAaC,EAArB,EAAqBA,UACfoB,EChDO,SAAoBC,GACjC,MAAwC7E,mBAAS,IAAjD,mBAAO8E,EAAP,KAAqBC,EAArB,KAeA,OAbAhE,qBAAU,WACR,GAAK8D,EAAL,CAKA,IAAMG,EAAKR,aAAY,WACrBO,EAAgBE,KAAeJ,MAC9B,KAEH,OAAO,kBAAMH,cAAcM,IARzBD,EAAgB,MASjB,CAACF,IAEGC,EDgCaI,CAAU,OAAC3B,QAAD,IAACA,OAAD,EAACA,EAAaqB,aACtCO,EAAYC,aAAalB,GACzBtE,EAAkBC,cAElBwF,EAAyBnB,GAAW5F,IAAYwF,IAAQ5F,WAAY,OAACqF,QAAD,IAACA,MAAa+B,aAExF,OACE,cAAC,IAAD,UACE,eAAC,IAAD,WACE,eAAC,IAAD,WACE,cAAC,IAAD,gCACCpB,GACC,cAAC,IAAD,CAAQV,UAAWA,EAAnB,SACE,eAAC,IAAD,WACE,eAACjG,EAAD,WACE,cAAC,IAAD,CAAYuE,KAAM,KADpB,WAGE,eAACvE,EAAD,CAAKK,WAAS,EAAd,yBAEE,cAAC,IAAD,CAAyB2H,QAAQ,kDAAkDC,MAAI,EAAvF,SACE,cAAC,IAAD,CAAY1D,KAAM,OAHtB,WAOE8C,EAGA,cAAC,IAAD,CAAyBW,QAAS,cAAC,IAAD,CAAeE,KAAI,OAAElC,QAAF,IAAEA,OAAF,EAAEA,EAAaqB,cAAiBY,MAAI,EAAzF,SACE,iCAASZ,MAHX,OAOHO,GACC,cAAC,IAAD,CAASO,KAAMC,YAAuBrH,EAAS4F,GAA/C,SACE,cAAC3G,EAAD,CAAKK,WAAS,EAAd,8CAQZ,cAAC,GAAD,CAA0CU,QAASA,IAEnD,eAAC,IAAD,WACE,cAACf,EAAD,CAAKI,GAAI,GAAT,SACE,yDAEF,cAACJ,EAAD,CAAKI,GAAI,GAAID,QAAM,EAAnB,SACGsG,EACC,mCACE,uBAAMpC,MAAO,CAAEgE,UAAW,YAAaC,QAAS,gBAAhD,UACG7B,EAAa8B,OACbxH,IAAYwF,IAAQiC,aACnB,iCAASnF,YAAeoD,EAAazF,WAErC,cAACkB,EAAD,CAAiBlB,QAASyF,EAAazF,UAGzC,sBAAMqD,MAAO,CAAEiE,QAAS,eAAgBG,cAAe,SAAUC,WAAY,GAA7E,SACE,cAAC,IAAD,CACEC,OACEtG,GAAmBtB,IAAYwF,IAAQiC,aAAvC,UACO/B,EAAa8B,QADpB,OAC6BlG,GACzBoE,EAAamC,cAO3B,SAIN,eAAC,IAAD,CAAUC,YAAU,EAApB,UACE,eAAC,IAAD,WACE,eAAC,IAAD,wBAEE,cAAC,IAAD,CAAyBb,QAAQ,wCAAwCC,MAAI,EAA7E,SACE,cAAC,IAAD,CAAY1D,KAAM,UAGtB,eAAC,IAAD,CAAUuE,UAAU,OAApB,UACE,eAAC,IAAD,WACE,sBAAMC,KAAK,MAAM,aAAW,SAA5B,4CAGA,cAAC,IAAD,CAAQ9C,UAAWA,EAAnB,SACE,iCAASJ,EAAS,OAACG,QAAD,IAACA,OAAD,EAACA,EAAa+B,iBAElC,cAAC,IAAD,CAAQ9B,UAAWA,EAAnB,SACE,gDAEG6B,GACC,cAAC,IAAD,CACEE,QAAQ,6GACRC,MAAI,EAFN,SAIE,cAAC,IAAD,CAAY1D,KAAM,eAM5B,eAAC,IAAD,WACE,sBAAMwE,KAAK,MAAM,aAAW,WAA5B,0BAGA,cAAC,IAAD,CAAQ9C,UAAWA,EAAnB,SACE,iCAASR,EAAa,OAACO,QAAD,IAACA,OAAD,EAACA,EAAagD,oBAEtC,cAAC,IAAD,CAAQ/C,UAAWA,EAAnB,SACE,kEAKR,eAAC,IAAD,WACE,eAAC,IAAD,2BAEE,cAAC,IAAD,CACE+B,QAAQ,qEACRC,MAAI,EAFN,SAIE,cAAC,IAAD,CAAY1D,KAAM,UAGtB,eAAC,IAAD,CAAUuE,UAAU,OAApB,UACE,eAAC,IAAD,WACE,sBAAMC,KAAK,MAAM,aAAW,YAA5B,0BAGA,cAAC,IAAD,CAAQ9C,UAAWA,EAAnB,SACE,iCAASJ,EAAS,OAACG,QAAD,IAACA,OAAD,EAACA,EAAaiD,oBAElC,cAAC,IAAD,CAAQhD,UAAWA,EAAnB,SACE,wDAGJ,eAAC,IAAD,WACE,sBAAM8C,KAAK,MAAM,aAAW,cAA5B,0BAGA,cAAC,IAAD,CAAQ9C,UAAWA,EAAnB,SACE,iCAASR,EAAa,OAACO,QAAD,IAACA,OAAD,EAACA,EAAakD,uBAEtC,cAAC,IAAD,CAAQjD,UAAWA,EAAnB,SACE,mEAMRU,GAAW,cAACwC,EAAA,EAAD","file":"static/js/affiliate.526f34e4.chunk.js","sourcesContent":["import { Link } from 'react-router-dom'\nimport styled from 'styled-components/macro'\nimport Page, { Title, Content, GdocsListStyle } from 'components/Page'\nimport { ButtonPrimary } from 'custom/components/Button'\nimport cow404IMG from 'assets/cow-swap/cow-404.png'\n\nconst Wrapper = styled(Page)`\n  ${GdocsListStyle}\n  min-height: auto;\n  padding-bottom: 32px;\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    padding-bottom: 24px;\n  `}\n  ${Title} {\n    margin-bottom: 50px;\n    font-size: 26px;\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n      font-size: 18px;\n      text-align: center;\n    `}\n  }\n  ${Content} {\n    margin-bottom: 0;\n  }\n`\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  ${ButtonPrimary} {\n    width: 196px;\n    padding: 9px;\n    color: ${({ theme }) => theme.primaryText1};\n    &:hover {\n      ${({ theme }) => theme.buttonPrimary.background}\n    }\n  }\n  h2 {\n    margin: 36px 0 32px;\n  }\n  img {\n    max-width: 506px;\n  }\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    img {\n      max-width: 287px;\n    }\n    h2 {\n      font-size: 16px;\n      text-align: center;\n    }\n  `}\n`\n\nexport default function NotFound() {\n  return (\n    <Wrapper>\n      <Title>Page not found!</Title>\n      <Content>\n        <Container>\n          <img src={cow404IMG} alt=\"CowSwap 404 not found\" />\n          <h2>The page you are looking for does not exist. </h2>\n          <ButtonPrimary as={Link} to={'/'}>\n            Back home\n          </ButtonPrimary>\n        </Container>\n      </Content>\n    </Wrapper>\n  )\n}\n","import styled from 'styled-components/macro'\nimport * as CSS from 'csstype'\n\n// with font size convert to rems\nexport const Txt = styled.span<\n  Partial<\n    CSS.Properties & {\n      fs?: number\n      secondary?: boolean\n      center?: boolean\n    }\n  >\n>`\n  display: inline-flex;\n  align-items: center;\n  text-align: ${(props) => (props.center ? 'center' : 'left')};\n  font-size: ${(props) => (props.fs ? props.fs : 12)}px;\n  line-height: ${(props) => (props.fs ? props.fs * 1.21 + 'px' : 1.21)};\n  color: ${({ theme, secondary }) => (secondary ? theme.text6 : theme.text1)};\n  ${({ theme, fs }) => theme.mediaWidth.upToMedium`\n    font-size: ${fs ? fs * 0.8 : 12}px;\n  `}\n  min-height: 22px;\n`\n","import { SupportedChainId } from 'constants/chains'\nimport { ClientError, gql, GraphQLClient } from 'graphql-request'\nimport { EnsNamesQuery } from 'pages/Account/ens/types'\n\nconst CHAIN_SUBGRAPH_URL: Record<number, string> = {\n  [SupportedChainId.MAINNET]: 'https://api.thegraph.com/subgraphs/name/ensdomains/ens',\n  [SupportedChainId.RINKEBY]: 'https://api.thegraph.com/subgraphs/name/ensdomains/ensrinkeby',\n}\n\nconst DOMAINS_BY_ADDRESS_QUERY = gql`\n  query ensNames($resolvedAddress: String!) {\n    domains(where: { resolvedAddress_contains: $resolvedAddress }, orderBy: name) {\n      name\n    }\n  }\n`\n\nexport async function ensNames(\n  chainId: SupportedChainId,\n  address: string\n): Promise<\n  | {\n      error: { name: string; message: string; stack: string | undefined }\n    }\n  | string[]\n> {\n  try {\n    const subgraphUrl = chainId ? CHAIN_SUBGRAPH_URL[chainId] : undefined\n\n    if (!subgraphUrl) {\n      return {\n        error: {\n          name: 'UnsupportedChainId',\n          message: `Subgraph queries against ChainId ${chainId} are not supported.`,\n          stack: '',\n        },\n      }\n    }\n\n    const data = await new GraphQLClient(subgraphUrl).request<EnsNamesQuery>(DOMAINS_BY_ADDRESS_QUERY, {\n      resolvedAddress: address.toLocaleLowerCase(),\n    })\n\n    return data.domains\n      .map((domain) => domain.name)\n      .filter((domainName): domainName is string => domainName !== null && domainName !== undefined)\n  } catch (error) {\n    if (error instanceof ClientError) {\n      const { name, message, stack } = error\n      return { error: { name, message, stack } }\n    }\n    throw error\n  }\n}\n","import { useCallback, useEffect, useRef, useState } from 'react'\nimport styled, { css } from 'styled-components/macro'\nimport { Check, ChevronDown } from 'react-feather'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport { useWeb3React } from '@web3-react/core'\nimport { ensNames } from 'pages/Account/ens'\nimport { useAffiliateAddress } from 'state/affiliate/hooks'\nimport { updateAddress } from 'state/affiliate/actions'\nimport { useAppDispatch } from 'state/hooks'\nimport { isAddress, shortenAddress } from 'utils'\n\ntype AddressSelectorProps = {\n  address: string\n}\n\nexport default function AddressSelector(props: AddressSelectorProps) {\n  const { address } = props\n  const dispatch = useAppDispatch()\n  const selectedAddress = useAffiliateAddress()\n  const { chainId, provider } = useWeb3React()\n  const [open, setOpen] = useState(false)\n  const [items, setItems] = useState<string[]>([address])\n  const toggle = useCallback(() => setOpen((open) => !open), [])\n  const node = useRef<HTMLDivElement>(null)\n  useOnClickOutside(node, open ? toggle : undefined)\n\n  const tryShortenAddress = useCallback((item?: string) => {\n    if (!item) {\n      return item\n    }\n\n    try {\n      return shortenAddress(item)\n    } catch (error) {\n      return item\n    }\n  }, [])\n\n  const handleSelectItem = useCallback(\n    (item: string) => {\n      dispatch(updateAddress(item))\n      toggle()\n    },\n    [dispatch, toggle]\n  )\n\n  useEffect(() => {\n    if (!chainId) {\n      return\n    }\n\n    ensNames(chainId, address).then((response) => {\n      if ('error' in response) {\n        console.info(response.error)\n        setItems([address])\n        return\n      }\n      setItems([...response, address])\n    })\n  }, [address, chainId])\n\n  useEffect(() => {\n    // if the user switches accounts, reset the selected address\n    const switchedAccounts = isAddress(selectedAddress) && selectedAddress !== address\n    if (switchedAccounts || !selectedAddress) {\n      dispatch(updateAddress(address))\n      return\n    }\n\n    // the selected address is a ens name, verify that resolves to the correct address\n    const verify = async () => {\n      const resolvedAddress = await provider?.resolveName(selectedAddress)\n      if (resolvedAddress !== address) {\n        dispatch(updateAddress(address))\n      }\n    }\n\n    verify()\n  }, [selectedAddress, address, dispatch, provider])\n\n  return (\n    <>\n      {items.length === 1 ? (\n        <strong>{tryShortenAddress(address)}</strong>\n      ) : (\n        <Wrapper ref={node}>\n          <AddressInfo onClick={toggle}>\n            <span style={{ marginRight: '2px' }}>{tryShortenAddress(selectedAddress)}</span>\n            <ChevronDown size={16} style={{ marginTop: '2px' }} strokeWidth={2.5} />\n          </AddressInfo>\n          {open && (\n            <MenuFlyout>\n              {items.map((item) => (\n                <ButtonMenuItem key={item} $selected={item === ''} onClick={() => handleSelectItem(item)}>\n                  <GreenCheck size={16} strokeWidth={2.5} $visible={item === selectedAddress} />{' '}\n                  {tryShortenAddress(item)}\n                </ButtonMenuItem>\n              ))}\n            </MenuFlyout>\n          )}\n        </Wrapper>\n      )}\n    </>\n  )\n}\n\nconst Wrapper = styled.div`\n  position: relative;\n  display: inline;\n  margin-right: 0.4rem;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    justify-self: end;\n  `};\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    margin: 0 0.5rem 0 0;\n    width: initial;\n    text-overflow: ellipsis;\n    flex-shrink: 1;\n  `};\n`\n\nconst MenuFlyout = styled.span`\n  background-color: ${({ theme }) => theme.bg4};\n  border: 1px solid ${({ theme }) => theme.bg0};\n\n  box-shadow: 0px 0px 1px rgba(0, 0, 0, 0.01), 0px 4px 8px rgba(0, 0, 0, 0.04), 0px 16px 24px rgba(0, 0, 0, 0.04),\n    0px 24px 32px rgba(0, 0, 0, 0.01);\n  border-radius: 12px;\n  padding: 0.3rem;\n  display: flex;\n  flex-direction: column;\n  font-size: 1rem;\n  position: absolute;\n  left: 0;\n  top: 1.75rem;\n  z-index: 100;\n  min-width: 350px;\n  ${({ theme }) => theme.mediaWidth.upToMedium`;\n    min-width: 145px\n  `};\n\n  > {\n    padding: 12px;\n  }\n`\nconst MenuItem = css`\n  align-items: center;\n  background-color: transparent;\n  border-radius: 12px;\n  color: ${({ theme }) => theme.text2};\n  cursor: pointer;\n  display: flex;\n  flex: 1;\n  flex-direction: row;\n  font-size: 16px;\n  font-weight: 400;\n  justify-content: start;\n  :hover {\n    text-decoration: none;\n  }\n`\n\nexport const AddressInfo = styled.button`\n  align-items: center;\n  background-color: ${({ theme }) => theme.bg4};\n  border-radius: 12px;\n  border: 1px solid ${({ theme }) => theme.bg0};\n  color: ${({ theme }) => theme.text1};\n  display: inline-flex;\n  flex-direction: row;\n  font-weight: 700;\n  font-size: 12px;\n  height: 100%;\n  margin: 0 0.4rem;\n  padding: 0.2rem 0.4rem;\n\n  :hover,\n  :focus {\n    cursor: pointer;\n    outline: none;\n    border: 1px solid ${({ theme }) => theme.bg3};\n  }\n`\nconst ButtonMenuItem = styled.button<{ $selected?: boolean }>`\n  ${MenuItem}\n  cursor: ${({ $selected }) => ($selected ? 'initial' : 'pointer')};\n  border: none;\n  box-shadow: none;\n  color: ${({ theme, $selected }) => ($selected ? theme.text2 : theme.text1)};\n  background-color: ${({ theme, $selected }) => $selected && theme.primary1};\n  outline: none;\n  font-weight: ${({ $selected }) => ($selected ? '700' : '500')};\n  font-size: 12px;\n  text-transform: lowercase;\n  padding: 6px 10px 6px 5px;\n\n  ${({ $selected }) => $selected && `margin: 3px 0;`}\n\n  > ${AddressInfo} {\n    margin: 0 auto 0 8px;\n  }\n\n  &:hover {\n    color: ${({ theme, $selected }) => !$selected && theme.text1};\n    background: ${({ theme, $selected }) => !$selected && theme.bg4};\n  }\n\n  transition: background 0.13s ease-in-out;\n`\n\nconst GreenCheck = styled(Check)<{ $visible: boolean }>`\n  margin-right: 5px;\n  color: ${({ theme }) => theme.success};\n  visibility: ${({ $visible }) => ($visible ? 'visible' : 'hidden')};\n`\n","import { numberFormatter } from 'utils/format'\n\nexport const formatDecimal = (number?: number): string => {\n  return number ? numberFormatter.format(number) : '-'\n}\n\nexport const formatInt = (number?: number): string => {\n  return number ? number.toLocaleString() : '-'\n}\n","import { useWeb3React } from '@web3-react/core'\nimport { useEffect, useState } from 'react'\nimport { getProfileData } from 'api/gnosisProtocol'\nimport { ProfileData } from 'api/gnosisProtocol/api'\n\ntype FetchProfileState = {\n  profileData: ProfileData | null\n  error: string\n  isLoading: boolean\n}\n\nconst emptyState: FetchProfileState = {\n  profileData: null,\n  error: '',\n  isLoading: false,\n}\n\nconst FETCH_INTERVAL_IN_MINUTES = 5\n\nexport default function useFetchProfile(): FetchProfileState {\n  const { account, chainId } = useWeb3React()\n  const [profile, setProfile] = useState<FetchProfileState>(emptyState)\n\n  useEffect(() => {\n    async function fetchAndSetProfileData() {\n      try {\n        if (chainId && account) {\n          setProfile((profile) => ({ ...profile, isLoading: true, error: '' }))\n          const profileData = await getProfileData(chainId, account)\n          setProfile((profile) => ({ ...profile, isLoading: false, profileData }))\n        } else {\n          setProfile(emptyState)\n        }\n      } catch (error) {\n        console.error(error)\n        setProfile((profile) => ({\n          ...profile,\n          isLoading: false,\n          error: 'There was an error while fetching the profile data',\n        }))\n      }\n    }\n\n    const intervalId = setInterval(fetchAndSetProfileData, FETCH_INTERVAL_IN_MINUTES * 60_000)\n\n    fetchAndSetProfileData()\n    return () => clearInterval(intervalId)\n  }, [account, chainId])\n\n  return profile\n}\n","import { HelpCircle, SectionTitle } from 'components/Page'\nimport { Txt } from 'assets/styles/styled'\nimport { MouseoverTooltipContent } from 'components/Tooltip'\nimport Web3Status from 'components/Web3Status'\nimport { getExplorerAddressLink } from 'utils/explorer'\nimport { shortenAddress } from 'utils'\nimport Copy from 'components/Copy/CopyMod'\nimport { RefreshCcw } from 'react-feather'\nimport AddressSelector from './AddressSelector'\nimport {\n  Wrapper,\n  GridWrap,\n  CardHead,\n  StyledContainer,\n  ExtLink,\n  ChildWrapper,\n  ItemTitle,\n  FlexWrap,\n  FlexCol,\n  Loader,\n  TimeFormatted,\n} from './styled'\nimport { SupportedChainId as ChainId } from '@cowprotocol/cow-sdk'\nimport { formatInt, formatDecimal } from './utils'\nimport useReferralLink from 'hooks/useReferralLink'\nimport { useWeb3React } from '@web3-react/core'\nimport useFetchProfile from 'hooks/useFetchProfile'\nimport useTimeAgo from 'hooks/useTimeAgo'\nimport NotificationBanner from 'components/NotificationBanner'\nimport { useHasOrders } from 'api/gnosisProtocol/hooks'\nimport { useAffiliateAddress } from 'state/affiliate/hooks'\n\nconst NotificationMessages = ({ error, chainId }: { error?: unknown; chainId: ChainId }) => (\n  <>\n    {error && (\n      <NotificationBanner isVisible level=\"error\" canClose={false}>\n        There was an error loading your profile data. Please try again later.\n      </NotificationBanner>\n    )}\n    {chainId && chainId !== ChainId.MAINNET && (\n      <NotificationBanner isVisible level=\"info\" canClose={false}>\n        Affiliate data is only available for Ethereum. Please change the network to see it.\n      </NotificationBanner>\n    )}\n  </>\n)\n\nexport default function Affiliate() {\n  const referralLink = useReferralLink()\n  const { account, chainId = ChainId.MAINNET /* , error */ } = useWeb3React()\n  const { profileData, isLoading } = useFetchProfile()\n  const lastUpdated = useTimeAgo(profileData?.lastUpdated)\n  const hasOrders = useHasOrders(account)\n  const selectedAddress = useAffiliateAddress()\n\n  const isTradesTooltipVisible = account && chainId === ChainId.MAINNET && !!profileData?.totalTrades\n\n  return (\n    <Wrapper>\n      <GridWrap>\n        <CardHead>\n          <SectionTitle>Affiliate Program</SectionTitle>\n          {account && (\n            <Loader isLoading={isLoading}>\n              <StyledContainer>\n                <Txt>\n                  <RefreshCcw size={16} />\n                  &nbsp;&nbsp;\n                  <Txt secondary>\n                    Last updated\n                    <MouseoverTooltipContent content=\"Data is updated on the background periodically.\" wrap>\n                      <HelpCircle size={14} />\n                    </MouseoverTooltipContent>\n                    :&nbsp;\n                  </Txt>\n                  {!lastUpdated ? (\n                    '-'\n                  ) : (\n                    <MouseoverTooltipContent content={<TimeFormatted date={profileData?.lastUpdated} />} wrap>\n                      <strong>{lastUpdated}</strong>\n                    </MouseoverTooltipContent>\n                  )}\n                </Txt>\n                {hasOrders && (\n                  <ExtLink href={getExplorerAddressLink(chainId, account)}>\n                    <Txt secondary>View all orders ↗</Txt>\n                  </ExtLink>\n                )}\n              </StyledContainer>\n            </Loader>\n          )}\n        </CardHead>\n\n        <NotificationMessages /* error={error} */ chainId={chainId} />\n\n        <ChildWrapper>\n          <Txt fs={16}>\n            <strong>Your referral url</strong>\n          </Txt>\n          <Txt fs={14} center>\n            {referralLink ? (\n              <>\n                <span style={{ wordBreak: 'break-all', display: 'inline-block' }}>\n                  {referralLink.prefix}\n                  {chainId === ChainId.GNOSIS_CHAIN ? (\n                    <strong>{shortenAddress(referralLink.address)}</strong>\n                  ) : (\n                    <AddressSelector address={referralLink.address} />\n                  )}\n\n                  <span style={{ display: 'inline-block', verticalAlign: 'middle', marginLeft: 8 }}>\n                    <Copy\n                      toCopy={\n                        selectedAddress && chainId !== ChainId.GNOSIS_CHAIN\n                          ? `${referralLink.prefix}${selectedAddress}`\n                          : referralLink.link\n                      }\n                    />\n                  </span>\n                </span>\n              </>\n            ) : (\n              '-'\n            )}\n          </Txt>\n        </ChildWrapper>\n        <GridWrap horizontal>\n          <ChildWrapper>\n            <ItemTitle>\n              Trades&nbsp;\n              <MouseoverTooltipContent content=\"Statistics regarding your own trades.\" wrap>\n                <HelpCircle size={14} />\n              </MouseoverTooltipContent>\n            </ItemTitle>\n            <FlexWrap className=\"item\">\n              <FlexCol>\n                <span role=\"img\" aria-label=\"farmer\">\n                  🧑‍🌾\n                </span>\n                <Loader isLoading={isLoading}>\n                  <strong>{formatInt(profileData?.totalTrades)}</strong>\n                </Loader>\n                <Loader isLoading={isLoading}>\n                  <span>\n                    Total trades\n                    {isTradesTooltipVisible && (\n                      <MouseoverTooltipContent\n                        content=\"You may see more trades here than what you see in the activity list. To understand why, check out the FAQ.\"\n                        wrap\n                      >\n                        <HelpCircle size={14} />\n                      </MouseoverTooltipContent>\n                    )}\n                  </span>\n                </Loader>\n              </FlexCol>\n              <FlexCol>\n                <span role=\"img\" aria-label=\"moneybag\">\n                  💰\n                </span>\n                <Loader isLoading={isLoading}>\n                  <strong>{formatDecimal(profileData?.tradeVolumeUsd)}</strong>\n                </Loader>\n                <Loader isLoading={isLoading}>\n                  <span>Total traded volume</span>\n                </Loader>\n              </FlexCol>\n            </FlexWrap>\n          </ChildWrapper>\n          <ChildWrapper>\n            <ItemTitle>\n              Referrals&nbsp;\n              <MouseoverTooltipContent\n                content=\"Statistics regarding trades by people who used your referral link.\"\n                wrap\n              >\n                <HelpCircle size={14} />\n              </MouseoverTooltipContent>\n            </ItemTitle>\n            <FlexWrap className=\"item\">\n              <FlexCol>\n                <span role=\"img\" aria-label=\"handshake\">\n                  🤝\n                </span>\n                <Loader isLoading={isLoading}>\n                  <strong>{formatInt(profileData?.totalReferrals)}</strong>\n                </Loader>\n                <Loader isLoading={isLoading}>\n                  <span>Total referrals</span>\n                </Loader>\n              </FlexCol>\n              <FlexCol>\n                <span role=\"img\" aria-label=\"wingedmoney\">\n                  💸\n                </span>\n                <Loader isLoading={isLoading}>\n                  <strong>{formatDecimal(profileData?.referralVolumeUsd)}</strong>\n                </Loader>\n                <Loader isLoading={isLoading}>\n                  <span>Referrals volume</span>\n                </Loader>\n              </FlexCol>\n            </FlexWrap>\n          </ChildWrapper>\n        </GridWrap>\n        {!account && <Web3Status />}\n      </GridWrap>\n    </Wrapper>\n  )\n}\n","import { useEffect, useState } from 'react'\nimport * as timeago from 'timeago.js'\n\nexport default function useTimeAgo(value?: string | Date): string {\n  const [timeAgoValue, setTimeAgoValue] = useState('')\n\n  useEffect(() => {\n    if (!value) {\n      setTimeAgoValue('')\n      return\n    }\n\n    const id = setInterval(() => {\n      setTimeAgoValue(timeago.format(value))\n    }, 1000)\n\n    return () => clearInterval(id)\n  }, [value])\n\n  return timeAgoValue\n}\n"],"sourceRoot":""}