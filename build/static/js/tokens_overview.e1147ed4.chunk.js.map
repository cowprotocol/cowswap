{"version":3,"sources":["custom/hooks/useTransactionConfirmationModal.tsx","custom/components/Tokens/styled.ts","custom/components/Tokens/FavouriteTokenButton.tsx","custom/components/Tokens/BalanceCell.tsx","custom/components/Tokens/FiatBalanceCell.tsx","custom/components/Tokens/TokensTableRow.tsx","custom/components/SearchModal/CurrencySearch/sorting.ts","custom/components/Tokens/TokensTable.tsx","custom/hooks/useFilterTokens.ts","custom/pages/Account/Tokens/TokensOverview.tsx","custom/pages/Account/Tokens/index.tsx"],"names":["useTransactionConfirmationModal","defaultOperationType","OperationType","WRAP_ETHER","useState","operationType","setOperationType","transactionConfirmationModalMsg","setTransactionConfirmationModalMsg","openTransactionConfirmationModalAux","useOpenModal","ApplicationModal","TRANSACTION_CONFIRMATION","closeModal","useCloseModals","showTransactionConfirmationModal","useModalIsOpen","openModal","useCallback","message","TransactionConfirmationModal","attemptingTxn","isOpen","pendingText","onDismiss","TokenSearchInput","styled","SearchInput","theme","primary1","transparentize","darkMode","text1","mediaWidth","upToMedium","upToSmall","Wrapper","div","ResponsiveGrid","text3","upToLarge","ResponsiveLogo","Link","CurrencyLogo","Label","ThemedText","end","ClickableText","disabled","PageButtons","PaginationText","span","upToExtraSmall","ArrowButton","button","Arrow","props","faded","HideLarge","bg5","LargeOnly","TableHeader","bg2","bg4","TableBody","AutoColumn","Cell","center","IndexNumber","BalanceValue","hasBalance","TableButton","BaseButton","color","outlined","text","Table","card","border","background2","TokenText","ApproveLabel","CustomLimit","IndexLabel","FiatValue","InfoCircle","HelpCircle","StyledButtonStar","ButtonStar","FavouriteTokenButton","tokenData","favouriteTokens","useFavouriteTokens","useTheme","toggleFavouriteToken","useToggleFavouriteToken","handleFavouriteToken","event","preventDefault","isFavouriteToken","useMemo","some","t","address","stroke","yellow2","fill","undefined","onClick","BalanceCell","balance","account","useWeb3React","greaterThan","formattedBalance","formatSmart","title","formatMax","currency","decimals","Loader","FiatBalanceCell","fiatValue","useHigherUSDValue","formattedFiatValue","FIAT_PRECISION","thousandSeparator","isLocaleAware","size","DataRow","index","handleBuyOrSell","closeModals","openTransactionConfirmationModal","toggleWalletModal","chainId","spender","GP_VAULT_RELAYER","currentAllowance","useTokenAllowance","approving","setApproving","useErrorModal","handleSetError","handleCloseError","vaultRelayer","amountToApprove","CurrencyAmount","fromRawAmount","MaxUint256","amountToCheckAgainstAllowance","equalTo","useApproveCallback","approvalState","approve","prevApprovalState","usePrevious","handleApprove","summary","symbol","modalMessage","transactionSummary","console","error","isApproved","ApprovalState","APPROVED","isPendingOnchainApprove","PENDING","isPendingApprove","hasZeroBalance","hasNoAllowance","displayApproveContent","green1","AMOUNT_PRECISION","useEffect","NOT_APPROVED","Row","style","marginLeft","fontWeight","ml","name","primary5","OrderKind","BUY","SELL","red1","PRIORITISED_TOKENS","balanceComparator","balanceA","balanceB","useTokenComparator","inverted","balances","useAllTokenBalances","comparator","tokenA","tokenB","balanceComp","indexA","indexOf","indexB","toLowerCase","getTokenComparator","SORT_FIELD","TableType","TokenTable","tokensData","rawTokensData","maxItems","page","setPage","query","prevQuery","debouncedQuery","native","useNativeCurrency","useToggleWalletModal","tableRef","useRef","tokens","length","searchAddress","isAddress","queryParts","split","filter","s","token","tokenPart","queryPart","includes","useFilterTokens","sortField","setSortField","sortDirection","setSortDirection","tokenComparator","applyDirection","condition","maxPage","setMaxPage","prevPage","nextPage","prevPageIndex","getTokenIndex","i","history","useHistory","type","typeQuery","push","ErrorModal","APPROVE_TOKEN","sortedTokens","x","sort","BALANCE","sortA","sortB","slice","handleSort","newField","newDirection","arrow","field","extraPages","Math","floor","current","scrollLeft","ref","NAME","map","data","TokensTableRow","PageViewKeys","PageView","ALL_TOKENS","label","FAVORITE_TOKENS","TokensOverview","useInitFavouriteTokens","provider","isMenuOpen","setIsMenuOpen","selectedView","setSelectedView","prevChainId","prevSelectedView","prevAccount","isChainSupported","supportedChainId","window","scrollTo","allTokens","useAllTokens","setQuery","useDebounce","removeAllFavouriteTokens","useRemoveAllFavouriteTokens","handleRestoreTokens","formattedTokens","Object","values","isTruthy","toggleMenu","handleMenuClick","view","node","useOnClickOutside","renderTableContent","minHeight","handleSearch","input","target","value","trim","checksummedInput","handleSearchClear","useFlex","padding","entries","key","active","id","placeholder","autoComplete","onChange"],"mappings":"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","file":"static/js/tokens_overview.e1147ed4.chunk.js","sourcesContent":["import { useState, useCallback } from 'react'\nimport TransactionConfirmationModal from 'components/TransactionConfirmationModal'\nimport { OperationType } from 'components/TransactionConfirmationModal'\nimport { useOpenModal, useCloseModals, useModalIsOpen } from 'state/application/hooks'\nimport { ApplicationModal } from 'state/application/reducer'\n\nexport default function useTransactionConfirmationModal(\n  defaultOperationType: OperationType = OperationType.WRAP_ETHER\n) {\n  const [operationType, setOperationType] = useState<OperationType>(defaultOperationType)\n  const [transactionConfirmationModalMsg, setTransactionConfirmationModalMsg] = useState<string>()\n  const openTransactionConfirmationModalAux = useOpenModal(ApplicationModal.TRANSACTION_CONFIRMATION)\n  const closeModal = useCloseModals()\n  const showTransactionConfirmationModal = useModalIsOpen(ApplicationModal.TRANSACTION_CONFIRMATION)\n  const openModal = useCallback(\n    (message: string, operationType: OperationType) => {\n      setTransactionConfirmationModalMsg(message)\n      setOperationType(operationType)\n      openTransactionConfirmationModalAux()\n    },\n    [setTransactionConfirmationModalMsg, openTransactionConfirmationModalAux]\n  )\n\n  return {\n    openModal,\n    closeModal,\n    TransactionConfirmationModal: useCallback(\n      () => (\n        <TransactionConfirmationModal\n          attemptingTxn={true}\n          isOpen={showTransactionConfirmationModal}\n          pendingText={transactionConfirmationModalMsg}\n          onDismiss={closeModal}\n          operationType={operationType}\n        />\n      ),\n      [closeModal, operationType, showTransactionConfirmationModal, transactionConfirmationModalMsg]\n    ),\n  }\n}\n","import styled from 'styled-components/macro'\nimport { Link } from 'react-router-dom'\nimport { ThemedText } from 'theme'\nimport { transparentize } from 'polished'\nimport { AutoColumn } from 'components/Column'\nimport { BaseButton } from 'components/Button'\nimport CurrencyLogo from 'components/CurrencyLogo'\nimport { HelpCircle } from 'react-feather'\nimport { SearchInput } from 'components/SearchModal/styleds'\n\nexport const TokenSearchInput = styled(SearchInput)`\n  margin-bottom: 16px;\n  font-size: 14px;\n  max-width: 500px;\n  align-self: flex-end;\n  border-radius: 0;\n  box-shadow: none !important;\n  border-bottom: 1px solid ${({ theme }) => theme.primary1} !important;\n\n  ::placeholder {\n    font-size: 14px !important;\n    color: ${({ theme }) => transparentize(0.5, theme.darkMode ? 'white' : theme.text1)} !important;\n  }\n\n  :focus::placeholder {\n    color: ${({ theme }) => transparentize(0.3, theme.darkMode ? 'white' : theme.text1)} !important;\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    max-width: 350px;\n  `};\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    text-align: center;\n    font-size: 12px !important;\n    align-self: flex-start;\n    max-width: 100%;\n\n    ::placeholder {\n      font-size: 12px !important;\n    }\n  `};\n`\n\nexport const Wrapper = styled.div`\n  width: 100%;\n  border: none;\n  padding: 0;\n`\n\nexport const ResponsiveGrid = styled.div`\n  display: grid;\n  grid-gap: 1em;\n  align-items: center;\n  text-align: left;\n  border-bottom: 1px solid ${({ theme }) => (theme.darkMode ? theme.text3 : transparentize(0.5, theme.primary1))};\n  grid-template-columns: 50px minmax(80px, auto) minmax(70px, 140px) minmax(70px, 140px) repeat(2, 55px) 100px;\n\n  ${({ theme }) => theme.mediaWidth.upToLarge`\n    grid-template-columns: 50px minmax(80px, 100px) minmax(70px, 140px) minmax(70px, 140px) repeat(2, 55px) 100px;\n  `};\n`\n\nexport const LinkWrapper = styled(Link)`\n  text-decoration: none;\n  padding: 0.8rem 0;\n  display: flex;\n  align-items: center;\n\n  :hover {\n    cursor: pointer;\n    opacity: 0.7;\n  }\n`\n\nexport const ResponsiveLogo = styled(CurrencyLogo)`\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    width: 16px;\n    height: 16px;\n  `};\n`\n\nexport const Label = styled(ThemedText.Label)<{ end?: number }>`\n  display: flex;\n  font-size: 14px;\n  font-weight: 400;\n  justify-content: ${({ end }) => (end ? 'flex-end' : 'flex-start')};\n  color: ${({ theme }) => theme.text1};\n  align-items: center;\n  font-variant-numeric: tabular-nums;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    font-size: 12px;\n  `};\n`\n\nexport const ClickableText = styled(Label)<{ disabled?: boolean }>`\n  text-align: end;\n  user-select: none;\n\n  ${({ disabled }) =>\n    !disabled &&\n    `\n    &:hover {\n      cursor: pointer;\n      opacity: 0.6;\n    }\n  `}\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    font-size: 12px;\n  `};\n`\n\nexport const PageButtons = styled.div`\n  width: 100%;\n  display: flex;\n  align-items: center;\n  justify-content: center;\n  margin-top: 0.8em;\n  margin-bottom: 0.5em;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    font-size: 12px;\n  `};\n`\n\nexport const PaginationText = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    font-size: 12px;\n  `};\n\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    font-size: 10px;\n  `};\n\n  white-space: nowrap;\n`\n\nexport const ArrowButton = styled.button`\n  background: none;\n  border: none;\n`\n\nexport const Arrow = styled.div<{ faded: boolean }>`\n  color: ${({ theme }) => theme.primary1};\n  opacity: ${(props) => (props.faded ? 0.3 : 1)};\n  padding: 0 10px;\n  user-select: none;\n\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    padding: 5px;\n  `};\n\n  ${({ faded }) =>\n    !faded &&\n    `\n    :hover {\n      cursor: pointer;\n    }\n  `}\n`\n\nexport const Break = styled.div`\n  height: 1px;\n  background-color: ${({ theme }) => theme.bg5};\n  width: 100%;\n`\n\nexport const HideLarge = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToLarge`\n    display: none;\n  `};\n`\n\nexport const HideMedium = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: none;\n  `};\n`\n\nexport const HideExtraSmall = styled.span`\n  ${({ theme }) => theme.mediaWidth.upToExtraSmall`\n    display: none;\n  `};\n`\n\nexport const MediumOnly = styled.span`\n  display: none;\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    display: block;\n  `};\n`\n\nexport const LargeOnly = styled.span`\n  display: none;\n  ${({ theme }) => theme.mediaWidth.upToLarge`\n    display: block;\n  `};\n`\n\nexport const TableHeader = styled(ResponsiveGrid)`\n  padding: 1.2rem 0;\n  background: ${({ theme }) => (theme.darkMode ? transparentize(0.9, theme.bg2) : transparentize(0.7, theme.bg4))};\n`\n\nexport const TableBody = styled(AutoColumn)`\n  margin-bottom: 0.8rem;\n`\n\nexport const Cell = styled.div<{ center?: boolean }>`\n  display: flex;\n  padding: 1rem 0;\n  justify-content: ${({ center }) => (center ? 'center' : 'flex-start')};\n\n  > * {\n    max-width: 100%;\n    overflow: hidden;\n    text-overflow: ellipsis;\n  }\n`\n\nexport const IndexNumber = styled.span`\n  font-size: 14px;\n  font-weight: 400;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    font-size: 12px;\n  `};\n`\n\nexport const BalanceValue = styled.span<{ hasBalance: boolean }>`\n  color: ${({ hasBalance, theme }) => theme[hasBalance ? 'text1' : 'text3']};\n  font-variant-numeric: tabular-nums;\n  font-weight: 400;\n  font-size: 14px;\n  white-space: nowrap;\n  max-width: 100%;\n  overflow: hidden;\n  text-overflow: ellipsis;\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    font-size: 12px;\n  `};\n`\n\nexport const TableButton = styled(BaseButton)<{ color?: string; outlined?: boolean; text?: boolean }>`\n  font-size: 12px;\n  padding: 3px 15px;\n  width: auto;\n  font-weight: 400;\n  transition: all 0.15s ease-in;\n  background: ${({ theme, color }) => transparentize(0.2, color || theme.primary1)};\n  white-space: nowrap;\n  position: relative;\n\n  :hover {\n    background: ${({ theme, color }) => color || theme.primary1};\n  }\n\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    font-size: 10px;\n  `};\n\n  ${({ theme, outlined, color }) =>\n    outlined &&\n    `\n      background: transparent;\n      color: ${color || theme.primary1};\n      border: 1px solid ${color || theme.primary1};\n      :hover {\n        color: white;\n      }\n  `};\n\n  ${({ theme, text, color }) =>\n    text &&\n    `\n      background: none;\n      border: none;\n      color: ${color || theme.primary1};\n      padding: 0;\n\n      :hover {\n        background: none;\n      }\n  `};\n`\n\nexport const Table = styled(AutoColumn)`\n  overflow-y: auto;\n  scrollbar-color: ${({ theme }) => `${theme.card.border} ${theme.card.background2}`};\n  scroll-behavior: smooth;\n\n  &::-webkit-scrollbar {\n    height: 6px;\n    background: ${({ theme }) => `${theme.card.background2}`} !important;\n  }\n\n  &::-webkit-scrollbar-thumb {\n    background: ${({ theme }) => `${theme.card.border}`} !important;\n    border: 3px solid transparent;\n    background-clip: padding-box;\n  }\n\n  &::-webkit-scrollbar-track {\n    height: 5px;\n  }\n`\n\nexport const TokenText = styled.div`\n  display: flex;\n  align-items: center;\n  text-align: left;\n`\n\nexport const ApproveLabel = styled.span<{ color?: string }>`\n  font-size: 12px;\n  color: ${({ theme, color }) => color || theme.text1};\n`\n\nexport const CustomLimit = styled.div`\n  span:last-child {\n    cursor: default;\n    font-size: 10px;\n    margin-top: 5px;\n    display: block;\n  }\n`\n\nexport const IndexLabel = styled(Label)`\n  padding-left: 15px;\n`\n\nexport const FiatValue = styled.div`\n  display: flex;\n  align-items: center;\n`\n\nexport const InfoCircle = styled(HelpCircle)`\n  stroke: ${({ theme }) => theme.primary1};\n  width: 15px;\n  height: 15px;\n  margin-left: 5px;\n  vertical-align: middle;\n  margin-bottom: 2px;\n`\n","import { useCallback, useMemo } from 'react'\nimport { Token } from '@uniswap/sdk-core'\nimport { useFavouriteTokens, useToggleFavouriteToken } from 'state/user/hooks'\nimport { ButtonStar } from 'components/Button'\nimport useTheme from 'hooks/useTheme'\nimport styled from 'styled-components/macro'\n\nexport const StyledButtonStar = styled(ButtonStar)`\n  z-index: 9;\n`\n\ntype FavouriteTokenButtonParams = {\n  tokenData: Token\n}\n\nexport default function FavouriteTokenButton({ tokenData }: FavouriteTokenButtonParams) {\n  const favouriteTokens = useFavouriteTokens()\n  const theme = useTheme()\n\n  const toggleFavouriteToken = useToggleFavouriteToken()\n\n  const handleFavouriteToken = useCallback(\n    (event) => {\n      event.preventDefault()\n      toggleFavouriteToken(tokenData)\n    },\n    [toggleFavouriteToken, tokenData]\n  )\n\n  const isFavouriteToken = useMemo(\n    () => favouriteTokens.some((t: Token) => t.address === tokenData.address),\n    [favouriteTokens, tokenData]\n  )\n\n  return (\n    <StyledButtonStar\n      stroke={theme.yellow2}\n      fill={isFavouriteToken ? theme.yellow2 : undefined}\n      onClick={handleFavouriteToken}\n    />\n  )\n}\n","import { Token, CurrencyAmount } from '@uniswap/sdk-core'\nimport { useWeb3React } from '@web3-react/core'\nimport { BalanceValue } from './styled'\nimport { formatSmart, formatMax } from 'utils/format'\nimport Loader from 'components/Loader'\n\ntype BalanceCellProps = {\n  balance: CurrencyAmount<Token> | undefined\n}\n\nexport default function BalanceCell({ balance }: BalanceCellProps) {\n  const { account } = useWeb3React()\n  const hasBalance = balance?.greaterThan(0)\n  const formattedBalance = formatSmart(balance) || 0\n\n  if (!balance) {\n    return account ? <Loader /> : <BalanceValue hasBalance={false}>0</BalanceValue>\n  }\n\n  return (\n    <BalanceValue title={formatMax(balance, balance.currency.decimals)} hasBalance={!!hasBalance}>\n      {formattedBalance}\n    </BalanceValue>\n  )\n}\n","import { Trans } from '@lingui/macro'\nimport { Token, CurrencyAmount } from '@uniswap/sdk-core'\nimport { useHigherUSDValue } from 'hooks/useStablecoinPrice'\nimport { FIAT_PRECISION } from 'constants/index'\nimport { BalanceValue, InfoCircle, FiatValue } from './styled'\nimport { formatMax, formatSmart } from 'utils/format'\nimport { MouseoverTooltip } from 'components/Tooltip'\n\ntype FiatBalanceCellProps = {\n  balance: CurrencyAmount<Token> | undefined\n}\n\nexport default function FiatBalanceCell({ balance }: FiatBalanceCellProps) {\n  const hasBalance = balance?.greaterThan(0)\n  const fiatValue = useHigherUSDValue(balance)\n  const formattedFiatValue = formatSmart(fiatValue, FIAT_PRECISION, {\n    thousandSeparator: true,\n    isLocaleAware: true,\n  })\n\n  return (\n    <BalanceValue title={formatMax(fiatValue || undefined, fiatValue?.currency.decimals)} hasBalance={!!hasBalance}>\n      {formattedFiatValue ? (\n        <span>$ {formattedFiatValue}</span>\n      ) : (\n        <FiatValue>\n          <span>$ 0.00</span>\n          <MouseoverTooltip text={<Trans>Value may be zero due to missing token price information</Trans>}>\n            <InfoCircle size=\"20\" color={'white'} />\n          </MouseoverTooltip>\n        </FiatValue>\n      )}\n    </BalanceValue>\n  )\n}\n","import { useState, useMemo, useCallback, useEffect } from 'react'\nimport { Token, CurrencyAmount, MaxUint256 } from '@uniswap/sdk-core'\nimport { RowFixed } from 'components/Row'\nimport useTheme from 'hooks/useTheme'\nimport {\n  TokenText,\n  ResponsiveGrid,\n  Label,\n  LargeOnly,\n  HideLarge,\n  ResponsiveLogo,\n  IndexNumber,\n  Cell,\n  TableButton,\n  ApproveLabel,\n  CustomLimit,\n  BalanceValue,\n} from './styled'\nimport FavouriteTokenButton from './FavouriteTokenButton'\nimport { formatMax, formatSmart } from 'utils/format'\nimport { useApproveCallback, ApprovalState } from 'hooks/useApproveCallback'\nimport { OperationType } from 'components/TransactionConfirmationModal'\nimport { useErrorModal } from 'hooks/useErrorMessageAndModal'\nimport { CardsSpinner } from 'pages/Account/styled'\nimport usePrevious from 'hooks/usePrevious'\nimport { useTokenAllowance } from 'hooks/useTokenAllowance'\nimport { useWeb3React } from '@web3-react/core'\nimport { GP_VAULT_RELAYER, AMOUNT_PRECISION } from 'constants/index'\nimport { OrderKind } from '@cowprotocol/contracts'\nimport BalanceCell from './BalanceCell'\nimport FiatBalanceCell from './FiatBalanceCell'\nimport Loader from 'components/Loader'\n\ntype DataRowParams = {\n  tokenData: Token\n  index: number\n  balance?: CurrencyAmount<Token> | undefined\n  handleBuyOrSell: (token: Token, type: OrderKind) => void\n  closeModals: () => void\n  openTransactionConfirmationModal: (message: string, operationType: OperationType) => void\n  toggleWalletModal: () => void\n}\n\nconst DataRow = ({\n  tokenData,\n  index,\n  balance,\n  handleBuyOrSell,\n  closeModals,\n  openTransactionConfirmationModal,\n  toggleWalletModal,\n}: DataRowParams) => {\n  const { account, chainId } = useWeb3React()\n\n  const theme = useTheme()\n\n  // allowance\n  const spender = chainId ? GP_VAULT_RELAYER[chainId] : undefined\n  const currentAllowance = useTokenAllowance(tokenData, account ?? undefined, spender)\n\n  // approve\n  const [approving, setApproving] = useState(false)\n\n  const { handleSetError, handleCloseError } = useErrorModal()\n\n  const vaultRelayer = chainId ? GP_VAULT_RELAYER[chainId] : undefined\n  const amountToApprove = CurrencyAmount.fromRawAmount(tokenData, MaxUint256)\n  const amountToCheckAgainstAllowance = currentAllowance?.equalTo(0) ? undefined : balance\n\n  const { approvalState, approve } = useApproveCallback({\n    openTransactionConfirmationModal,\n    closeModals,\n    spender: vaultRelayer,\n    amountToApprove,\n    amountToCheckAgainstAllowance,\n  })\n\n  const prevApprovalState = usePrevious(approvalState)\n\n  const handleApprove = useCallback(async () => {\n    handleCloseError()\n\n    if (!account) {\n      toggleWalletModal()\n      return\n    }\n\n    // TODO: make a separate hook out of this and add GA\n    try {\n      setApproving(true)\n      const summary = `Approve ${tokenData?.symbol || 'token'}`\n      await approve({ modalMessage: summary, transactionSummary: summary })\n    } catch (error) {\n      console.error(`[TokensTableRow]: Issue approving.`, error)\n      handleSetError(error?.message)\n    } finally {\n      setApproving(false)\n    }\n  }, [account, approve, handleCloseError, handleSetError, toggleWalletModal, tokenData?.symbol])\n\n  const isApproved = approvalState === ApprovalState.APPROVED\n  const isPendingOnchainApprove = approvalState === ApprovalState.PENDING\n  const isPendingApprove = !isApproved && (approving || isPendingOnchainApprove)\n\n  const hasZeroBalance = !balance || balance?.equalTo(0)\n  const hasNoAllowance = !currentAllowance || currentAllowance.equalTo(0)\n\n  // This is so we only create fiat value request if there is a balance\n  const fiatValue = useMemo(() => {\n    if (!balance && account) {\n      return <Loader />\n    } else if (hasZeroBalance) {\n      return <BalanceValue hasBalance={false}>0</BalanceValue>\n    } else {\n      return <FiatBalanceCell balance={balance} />\n    }\n  }, [account, balance, hasZeroBalance])\n\n  const displayApproveContent = useMemo(() => {\n    if (isPendingApprove) {\n      return <CardsSpinner />\n    } else if (!isApproved && !hasNoAllowance) {\n      return (\n        <CustomLimit>\n          <TableButton onClick={handleApprove} color={theme.primary1}>\n            Approve all\n          </TableButton>\n          <ApproveLabel\n            color={theme.green1}\n            title={`Approved: ${formatMax(currentAllowance, currentAllowance.currency.decimals)}`}\n          >\n            Approved: <strong>{formatSmart(currentAllowance, AMOUNT_PRECISION)}</strong>\n          </ApproveLabel>\n        </CustomLimit>\n      )\n    } else if (!isApproved || hasNoAllowance) {\n      return (\n        <TableButton onClick={handleApprove} color={theme.primary1}>\n          Approve\n        </TableButton>\n      )\n    } else {\n      return <ApproveLabel color={theme.green1}>Approved ✓</ApproveLabel>\n    }\n  }, [currentAllowance, handleApprove, isApproved, isPendingApprove, hasNoAllowance, theme.green1, theme.primary1])\n\n  useEffect(() => {\n    if (approvalState === ApprovalState.PENDING) {\n      setApproving(true)\n    } else if (prevApprovalState === ApprovalState.PENDING && approvalState === ApprovalState.NOT_APPROVED) {\n      setApproving(false)\n    }\n  }, [approvalState, prevApprovalState, approving])\n\n  return (\n    <ResponsiveGrid>\n      <Cell>\n        <FavouriteTokenButton tokenData={tokenData} />\n        <IndexNumber>{index + 1}</IndexNumber>\n      </Cell>\n\n      <Cell>\n        <RowFixed>\n          <ResponsiveLogo currency={tokenData} />\n        </RowFixed>\n\n        <TokenText>\n          <LargeOnly style={{ marginLeft: '10px' }}>\n            <Label>{tokenData.symbol}</Label>\n          </LargeOnly>\n\n          <HideLarge style={{ marginLeft: '10px' }}>\n            <RowFixed>\n              <Label fontWeight={400} ml=\"8px\" color={theme.text1}>\n                {tokenData.name}\n              </Label>\n              <Label ml=\"8px\" color={theme.primary5}>\n                ({tokenData.symbol})\n              </Label>\n            </RowFixed>\n          </HideLarge>\n        </TokenText>\n      </Cell>\n\n      <Cell>\n        <BalanceCell balance={balance} />\n      </Cell>\n\n      <Cell>{fiatValue}</Cell>\n\n      <Cell>\n        <TableButton onClick={() => handleBuyOrSell(tokenData, OrderKind.BUY)} color={theme.green1}>\n          Buy\n        </TableButton>\n      </Cell>\n\n      <Cell>\n        <TableButton onClick={() => handleBuyOrSell(tokenData, OrderKind.SELL)} color={theme.red1}>\n          Sell\n        </TableButton>\n      </Cell>\n\n      <Cell>{displayApproveContent}</Cell>\n    </ResponsiveGrid>\n  )\n}\n\nexport default DataRow\n","import { Currency, CurrencyAmount, Token } from '@uniswap/sdk-core'\nimport { useMemo } from 'react'\n\nimport { useAllTokenBalances } from 'state/connection/hooks'\n\nconst PRIORITISED_TOKENS = ['COW', 'GNO']\n\n// compare two token amounts with highest one coming first\nexport function balanceComparator(balanceA?: CurrencyAmount<Currency>, balanceB?: CurrencyAmount<Currency>) {\n  if (balanceA && balanceB) {\n    return balanceA.greaterThan(balanceB) ? -1 : balanceA.equalTo(balanceB) ? 0 : 1\n  } else if (balanceA && balanceA.greaterThan('0')) {\n    return -1\n  } else if (balanceB && balanceB.greaterThan('0')) {\n    return 1\n  }\n  return 0\n}\n\nfunction getTokenComparator(\n  balances: [{ [tokenAddress: string]: CurrencyAmount<Token> | undefined }, boolean]\n): (tokenA: Token, tokenB: Token) => number {\n  return function sortTokens(tokenA: Token, tokenB: Token): number {\n    // -1 = a is first\n    // 1 = b is first\n\n    // sort by balances\n    const balanceA = balances[0][tokenA.address]\n    const balanceB = balances[0][tokenB.address]\n\n    const balanceComp = balanceComparator(balanceA, balanceB)\n    if (balanceComp !== 0) return balanceComp\n\n    // Mod: modify tokens list by prioritised list\n    const indexA = PRIORITISED_TOKENS.indexOf(tokenA.symbol || '')\n    const indexB = PRIORITISED_TOKENS.indexOf(tokenB.symbol || '')\n\n    if (indexA !== -1 && indexB !== -1) {\n      return indexB < indexA ? 1 : -1\n    } else if (indexA !== -1 || indexB !== -1) {\n      return indexB !== -1 ? 1 : -1\n    }\n\n    if (tokenA.symbol && tokenB.symbol) {\n      // sort by symbol\n      return tokenA.symbol.toLowerCase() < tokenB.symbol.toLowerCase() ? -1 : 1\n    } else {\n      return tokenA.symbol ? -1 : tokenB.symbol ? -1 : 0\n    }\n  }\n}\n\nexport function useTokenComparator(inverted: boolean): (tokenA: Token, tokenB: Token) => number {\n  const balances = useAllTokenBalances()\n  const comparator = useMemo(() => getTokenComparator(balances ?? {}), [balances])\n  return useMemo(() => {\n    if (inverted) {\n      return (tokenA: Token, tokenB: Token) => comparator(tokenA, tokenB) * -1\n    } else {\n      return comparator\n    }\n  }, [inverted, comparator])\n}\n","import { useState, useMemo, useCallback, useEffect, useRef } from 'react'\nimport { Trans } from '@lingui/macro'\nimport { Token, CurrencyAmount } from '@uniswap/sdk-core'\nimport { AutoColumn } from 'components/Column'\nimport TokensTableRow from './TokensTableRow'\nimport {\n  Label,\n  Wrapper,\n  TableHeader,\n  TableBody,\n  PageButtons,\n  Arrow,\n  ArrowButton,\n  ClickableText,\n  Table,\n  PaginationText,\n  IndexLabel,\n  InfoCircle,\n} from './styled'\nimport { balanceComparator, useTokenComparator } from 'components/SearchModal/CurrencySearch/sorting'\nimport { useHistory } from 'react-router-dom'\nimport { OperationType } from 'components/TransactionConfirmationModal'\nimport { useErrorModal } from 'hooks/useErrorMessageAndModal'\nimport useTransactionConfirmationModal from 'hooks/useTransactionConfirmationModal'\nimport { useToggleWalletModal } from 'state/application/hooks'\nimport usePrevious from 'hooks/usePrevious'\nimport { OrderKind } from '@cowprotocol/contracts'\nimport { MouseoverTooltip } from 'components/Tooltip'\nimport useNativeCurrency from 'lib/hooks/useNativeCurrency'\nimport useFilterTokens from 'hooks/useFilterTokens'\n\nconst MAX_ITEMS = 10\n\nenum SORT_FIELD {\n  NAME = 'name',\n  BALANCE = 'balance',\n}\n\ntype BalanceType = [\n  {\n    [tokenAddress: string]: CurrencyAmount<Token> | undefined\n  },\n  boolean\n]\n\ntype TokenTableParams = {\n  tokensData: Token[] | undefined\n  maxItems?: number\n  balances?: BalanceType\n  page: number\n  setPage: (page: number) => void\n  query: string\n  prevQuery: string\n  debouncedQuery: string\n}\n\nexport enum TableType {\n  OVERVIEW = 'OVERVIEW',\n  FAVOURITE = 'FAVOURITE',\n}\n\nexport default function TokenTable({\n  tokensData: rawTokensData = [],\n  maxItems = MAX_ITEMS,\n  balances,\n  page,\n  setPage,\n  query,\n  prevQuery,\n  debouncedQuery,\n}: TokenTableParams) {\n  // const { account } = useWeb3React()\n  const native = useNativeCurrency()\n\n  const toggleWalletModal = useToggleWalletModal()\n  const tableRef = useRef<HTMLTableElement | null>(null)\n\n  // reset pagination when user is in a page > 1, searching and deletes query\n  useEffect(() => {\n    // already on page 1, ignore\n    if (page === 1) return\n\n    // if there was some query and user deletes it\n    // reset page\n    if (!!prevQuery && !query) {\n      setPage(1)\n    }\n  }, [query, page, setPage, prevQuery])\n\n  const tokensData = useFilterTokens(rawTokensData, debouncedQuery)\n\n  // sorting\n  const [sortField, setSortField] = useState<SORT_FIELD | null>(null)\n  const [sortDirection, setSortDirection] = useState<boolean>(true)\n\n  const tokenComparator = useTokenComparator(false)\n\n  const applyDirection = useCallback((condition: boolean, sortDirection: boolean) => {\n    return (condition ? -1 : 1) * (sortDirection ? -1 : 1)\n  }, [])\n\n  // pagination\n  const [maxPage, setMaxPage] = useState(1)\n  const prevPage = page === 1 ? page : page - 1\n  const nextPage = page === maxPage ? page : page + 1\n  const prevPageIndex = usePrevious(page)\n\n  // token index\n  const getTokenIndex = useCallback((i: number) => (page - 1) * MAX_ITEMS + i, [page])\n\n  // buy and sell\n  const history = useHistory()\n\n  const handleBuyOrSell = useCallback(\n    (token: Token, type: OrderKind) => {\n      const typeQuery = type === OrderKind.BUY ? 'outputCurrency' : 'inputCurrency'\n      history.push(`/swap?${typeQuery}=${token.address}`)\n    },\n    [history]\n  )\n\n  const { ErrorModal } = useErrorModal()\n\n  const { TransactionConfirmationModal, openModal, closeModal } = useTransactionConfirmationModal(\n    OperationType.APPROVE_TOKEN\n  )\n\n  const sortedTokens = useMemo(() => {\n    return tokensData\n      ? tokensData\n          .filter((x) => !!x)\n          .sort((tokenA, tokenB) => {\n            if (!sortField) {\n              // If there is no sort field selected (default)\n              return tokenComparator(tokenA, tokenB)\n            } else if (sortField === SORT_FIELD.BALANCE) {\n              // If the sort field is Balance\n              if (!balances) return 0\n\n              const balanceA = balances[0][tokenA.address]\n              const balanceB = balances[0][tokenB.address]\n              const balanceComp = balanceComparator(balanceA, balanceB)\n\n              return applyDirection(balanceComp > 0, sortDirection)\n            } else {\n              // If the sort field is something else\n              const sortA = tokenA[sortField]\n              const sortB = tokenB[sortField]\n\n              if (!sortA || !sortB) return 0\n              return applyDirection(sortA > sortB, sortDirection)\n            }\n          })\n          .slice(maxItems * (page - 1), page * maxItems)\n      : []\n  }, [tokensData, maxItems, page, sortField, tokenComparator, balances, applyDirection, sortDirection])\n\n  const handleSort = useCallback(\n    (newField: SORT_FIELD | null) => {\n      let newDirection\n\n      // Reset to default order on 3rd click of the same sort field\n      // meaning on first click the sortDirection will be set to true,\n      // on second one to false and this will match the third click\n      if (sortField === newField && sortDirection === false) {\n        newField = null\n        newDirection = true\n        // This will match the first click on new sort field\n      } else if (sortField === null) {\n        newDirection = true\n        // This will match the second click on the same field\n      } else if (sortField === newField) {\n        newDirection = !sortDirection\n      } else {\n        newDirection = true\n      }\n\n      setSortField(newField)\n      setSortDirection(newDirection)\n    },\n    [sortDirection, sortField]\n  )\n\n  const arrow = useCallback(\n    (field: SORT_FIELD) => {\n      return sortField === field ? (!sortDirection ? '↑' : '↓') : ''\n    },\n    [sortDirection, sortField]\n  )\n\n  useEffect(() => {\n    let extraPages = 1\n    if (tokensData) {\n      if (tokensData.length % maxItems === 0) {\n        extraPages = 0\n      }\n      setMaxPage(Math.floor(tokensData.length / maxItems) + extraPages)\n    }\n  }, [maxItems, tokensData])\n\n  // for small screens, auto-scrolls table to the left on the page change\n  useEffect(() => {\n    if (prevPageIndex !== page && tableRef.current) {\n      tableRef.current.scrollLeft = 0\n    }\n  }, [page, prevPageIndex])\n\n  return (\n    <Wrapper>\n      <ErrorModal />\n      <TransactionConfirmationModal />\n      {tokensData && sortedTokens.length !== 0 ? (\n        <AutoColumn>\n          <Table ref={tableRef}>\n            <TableHeader>\n              <IndexLabel>#</IndexLabel>\n              <ClickableText onClick={() => handleSort(SORT_FIELD.NAME)}>\n                <Trans>Name {arrow(SORT_FIELD.NAME)}</Trans>\n              </ClickableText>\n              <ClickableText disabled={true} /* onClick={() => (account ? handleSort(SORT_FIELD.BALANCE) : false)} */>\n                <Trans>Balance {arrow(SORT_FIELD.BALANCE)}</Trans>\n              </ClickableText>\n              <Label>Value</Label>\n              <Label>Buy</Label>\n              <Label>Sell</Label>\n              <Label>\n                <span>Approve</span>\n                <MouseoverTooltip\n                  text={\n                    <Trans>\n                      Enable token for trading. This only need to be done once. Once it is enabled, you can place orders\n                      for free using meta-transactions (no {native.name} is required)\n                    </Trans>\n                  }\n                >\n                  <InfoCircle size=\"20\" color={'white'} />\n                </MouseoverTooltip>\n              </Label>\n            </TableHeader>\n\n            <TableBody>\n              {sortedTokens.map((data, i) => {\n                if (data) {\n                  return (\n                    <TokensTableRow\n                      key={data.address}\n                      handleBuyOrSell={handleBuyOrSell}\n                      toggleWalletModal={toggleWalletModal}\n                      balance={balances && balances[0][data.address]}\n                      openTransactionConfirmationModal={openModal}\n                      closeModals={closeModal}\n                      index={getTokenIndex(i)}\n                      tokenData={data}\n                    />\n                  )\n                }\n                return null\n              })}\n            </TableBody>\n          </Table>\n\n          <PageButtons>\n            <ArrowButton onClick={() => setPage(1)}>\n              <Arrow faded={page === 1}>{'<<'}</Arrow>\n            </ArrowButton>\n\n            <ArrowButton onClick={() => setPage(prevPage)}>\n              <Arrow faded={page === 1}>←</Arrow>\n            </ArrowButton>\n\n            <PaginationText>\n              <Trans>{'Page ' + page + ' of ' + maxPage}</Trans>\n            </PaginationText>\n\n            <ArrowButton onClick={() => setPage(nextPage)}>\n              <Arrow faded={page === maxPage}>→</Arrow>\n            </ArrowButton>\n\n            <ArrowButton onClick={() => setPage(maxPage)}>\n              <Arrow faded={page === maxPage}>{'>>'}</Arrow>\n            </ArrowButton>\n          </PageButtons>\n        </AutoColumn>\n      ) : (\n        <small>{'No results found :('}</small>\n      )}\n    </Wrapper>\n  )\n}\n","import { useMemo } from 'react'\nimport { isAddress } from 'utils'\nimport { Token } from '@uniswap/sdk-core'\n\nexport default function useFilterTokens(tokens: Token[], query: string): Token[] {\n  return useMemo(() => {\n    // only calc anything if we actually have more than 1 token in list\n    // and the user is actively searching tokens\n    if (tokens.length === 0 || !query.length) {\n      return tokens\n    }\n\n    // if user is searching by address\n    const searchAddress = isAddress(query)\n    const queryParts = query\n      .toLowerCase()\n      .split(/\\+s/)\n      .filter((s) => s.length)\n\n    return tokens.filter((token: Token) => {\n      if (searchAddress) {\n        // first search by address if its address\n        return 'address' in token && searchAddress.toLowerCase() === token.address.toLowerCase()\n      } else {\n        // else search by symbol or name\n        return [token.name?.toLowerCase(), token.symbol?.toLowerCase()].some((tokenPart: string | undefined) =>\n          queryParts.some((queryPart: string) => tokenPart?.includes(queryPart))\n        )\n      }\n    })\n  }, [tokens, query])\n}\n","// eslint-disable-next-line no-restricted-imports\nimport { Trans, t } from '@lingui/macro'\nimport { useEffect, useMemo, useState, useCallback, useRef } from 'react'\nimport { Token } from '@uniswap/sdk-core'\nimport {\n  Menu,\n  MenuButton,\n  MenuItem,\n  MenuWrapper,\n  StyledChevronDown,\n  Subtitle,\n  AccountHeading,\n  RemoveTokens,\n  LeftSection,\n  ClearSearchInput,\n  Overview,\n} from './styled'\nimport { TokenSearchInput } from 'components/Tokens/styled'\nimport { useAllTokens } from 'hooks/Tokens'\nimport { isTruthy } from 'utils/misc'\nimport TokensTable from 'components/Tokens/TokensTable'\nimport { useFavouriteTokens, useRemoveAllFavouriteTokens, useInitFavouriteTokens } from 'state/user/hooks'\nimport { useAllTokenBalances } from 'state/connection/hooks'\nimport { Check } from 'react-feather'\nimport { useOnClickOutside } from 'hooks/useOnClickOutside'\nimport useTheme from 'hooks/useTheme'\nimport usePrevious from 'hooks/usePrevious'\nimport { useWeb3React } from '@web3-react/core'\nimport { CardsLoader, CardsSpinner } from '../styled'\nimport { supportedChainId } from 'utils/supportedChainId'\nimport { ContentWrapper as SearchInputFormatter } from 'components/SearchModal/CurrencySearch'\nimport useDebounce from 'hooks/useDebounce'\nimport { isAddress } from 'utils'\nimport { CloseIcon } from 'theme'\n\nexport enum PageViewKeys {\n  ALL_TOKENS = 'ALL_TOKENS',\n  FAVORITE_TOKENS = 'FAVORITE_TOKENS',\n}\n\nconst PageView = {\n  [PageViewKeys.ALL_TOKENS]: {\n    label: 'All tokens',\n  },\n  [PageViewKeys.FAVORITE_TOKENS]: {\n    label: 'Favorite tokens',\n  },\n}\n\nexport default function TokensOverview() {\n  useInitFavouriteTokens()\n  const { chainId, provider, account } = useWeb3React()\n\n  const [isMenuOpen, setIsMenuOpen] = useState<boolean>(false)\n  const [selectedView, setSelectedView] = useState<PageViewKeys>(PageViewKeys.ALL_TOKENS)\n  const [page, setPage] = useState<number>(1)\n\n  const prevChainId = usePrevious(chainId)\n  const prevSelectedView = usePrevious(selectedView)\n  const prevAccount = usePrevious(account)\n\n  const isChainSupported = supportedChainId(chainId)\n\n  useEffect(() => {\n    window.scrollTo(0, 0)\n  }, [])\n\n  const theme = useTheme()\n  const allTokens = useAllTokens()\n  const favouriteTokens = useFavouriteTokens()\n  const balances = useAllTokenBalances()\n\n  // search - takes precedence re:filtering\n  const [query, setQuery] = useState<string>('')\n  const debouncedQuery = useDebounce(query, 300)\n  const prevQuery = usePrevious(debouncedQuery)\n\n  const removeAllFavouriteTokens = useRemoveAllFavouriteTokens()\n  const handleRestoreTokens = useCallback(() => {\n    removeAllFavouriteTokens()\n    setPage(1)\n  }, [removeAllFavouriteTokens])\n\n  const formattedTokens = useMemo(() => {\n    return Object.values(allTokens).filter(isTruthy)\n  }, [allTokens])\n\n  const toggleMenu = useCallback(() => setIsMenuOpen(!isMenuOpen), [isMenuOpen])\n  const handleMenuClick = useCallback((view: PageViewKeys) => {\n    setSelectedView(view)\n    setIsMenuOpen(false)\n  }, [])\n\n  const node = useRef<HTMLDivElement>()\n  useOnClickOutside(node, isMenuOpen ? toggleMenu : undefined)\n\n  const renderTableContent = useCallback(() => {\n    let tokensData: Token[] = []\n\n    if (selectedView === PageViewKeys.ALL_TOKENS) {\n      tokensData = formattedTokens\n    } else if (selectedView === PageViewKeys.FAVORITE_TOKENS) {\n      tokensData = favouriteTokens\n    }\n\n    if (!provider) {\n      return (\n        <CardsLoader style={{ minHeight: '200px' }}>\n          <CardsSpinner size=\"24px\" />\n        </CardsLoader>\n      )\n    } else if (!isChainSupported) {\n      return <Trans>Unsupported network</Trans>\n    }\n\n    return (\n      <TokensTable\n        page={page}\n        query={query}\n        prevQuery={prevQuery || ''}\n        debouncedQuery={debouncedQuery || ''}\n        setPage={setPage}\n        balances={balances}\n        tokensData={tokensData}\n      />\n    )\n  }, [\n    balances,\n    debouncedQuery,\n    favouriteTokens,\n    formattedTokens,\n    isChainSupported,\n    page,\n    prevQuery,\n    provider,\n    query,\n    selectedView,\n  ])\n\n  const handleSearch = useCallback(\n    (event) => {\n      const input = event.target.value.trim()\n      const checksummedInput = isAddress(input)\n      setQuery(checksummedInput || input)\n      if (page !== 1) setPage(1)\n    },\n    [page, setPage]\n  )\n\n  const handleSearchClear = useCallback(() => {\n    setQuery('')\n  }, [])\n\n  // reset table to page 1 on chain, account or view change\n  useEffect(() => {\n    if (chainId !== prevChainId || selectedView !== prevSelectedView || account !== prevAccount) {\n      setPage(1)\n    }\n  }, [account, chainId, prevAccount, prevChainId, prevSelectedView, selectedView])\n\n  return (\n    <Overview useFlex={false} padding={'20px 30px 30px'}>\n      {isChainSupported && (\n        <AccountHeading>\n          <LeftSection>\n            <MenuWrapper ref={node as any}>\n              <MenuButton onClick={toggleMenu}>\n                <Subtitle>\n                  <Trans>{PageView[selectedView].label}</Trans>\n                </Subtitle>\n                <StyledChevronDown size={14} />\n              </MenuButton>\n\n              {isMenuOpen ? (\n                <Menu>\n                  {Object.entries(PageView).map(([key, value]) => (\n                    <MenuItem\n                      key={key}\n                      active={selectedView === key}\n                      onClick={() => handleMenuClick(key as PageViewKeys)}\n                    >\n                      <span>{value.label}</span>\n                      {selectedView === key ? <Check size={20} color={theme.green1} /> : null}\n                    </MenuItem>\n                  ))}\n                </Menu>\n              ) : null}\n            </MenuWrapper>\n\n            {selectedView === PageViewKeys.FAVORITE_TOKENS && (\n              <RemoveTokens onClick={handleRestoreTokens}>\n                (<Trans>Reset favourites</Trans>)\n              </RemoveTokens>\n            )}\n          </LeftSection>\n\n          <SearchInputFormatter>\n            <TokenSearchInput\n              type=\"text\"\n              id=\"token-search-input\"\n              placeholder={t`Search name/symbol or paste address`}\n              autoComplete=\"off\"\n              value={query}\n              onChange={handleSearch}\n            />\n\n            {!!query.length && (\n              <ClearSearchInput>\n                <CloseIcon size={24} onClick={handleSearchClear} />\n              </ClearSearchInput>\n            )}\n          </SearchInputFormatter>\n        </AccountHeading>\n      )}\n\n      {renderTableContent()}\n    </Overview>\n  )\n}\n","import TokensOverview from './TokensOverview'\n\nexport default TokensOverview\n"],"sourceRoot":""}