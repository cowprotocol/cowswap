{"version":3,"sources":["custom/pages/Faq/styled.tsx","custom/pages/Faq/Menu.tsx","custom/pages/Faq/hooks.tsx","custom/pages/Faq/ToC.tsx","custom/pages/Faq/index.tsx","custom/pages/Faq/TradingFaq.tsx"],"names":["ExternalLinkFaq","styled","ExternalLinkTheme","theme","text1","textLink","Wrapper","div","mediaWidth","upToSmall","tableHeadBG","tableRowBG","primary1","Content","FooterWrapper","PageIndex","ButtonNav","ButtonPrimary","transparentize","FaqMenu","FAQ_MENU_LINKS","map","i","title","url","exact","to","activeClassName","useToC","useState","toc","setToc","faqRef","useCallback","node","tocSections","headingNodes","querySelectorAll","items","lastH2","undefined","addNewSection","push","section","forEach","entry","tagName","id","label","innerHTML","getToc","Toc","props","name","href","tocItem","Footer","DISCORD_LINK","target","rel","Routes","HOME","role","onClick","window","scrollTo","top","behavior","Faq","ref","FLASHBOYS_LINK","FLASHBOTS_LINK","MEV_TOTAL","COWWIKI_LINK","GNOSIS_FORUM_ROADTODECENT_LINK","GPAUDIT_LINK","TERMS_CONDITIONS","TokenFaq"],"mappings":"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","file":"static/js/trading_faq.a6776e26.chunk.js","sourcesContent":["import { ExternalLink as ExternalLinkTheme } from 'theme'\nimport styled from 'styled-components/macro'\nimport { Content } from 'components/Page'\nimport { ButtonPrimary } from 'components/Button'\nimport { transparentize } from 'polished'\n\nexport const ExternalLinkFaq = styled(ExternalLinkTheme)`\n  color: ${({ theme }) => theme.text1};\n  text-decoration: underline;\n  font-weight: normal;\n  transition: color 0.2s ease-in-out;\n\n  &:hover {\n    color: ${({ theme }) => theme.textLink};\n  }\n`\n\nexport const Wrapper = styled.div`\n  display: grid;\n  grid-template-columns: 160px auto;\n  flex-direction: column;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    display: flex;\n    flex-flow: column wrap;\n  `}\n\n  #table-container {\n    margin: auto;\n    max-width: 100%;\n\n    > table {\n      width: 100%;\n      border-spacing: 1px;\n      color: ${({ theme }) => theme.text1};\n\n      > thead {\n        background: ${({ theme }) => theme.tableHeadBG};\n      }\n\n      > tbody > tr {\n        background: ${({ theme }) => theme.tableRowBG};\n      }\n\n      > tbody > tr > td > span[role='img'] {\n        font-size: 18px;\n      }\n\n      th,\n      td {\n        text-align: left;\n        padding: 6px 12px;\n\n        &:not(:first-child) {\n          text-align: center;\n        }\n      }\n\n      th {\n        padding: 16px 12px;\n      }\n    }\n  }\n\n  h2 {\n    color: ${({ theme }) => theme.primary1};\n  }\n\n  > div:not(:first-child) {\n    margin: 2rem 0;\n  }\n\n  ${Content} {\n    > div > ul {\n      margin: 12px 0 24px;\n      padding: 0 0 0 20px;\n      color: ${({ theme }) => theme.primary1};\n      line-height: 1.2;\n    }\n\n    > div > ul > li {\n      margin: 0 0 12px;\n    }\n\n    > h3 {\n      margin: 0;\n\n      ::before {\n        border-top: none;\n      }\n    }\n  }\n\n  ol > li {\n    margin-bottom: 0.5rem;\n  }\n`\n\nexport const FooterWrapper = styled.div`\n  display: block;\n  margin: 34px 0 0;\n  padding: 14px 0 0;\n  border-top: 1px solid ${({ theme }) => theme.text1};\n`\n\nexport const PageIndex = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  border-bottom: 1px solid ${({ theme }) => theme.text1};\n`\n\nexport const ButtonNav = styled(ButtonPrimary)`\n  width: min-content;\n  white-space: nowrap;\n`\n\nexport const Menu = styled.div`\n  display: flex;\n  flex-flow: column wrap;\n  font-size: 16px;\n  font-weight: bold;\n  line-height: 1;\n  margin: 0 24px 0 0;\n  color: ${({ theme }) => theme.text1};\n  height: max-content;\n  position: sticky;\n  top: 0;\n  width: 100%;\n  padding: 38px 0 0;\n\n  ${({ theme }) => theme.mediaWidth.upToSmall`\n    padding: 0;\n    position: relative;\n    margin: 0;\n  `}\n\n  > ul {\n    display: flex;\n    flex-flow: column wrap;\n    list-style: none;\n    margin: 0;\n    padding: 0;\n    font-size: inherit;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n      background: ${({ theme }) => transparentize(0.9, theme.text1)};\n      border-radius: 16px;\n      padding: 12px;\n    `}\n  }\n\n  > ul > li {\n    width: 100%;\n  }\n\n  > ul > li > a {\n    margin: 4px 0;\n    padding: 12px;\n    border-radius: 6px;\n    width: 100%;\n    text-decoration: none;\n    color: inherit;\n    opacity: 0.65;\n    transition: opacity 0.2s ease-in-out;\n    display: block;\n\n    ${({ theme }) => theme.mediaWidth.upToSmall`\n      margin: 0;\n    `}\n\n    &:hover,\n    &.active {\n      opacity: 1;\n    }\n\n    &.active {\n      ${({ theme }) => theme.mediaWidth.upToSmall`\n        background: ${({ theme }) => transparentize(0.9, theme.text1)};\n        border-radius: 16px;\n      `}\n    }\n  }\n`\n","import { NavLink } from 'react-router-dom'\nimport { SideMenu } from 'components/SideMenu'\nimport { FAQ_MENU_LINKS } from 'constants/index'\n\nexport function FaqMenu() {\n  return (\n    <SideMenu>\n      <ul>\n        {FAQ_MENU_LINKS.map(({ title, url }, i) => (\n          <li key={i}>\n            <NavLink exact to={url} activeClassName={'active'}>\n              {title}\n            </NavLink>\n          </li>\n        ))}\n      </ul>\n    </SideMenu>\n  )\n}\n","import { TocSection, TocItem } from '.'\nimport { useCallback, useState } from 'react'\n\nfunction getToc(node: HTMLDivElement) {\n  const headingNodes = node.querySelectorAll('h2,h3')\n\n  const tocSections: TocSection[] = []\n  let items: TocItem[] = []\n  let lastH2: TocItem | undefined = undefined\n\n  const addNewSection = () => {\n    if (lastH2 !== undefined) {\n      tocSections.push({\n        section: lastH2,\n        items,\n      })\n      items = []\n    }\n  }\n\n  headingNodes.forEach((entry) => {\n    if (entry.tagName === 'H2') {\n      // If H2\n      addNewSection()\n      lastH2 = {\n        id: entry.id,\n        label: entry.innerHTML,\n      }\n    } else {\n      // If H3\n      items.push({\n        id: entry.id,\n        label: entry.innerHTML,\n      })\n    }\n  })\n\n  addNewSection()\n\n  return tocSections\n}\n\ninterface UseTocParams {\n  faqRef: (node: HTMLDivElement) => void\n  toc: TocSection[]\n}\n\nexport function useToC(): UseTocParams {\n  const [toc, setToc] = useState<TocSection[]>([])\n\n  const faqRef = useCallback((node: HTMLDivElement) => {\n    if (node !== null) {\n      const tocSections = getToc(node)\n      setToc(tocSections)\n    }\n  }, [])\n\n  return { toc, faqRef }\n}\n","import { Content, Title } from 'components/Page'\nimport { LinkScrollable } from 'components/Link'\nimport { TocSection } from '.'\nimport { PageIndex } from './styled'\n\nexport default function Toc(props: { toc: TocSection[]; name: string }) {\n  const { toc, name } = props\n  return (\n    <PageIndex>\n      <Title id=\"cowswap-faq\">{name}</Title>\n      <Content>\n        {toc.map(({ section, items }) => (\n          <div key={section.id}>\n            <LinkScrollable href={'#' + section.id}>{section.label}</LinkScrollable>\n            <ul>\n              {items.map((tocItem) => (\n                <li key={tocItem.id}>\n                  <LinkScrollable href={'#' + tocItem.id}>{tocItem.label}</LinkScrollable>\n                </li>\n              ))}\n            </ul>\n          </div>\n        ))}\n      </Content>\n    </PageIndex>\n  )\n}\n","import { Link } from 'react-router-dom'\n\nimport {\n  GPAUDIT_LINK,\n  COWWIKI_LINK,\n  GNOSIS_FORUM_ROADTODECENT_LINK,\n  FLASHBOYS_LINK,\n  DISCORD_LINK,\n  MEV_TOTAL,\n  FLASHBOTS_LINK,\n} from 'constants/index'\nimport Page, { Content } from 'components/Page'\nimport { Routes } from 'constants/routes'\nimport { ExternalLinkFaq, Wrapper, ButtonNav, FooterWrapper } from './styled'\nimport { FaqMenu } from './Menu'\nimport { StyledInternalLink } from 'theme'\n\nimport { useToC } from './hooks'\nimport ToC from './ToC'\n\nexport interface TocSection {\n  section: TocItem\n  items: TocItem[]\n}\n\nexport interface TocItem {\n  label: string\n  id: string\n}\n\nexport function Footer() {\n  return (\n    <FooterWrapper>\n      <p>\n        Didn&#39;t find an answer? Join the{' '}\n        <ExternalLinkFaq href={DISCORD_LINK} target=\"_blank\" rel=\"noopener noreferrer\">\n          community on Discord\n        </ExternalLinkFaq>{' '}\n        <br />\n        <br />\n        We really hope you like CoW Swap. If you do,&nbsp;<Link to={Routes.HOME}>Milk it!</Link>\n        <span role=\"img\" aria-label=\"glass of milk\">\n          🥛\n        </span>\n      </p>\n      <ButtonNav onClick={() => window.scrollTo({ top: 0, behavior: 'smooth' })}>Back to top ↑</ButtonNav>\n    </FooterWrapper>\n  )\n}\n\nexport default function Faq() {\n  const { toc, faqRef } = useToC()\n  return (\n    <Wrapper ref={faqRef}>\n      <FaqMenu />\n      <Page>\n        <ToC toc={toc} name=\"General FAQ\" />\n        <Content>\n          <h2 id=\"general\">General</h2>\n          <h3 id=\"what-is-cowswap\">What is CoW Swap?</h3>\n          <p>CoW Swap is the first trading interface built on top of CoW Protocol.</p>\n          <p>\n            CoW Swap is a Meta DEX aggregator that allows you to buy and sell tokens using gasless orders that are\n            settled peer-to-peer among its users, or into any on-chain liquidity source while providing MEV protection.\n          </p>\n\n          <h3 id=\"why-is-cowswap-a-meta-dex-aggregator\">What makes CoW Swap a &quot;Meta&quot; DEX aggregator?</h3>\n          <p>\n            CoW Swap is built on top of the CoW Protocol which matches trades via batch auctions for a variety of\n            on-chain liquidity sources.\n          </p>\n          <p>\n            Trades can be settled via underlying on-chain AMMs directly or via DEX Aggregators, depending on which\n            pool/path offers the best price. It is thus essentially acting as a DexAggregator of the DexAggregators.\n          </p>\n          <p>\n            In addition to that, before finding the best price for a trade from available on-chain liquidity, CoW\n            Protocol first seeks a coincidence of wants within the existing batch to offer an even better price than any\n            pool can.\n          </p>\n\n          <h3 id=\"what-is-mev-and-how-much-mev-has-been-extracted-from-users-to-date\">\n            What is MEV and how much MEV has been extracted from users to date?\n          </h3>\n\n          <p>\n            Defined by Phil Daian et al. in the{' '}\n            <ExternalLinkFaq href={FLASHBOYS_LINK}>paper Flash Boys 2.0 </ExternalLinkFaq>, MEV is a measure of the\n            profit a miner (or validator, sequencer, etc.) can make through their ability to arbitrarily include,\n            exclude, or re-order transactions within the blocks they produce.\n          </p>\n\n          <p>\n            As of today the total amount of value extracted by miners (etc.) on Ethereum transactions has reached{' '}\n            <ExternalLinkFaq href={FLASHBOTS_LINK}>USD {MEV_TOTAL}</ExternalLinkFaq>, including successful and failed\n            transactions.\n          </p>\n\n          <h3 id=\"to-what-does-the-term-coincidence-of-wants-cows-refer\">\n            To what does the term Coincidence of Wants (CoWs) refer?\n          </h3>\n\n          <p>\n            <ExternalLinkFaq href={COWWIKI_LINK}>Coincidence of Wants (CoWs)</ExternalLinkFaq> can be explained as “an\n            economic phenomenon where two parties each hold an item the other wants, so they exchange these items\n            directly.” CoW Swap facilitates CoWs among traders and their orders through using batch auctions as a core\n            mechanism.\n          </p>\n\n          <p>\n            This means, on CoW Swap, when two traders each hold an asset the other wants, a trade can be settled\n            directly between them without an external market maker or liquidity provider. This leads to better prices\n            for the individual traders (because traditionally market makers add a fee — referred to as spread — for\n            their service).\n          </p>\n\n          <p>\n            CoW Swap allows for coincidence of wants (CoWs) orders to be traded directly against one another. Only the\n            excess order amounts that cannot be settled directly with other CoW Swap traders are sent to the underlying\n            AMMs (automated market makers).\n          </p>\n\n          <h3 id=\"how-am-i-protected-from-mev-arbitrage-front-running-sandwiching-with-cowswap\">\n            How am I protected from MEV (Arbitrage, Front running, Sandwiching) with CoW Swap?\n          </h3>\n\n          <p>\n            CoW Swap leverages batch auctions with uniform clearing prices for all trades in the same batch. Because of\n            the uniform clearing price, there is no need for ordering the transactions within a single batch. Because\n            everyone receives the same price across assets it&apos;s not possible for <b>any</b> value to be extracted\n            by placing transactions in a certain order. This prevents the primary strategy used in MEV.\n          </p>\n\n          <p>\n            Batches are decentrally settled by external, independent parties (called “solvers”) on-chain. A solver is a\n            person or entity who submits order settlement solutions that maximize trade surplus for a given batch.\n            Solvers are incentivized to implement professional transaction management techniques that allow them to set\n            very tight slippage bounds on any interactions with external liquidity sources (e.g., trading CoW excess on\n            Uniswap). This dramatically reduces the manipulation surface of miners and front-runners.\n          </p>\n\n          <p>\n            Additionally, depending on the composition of the orders that are submitted and are valid for a given batch,\n            the existence of CoWs may significantly reduce the amount that has to be exchanged via external MEV-prone\n            protocols, such as Uniswap.\n          </p>\n\n          <h3 id=\"how-does-cowswap-determine-prices\">How does CoW Swap determine prices?</h3>\n\n          <p>\n            CoW Swap settles batch auctions in discrete time intervals. In the absence of other traders, CoW Swap\n            matches traders against the best available on-chain liquidity (note: currently the solvers have integrated\n            liquidity from Uni v2, Uni v3, Balancer, Balancer v2, Sushiswap and the liquidity that Aggregators such as\n            Paraswap, Matcha and 1inch leverage).\n          </p>\n\n          <p>\n            If CoWs (Coincidence of Wants) orders exist in a batch, the “smaller” order is matched fully with the larger\n            order. The excess of the larger order is settled with the best available base liquidity CoW Swap integrates\n            with, which is, for now, Uniswap. The clearing price for both orders will be the price of the token with the\n            excess amount on external liquidity sources to which the protocol is connected.\n          </p>\n\n          <p>\n            Finding the best settlement for orders is a challenging task, which very soon may have its own{' '}\n            <ExternalLinkFaq href={GNOSIS_FORUM_ROADTODECENT_LINK}>decentralized competition</ExternalLinkFaq>.\n          </p>\n\n          <h3 id=\"is-cowswap-secure-to-use\">Is CoW Swap secure to use?</h3>\n\n          <p>\n            As of August 11th, 2021, CoW Swap is no longer in alpha and moves to a final, stable version. The underlying\n            CoW Protocol Smart contracts have been upgraded to integrate tightly with Balancer v2.\n          </p>\n\n          <p>\n            With this upgrade, CoW Swap evolves into its most stable, performant form: the code has been thoroughly and\n            carefully tested, peer-reviewed and fully <ExternalLinkFaq href={GPAUDIT_LINK}>audited</ExternalLinkFaq>.\n            Whilst CoW Swap has taken a major step forward in terms of security and stability, as with other crypto\n            protocols or dapps, your use is at your own risk.{' '}\n            <strong>\n              Please review our{' '}\n              <StyledInternalLink to={Routes.TERMS_CONDITIONS}>\n                <strong>Terms and Conditions</strong>\n              </StyledInternalLink>\n              .\n            </strong>\n          </p>\n          <Footer />\n        </Content>\n      </Page>\n    </Wrapper>\n  )\n}\n","import Page, { Content } from 'components/Page'\n\nimport { LinkScrollable } from 'components/Link'\nimport { Wrapper, ExternalLinkFaq } from './styled'\nimport { Footer } from '.'\nimport { useToC } from './hooks'\nimport ToC from './ToC'\nimport { FaqMenu } from './Menu'\n\nexport default function TokenFaq() {\n  const { toc, faqRef } = useToC()\n\n  return (\n    <Wrapper ref={faqRef}>\n      <FaqMenu />\n      <Page>\n        <ToC toc={toc} name=\"Trading FAQ\" />\n        <Content>\n          <h2 id=\"trading\">Trading</h2>\n\n          <h3 id=\"what-types-of-orders-does-cowswap-support\">What types of orders does CoW Swap support?</h3>\n\n          <p>At the moment, only limit sell and buy orders (fill-or-kill) are enabled. </p>\n\n          <h3 id=\"what-token-pairs-does-cowswap-allow-to-trade\">What token pairs does CoW Swap allow you to trade?</h3>\n\n          <p>\n            Any valid ERC20 token pair that does not apply transfer fees, and for which there is some basic liquidity on\n            a DEX (like Uniswap or Balancer).\n          </p>\n\n          <h3 id=\"what-token-pairs-does-cowswap-not-allow-to-trade\">\n            What token pairs does CoW Swap NOT allow you to trade?\n          </h3>\n\n          <p>\n            Unfortunately, CoW Swap does not support some tokens. While these tokens implement the typical ERC20\n            interface, when calling the transfer and transferFrom methods, the actual amount the receiver will get will\n            be smaller than the specified sent amount. This causes problems with CoW Swap&apos;s settlement logic which\n            expects the received amount (e.g., from a Uniswap interaction) to be fully transferable to the trader.\n          </p>\n\n          <h3 id=\"why-is-cowswap-able-to-offer-gas-free-trades\">Why is CoW Swap able to offer gas-free trades?</h3>\n\n          <p>\n            CoW Swap is able to offer gas-free trades because the orders are submitted off-chain via signed messages.\n            Once you approve your funds for spending on the dapp, you can submit orders via signed messages that contain\n            the trade’s details, such as limit price, amount, timestamp, and so on.\n          </p>\n\n          <h3 id=\"do-i-need-eth-to-trade\">Do I need ETH to trade?</h3>\n\n          <p>\n            For the trade itself you do not need to hold ETH. Although, in order to be able to trade on CoW Swap, you\n            first need to approve your funds for spending on the dapp<small>*</small>. For that action, you need ETH to\n            pay for gas fees. Once you have done this, ETH is no longer required as CoW Swap charges the fee from the\n            sell token.\n          </p>\n\n          <p>\n            <small>\n              * In the near future, if you are trying to sell an ERC20 that allows offline approvals, then the ETH\n              needed to pay for allowing your funds to be spent is not needed anymore, making the trading experience\n              fully gas-free. Keep in mind that this is only possible with ERC20 tokens that have such functionality; if\n              not, you will need ETH to execute the approval transaction only.\n            </small>\n          </p>\n\n          <h3 id=\"how-does-a-trader-submit-a-valid-order-in-cowswap\">\n            How does a trader submit a valid order in CoW Swap?\n          </h3>\n\n          <p>In order for a trader to submit a valid order to CoW Swap, they must do the following steps:</p>\n\n          <ol>\n            <li>\n              Approve the CoW Swap smart contract to spend the token on your behalf. By executing this smart contract\n              interaction you are approving the contract to withdraw the funds from your wallet once the trade you have\n              signed has been filled in a batch auction.\n            </li>\n            <li>\n              Once the approval has been mined, the next step is to sign a meta-tx in which you will see the parameters\n              of the order you are about to place in the CoW Swap interface. After that, there is nothing else to do.\n            </li>\n            <li>\n              Once the order is executed, you will see a notification in the CoW Swap UI and hear a confirming “Moo”\n              sound.\n            </li>\n          </ol>\n          <p>\n            This workflow applies for normal Ethereum accounts (EOA). For smart contracts, instead of signing a meta-tx\n            you would need to do a <LinkScrollable href={'/faq/protocol#what-is-presign'}>pre-sign</LinkScrollable>.\n          </p>\n\n          <h3 id=\"can-i-cancel-an-order\">Can I cancel an order?</h3>\n\n          <p>Yes! You can request to cancel any order while it is still pending.</p>\n          <p>Cancellations, like orders, are free and require no gas to be paid.</p>\n          <p>\n            Keep in mind that even though the request to cancel an order succeeds, the order might still be executed.\n          </p>\n          <p>\n            That is because when the offline order cancellation is received, a settlement solution may have already been\n            prepared by one of the solvers and sent to the Ethereum network.\n          </p>\n          <p>\n            Alternatively, there is the so-called hard cancellation, which allows to cancel an order on-chain. This is\n            not currently supported by the CoW Swap web interface, and you would need to pay for the gas of the on-chain\n            cancellation. For more information, check the Smart Contract implementation.\n          </p>\n\n          <h3 id=\"why-does-the-ui-dapp-have-a-warning-fees-exceed-from-amount\">\n            Why does the UI dapp have a warning &ldquo;Fees exceed From amount&rdquo;?\n          </h3>\n\n          <p>\n            In order for solvers (order settlement solution providers) to be economically viable, they need to take into\n            account how much gas they spend executing the settlement transaction. The protocol’s fee ensures that\n            solvers are incentivized to include the order in a settlement (similar to how gas is paid on traditional\n            DEXes). The fee is directly taken from the sell amount, which therefore has to have a certain minimum size.\n          </p>\n\n          <h3 id=\"why-do-i-need-to-approve-a-token-before-trading\">Why do I need to approve a token before trading?</h3>\n\n          <p>\n            When an order is executed, the settlement contract withdraws the sell amount from the trader’s token balance\n            via the CoW Protocol Vault Relayer (for more information read{' '}\n            <ExternalLinkFaq\n              href=\"https://github.com/cowprotocol/contracts/blob/main/src/contracts/GPv2VaultRelayer.sol\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              Smart Contract Architecture\n            </ExternalLinkFaq>\n            ). In order to allow that to happen, the trader must first approve the CoW Protocol Vault Relayer contract\n            to spend tokens on their behalf. The smart contract logic ensures that no token can be spent without\n            deliberately signing an order for it.\n          </p>\n\n          <h3 id=\"why-do-i-sign-a-message-instead-of-sending-a-transaction-to-place-an-order\">\n            Why do I sign a message instead of sending a transaction to place an order?\n          </h3>\n\n          <p>\n            Signing a message incurs no gas cost and is therefore free. When placing an order, the protocol cannot\n            guarantee that the order will be executed (e.g., the price could change to no longer satisfy the specified\n            limit). By only signing the intent to trade, we can ensure that users only incur a cost when their trade is\n            successfully executed.\n          </p>\n\n          <p>\n            Furthermore, by splitting the intent to trade (that is token, amount, and limit price) from the actual\n            on-chain execution, the protocol can react to on-chain race conditions and, for example, change the trading\n            route an order is matched against without requiring the user to submit a new order.\n          </p>\n\n          <h3 id=\"can-i-buy-and-sell-eth-in-cowswap\">Can I buy and sell ETH in CoW Swap?</h3>\n\n          <p>\n            Yes, you can directly place buy and sell orders for ETH. Before the actual order is placed, the UI will\n            allow you to wrap and unwrap ETH into WETH without needing to leave the dapp’s UI.\n          </p>\n\n          <h3 id=\"why-is-selling-eth-more-troublesome\">Why is selling ETH more troublesome?</h3>\n\n          <p>\n            CoW Swap only operates with ERC20 tokens. ETH is the native Ethereum currency, which is not an ERC20 token.\n          </p>\n\n          <p>\n            In order to sell ETH, you need to wrap it first to make it ERC20 compatible. Wrapping is done by making an\n            ETH deposit into the WETH contract. After doing so, you will get a balance of WETH in the amount of ETH\n            previously deposited.\n          </p>\n\n          <p>You can withdraw your ETH from the WETH contract at any time, and this is called unwrapping WETH.</p>\n\n          <p>\n            Wrapping and unwrapping ETH are simple Ethereum transactions not related to CoW Swap, meaning gas costs for\n            executing the transactions are involved.\n          </p>\n\n          <p>\n            Although CoW Swap does not allow you to sell ETH directly, it will assist you with the wrapping/unwrapping,\n            so you can easily handle ETH/WETH, as needed.\n          </p>\n\n          <p>\n            While ETH cannot be sold directly, it is possible to directly buy ETH. This is because CoW Swap allows you\n            to buy WETH and will directly unwrap it for you.\n          </p>\n\n          {/*\n        <h2 id=\"discardedquestionstobeaddedlater\">Discarded Questions to be added later</h2>\n\n        <ul>\n          <li>\n            **How can I cancel an order that I placed on CoW Swap? Canceling an order in CoW Swap can be done in two\n            different ways:\n          </li>\n        </ul>\n\n        <ol>\n          <li>\n            Calling the Cowsap API to signal that you want to cancel a specific order. In this case, the cancellation is\n            completely free as it does not require any onchain interaction\n          </li>\n\n          <li>\n            Calling the CoW Swap contract to register onchain that you want to cancel a specific order. In this case the\n            cancellation does have a cost as the onchain interaction requires gas fees\n          </li>\n        </ol>\n        */}\n          <Footer />\n        </Content>\n      </Page>\n    </Wrapper>\n  )\n}\n"],"sourceRoot":""}