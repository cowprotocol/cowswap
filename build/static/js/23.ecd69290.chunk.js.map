{"version":3,"sources":["../node_modules/@cowprotocol/cow-runner-game/dist/game/assets/default_200_percent/200-offline-sprite.png","../../../../src/game/model/const.js","../../../../src/game/model/utils.js","../../../../src/game/model/Cloud.js","../../../../src/game/model/CollisionBox.js","../../../../src/game/model/DistanceMeter.js","../../../../src/game/model/GameOverPanel.js","../../../../src/game/model/Horizon.js","../../../../src/game/model/HorizonLine.js","../../../../src/game/model/NightMode.js","../../../../src/game/model/Obstacle.js","../../../../src/game/model/Trex.js","../../../../src/game/model/Runner.js","../../../src/game/CowGame.tsx","../../../../src/game/hooks/useKeyPress.ts"],"names":["this","e","keys"],"mappings":"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","file":"static/js/23.ecd69290.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/200-offline-sprite.4c54d59e.png\";","/**\n * Default game width.\n */\nexport const DEFAULT_WIDTH = 600;\n/**\n * Frames per second.\n * @const\n */\nexport const FPS = 60;\n// export const IS_HIDPI = window.devicePixelRatio > 1;\nexport const IS_HIDPI = true; // Set high resolution by default\nexport const IS_IOS = /iPad|iPhone|iPod/.test(window.navigator.platform);\nexport const IS_ANDROID = /Android/.test(window.navigator.userAgent);\nexport const IS_TOUCH_ENABLED = 'ontouchstart' in window;\nexport const IS_MOBILE = IS_TOUCH_ENABLED;\n//# sourceMappingURL=const.js.map","import { IS_IOS, IS_MOBILE, CollisionBox, Trex } from '.';\n/**\n * Check for a collision.\n * @param {!Obstacle} obstacle\n * @param {!Trex} tRex T-rex object.\n * @param {HTMLCanvasContext} opt_canvasCtx Optional canvas context for drawing\n *    collision boxes.\n * @return {Array<CollisionBox>}\n */\nexport function checkForCollision(obstacle, tRex, opt_canvasCtx) {\n    var obstacleBoxXPos = Runner.defaultDimensions.WIDTH + obstacle.xPos;\n    // Adjustments are made to the bounding box as there is a 1 pixel white\n    // border around the t-rex and obstacles.\n    var tRexBox = new CollisionBox(tRex.xPos + 1, tRex.yPos + 1, tRex.config.WIDTH - 2, tRex.config.HEIGHT - 2);\n    var obstacleBox = new CollisionBox(obstacle.xPos + 1, obstacle.yPos + 1, obstacle.typeConfig.width * obstacle.size - 2, obstacle.typeConfig.height - 2);\n    // Debug outer box\n    if (opt_canvasCtx) {\n        drawCollisionBoxes(opt_canvasCtx, tRexBox, obstacleBox);\n    }\n    // Simple outer bounds check.\n    if (boxCompare(tRexBox, obstacleBox)) {\n        var collisionBoxes = obstacle.collisionBoxes;\n        var tRexCollisionBoxes = tRex.ducking ?\n            Trex.collisionBoxes.DUCKING : Trex.collisionBoxes.RUNNING;\n        // Detailed axis aligned box check.\n        for (var t = 0; t < tRexCollisionBoxes.length; t++) {\n            for (var i = 0; i < collisionBoxes.length; i++) {\n                // Adjust the box to actual positions.\n                var adjTrexBox = createAdjustedCollisionBox(tRexCollisionBoxes[t], tRexBox);\n                var adjObstacleBox = createAdjustedCollisionBox(collisionBoxes[i], obstacleBox);\n                var crashed = boxCompare(adjTrexBox, adjObstacleBox);\n                // Draw boxes for debug.\n                if (opt_canvasCtx) {\n                    drawCollisionBoxes(opt_canvasCtx, adjTrexBox, adjObstacleBox);\n                }\n                if (crashed) {\n                    return [adjTrexBox, adjObstacleBox];\n                }\n            }\n        }\n    }\n    return false;\n}\n;\n/**\n* Adjust the collision box.\n* @param {!CollisionBox} box The original box.\n* @param {!CollisionBox} adjustment Adjustment box.\n* @return {CollisionBox} The adjusted collision box object.\n*/\nexport function createAdjustedCollisionBox(box, adjustment) {\n    return new CollisionBox(box.x + adjustment.x, box.y + adjustment.y, box.width, box.height);\n}\n;\n/**\n* Draw the collision boxes for debug.\n*/\nfunction drawCollisionBoxes(canvasCtx, tRexBox, obstacleBox) {\n    canvasCtx.save();\n    canvasCtx.strokeStyle = '#f00';\n    canvasCtx.strokeRect(tRexBox.x, tRexBox.y, tRexBox.width, tRexBox.height);\n    canvasCtx.strokeStyle = '#0f0';\n    canvasCtx.strokeRect(obstacleBox.x, obstacleBox.y, obstacleBox.width, obstacleBox.height);\n    canvasCtx.restore();\n}\n;\n/**\n* Compare two collision boxes for a collision.\n* @param {CollisionBox} tRexBox\n* @param {CollisionBox} obstacleBox\n* @return {boolean} Whether the boxes intersected.\n*/\nfunction boxCompare(tRexBox, obstacleBox) {\n    var crashed = false;\n    var tRexBoxX = tRexBox.x;\n    var tRexBoxY = tRexBox.y;\n    var obstacleBoxX = obstacleBox.x;\n    var obstacleBoxY = obstacleBox.y;\n    // Axis-Aligned Bounding Box method.\n    if (tRexBox.x < obstacleBoxX + obstacleBox.width &&\n        tRexBox.x + tRexBox.width > obstacleBoxX &&\n        tRexBox.y < obstacleBox.y + obstacleBox.height &&\n        tRexBox.height + tRexBox.y > obstacleBox.y) {\n        crashed = true;\n    }\n    return crashed;\n}\n;\n/**\n * Get random number.\n * @param {number} min\n * @param {number} max\n * @param {number}\n */\nexport function getRandomNum(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n/**\n* Vibrate on mobile devices.\n* @param {number} duration Duration of the vibration in milliseconds.\n*/\nexport function vibrate(duration) {\n    if (IS_MOBILE && window.navigator.vibrate) {\n        window.navigator.vibrate(duration);\n    }\n}\n/**\n* Create canvas element.\n* @param {HTMLElement} container Element to append canvas to.\n* @param {number} width\n* @param {number} height\n* @param {string} opt_classname\n* @return {HTMLCanvasElement}\n*/\nexport function createCanvas(container, width, height, opt_classname) {\n    var canvas = document.createElement('canvas');\n    canvas.className = opt_classname ? Runner.classes.CANVAS + ' ' +\n        opt_classname : Runner.classes.CANVAS;\n    canvas.width = width;\n    canvas.height = height;\n    container.appendChild(canvas);\n    return canvas;\n}\n/**\n* Decodes the base 64 audio to ArrayBuffer used by Web Audio.\n* @param {string} base64String\n*/\nexport function decodeBase64ToArrayBuffer(base64String) {\n    var len = (base64String.length / 4) * 3;\n    var str = atob(base64String);\n    var arrayBuffer = new ArrayBuffer(len);\n    var bytes = new Uint8Array(arrayBuffer);\n    for (var i = 0; i < len; i++) {\n        bytes[i] = str.charCodeAt(i);\n    }\n    return bytes.buffer;\n}\n/**\n* Return the current timestamp.\n* @return {number}\n*/\nexport function getTimeStamp() {\n    return IS_IOS ? new Date().getTime() : performance.now();\n}\n//# sourceMappingURL=utils.js.map","import { IS_HIDPI, Runner, getRandomNum } from './';\n/**\n* Cloud background item.\n* Similar to an obstacle object but without collision boxes.\n* @param {HTMLCanvasElement} canvas Canvas element.\n* @param {Object} spritePos Position of image in sprite.\n* @param {number} containerWidth\n*/\nexport class Cloud {\n    constructor(canvas, spritePos, containerWidth) {\n        this.canvas = canvas;\n        this.canvasCtx = this.canvas.getContext('2d');\n        this.spritePos = spritePos;\n        this.containerWidth = containerWidth;\n        this.xPos = containerWidth;\n        this.yPos = 0;\n        this.remove = false;\n        this.cloudGap = getRandomNum(Cloud.config.MIN_CLOUD_GAP, Cloud.config.MAX_CLOUD_GAP);\n        this.init();\n    }\n    /**\n     * Initialise the cloud. Sets the Cloud height.\n     */\n    init() {\n        this.yPos = getRandomNum(Cloud.config.MAX_SKY_LEVEL, Cloud.config.MIN_SKY_LEVEL);\n        this.draw();\n    }\n    /**\n     * Draw the cloud.\n     */\n    draw() {\n        this.canvasCtx.save();\n        var sourceWidth = Cloud.config.WIDTH;\n        var sourceHeight = Cloud.config.HEIGHT;\n        if (IS_HIDPI) {\n            sourceWidth = sourceWidth * 2;\n            sourceHeight = sourceHeight * 2;\n        }\n        this.canvasCtx.drawImage(Runner.imageSprite, this.spritePos.x, this.spritePos.y, sourceWidth, sourceHeight, this.xPos, this.yPos, Cloud.config.WIDTH, Cloud.config.HEIGHT);\n        this.canvasCtx.restore();\n    }\n    /**\n     * Update the cloud position.\n     * @param {number} speed\n     */\n    update(speed) {\n        if (!this.remove) {\n            this.xPos -= Math.ceil(speed);\n            this.draw();\n            // Mark as removeable if no longer in the canvas.\n            if (!this.isVisible()) {\n                this.remove = true;\n            }\n        }\n    }\n    /**\n     * Check if the cloud is visible on the stage.\n     * @return {boolean}\n     */\n    isVisible() {\n        return this.xPos + Cloud.config.WIDTH > 0;\n    }\n}\n/**\n* Cloud object config.\n* @enum {number}\n*/\nCloud.config = {\n    HEIGHT: 14,\n    MAX_CLOUD_GAP: 400,\n    MAX_SKY_LEVEL: 30,\n    MIN_CLOUD_GAP: 100,\n    MIN_SKY_LEVEL: 71,\n    WIDTH: 46\n};\n//# sourceMappingURL=Cloud.js.map","/**\n * Collision box object.\n * @param {number} x X position.\n * @param {number} y Y Position.\n * @param {number} w Width.\n * @param {number} h Height.\n */\nexport function CollisionBox(x, y, w, h) {\n    this.x = x;\n    this.y = y;\n    this.width = w;\n    this.height = h;\n}\n;\n//# sourceMappingURL=CollisionBox.js.map","import { IS_HIDPI } from '.';\n/**\n* Handles displaying the distance meter.\n* @param {!HTMLCanvasElement} canvas\n* @param {Object} spritePos Image position in sprite.\n* @param {number} canvasWidth\n* @constructor\n*/\nexport class DistanceMeter {\n    constructor(canvas, spritePos, canvasWidth) {\n        this.canvas = canvas;\n        this.canvasCtx = canvas.getContext('2d');\n        this.image = Runner.imageSprite;\n        this.spritePos = spritePos;\n        this.x = 0;\n        this.y = 5;\n        this.currentDistance = 0;\n        this.maxScore = 0;\n        this.highScore = 0;\n        this.container = null;\n        this.digits = [];\n        this.acheivement = false;\n        this.defaultString = '';\n        this.flashTimer = 0;\n        this.flashIterations = 0;\n        this.invertTrigger = false;\n        this.config = DistanceMeter.config;\n        this.maxScoreUnits = this.config.MAX_DISTANCE_UNITS;\n        this.init(canvasWidth);\n    }\n    /**\n     * Initialise the distance meter to '00000'.\n     * @param {number} width Canvas width in px.\n     */\n    init(width) {\n        var maxDistanceStr = '';\n        this.calcXPos(width);\n        this.maxScore = this.maxScoreUnits;\n        for (var i = 0; i < this.maxScoreUnits; i++) {\n            this.draw(i, 0);\n            this.defaultString += '0';\n            maxDistanceStr += '9';\n        }\n        this.maxScore = parseInt(maxDistanceStr);\n    }\n    /**\n     * Calculate the xPos in the canvas.\n     * @param {number} canvasWidth\n     */\n    calcXPos(canvasWidth) {\n        this.x = canvasWidth - (DistanceMeter.dimensions.DEST_WIDTH *\n            (this.maxScoreUnits + 1));\n    }\n    /**\n     * Draw a digit to canvas.\n     * @param {number} digitPos Position of the digit.\n     * @param {number} value Digit value 0-9.\n     * @param {boolean} opt_highScore Whether drawing the high score.\n     */\n    draw(digitPos, value, opt_highScore) {\n        var sourceWidth = DistanceMeter.dimensions.WIDTH;\n        var sourceHeight = DistanceMeter.dimensions.HEIGHT;\n        var sourceX = DistanceMeter.dimensions.WIDTH * value;\n        var sourceY = 0;\n        var targetX = digitPos * DistanceMeter.dimensions.DEST_WIDTH;\n        var targetY = this.y;\n        var targetWidth = DistanceMeter.dimensions.WIDTH;\n        var targetHeight = DistanceMeter.dimensions.HEIGHT;\n        // For high DPI we 2x source values.\n        if (IS_HIDPI) {\n            sourceWidth *= 2;\n            sourceHeight *= 2;\n            sourceX *= 2;\n        }\n        sourceX += this.spritePos.x;\n        sourceY += this.spritePos.y;\n        this.canvasCtx.save();\n        if (opt_highScore) {\n            // Left of the current score.\n            var highScoreX = this.x - (this.maxScoreUnits * 2) *\n                DistanceMeter.dimensions.WIDTH;\n            this.canvasCtx.translate(highScoreX, this.y);\n        }\n        else {\n            this.canvasCtx.translate(this.x, this.y);\n        }\n        this.canvasCtx.drawImage(this.image, sourceX, sourceY, sourceWidth, sourceHeight, targetX, targetY, targetWidth, targetHeight);\n        this.canvasCtx.restore();\n    }\n    /**\n     * Covert pixel distance to a 'real' distance.\n     * @param {number} distance Pixel distance ran.\n     * @return {number} The 'real' distance ran.\n     */\n    getActualDistance(distance) {\n        return distance ? Math.round(distance * this.config.COEFFICIENT) : 0;\n    }\n    /**\n     * Update the distance meter.\n     * @param {number} distance\n     * @param {number} deltaTime\n     * @return {boolean} Whether the acheivement sound fx should be played.\n     */\n    update(deltaTime, distance) {\n        var paint = true;\n        var playSound = false;\n        if (!this.acheivement) {\n            distance = this.getActualDistance(distance);\n            // Score has gone beyond the initial digit count.\n            if (distance > this.maxScore && this.maxScoreUnits ==\n                this.config.MAX_DISTANCE_UNITS) {\n                this.maxScoreUnits++;\n                this.maxScore = parseInt(this.maxScore + '9');\n            }\n            else {\n                this.distance = 0;\n            }\n            if (distance > 0) {\n                // Acheivement unlocked\n                if (distance % this.config.ACHIEVEMENT_DISTANCE == 0) {\n                    // Flash score and play sound.\n                    this.acheivement = true;\n                    this.flashTimer = 0;\n                    playSound = true;\n                }\n                // Create a string representation of the distance with leading 0.\n                var distanceStr = (this.defaultString +\n                    distance).substr(-this.maxScoreUnits);\n                this.digits = distanceStr.split('');\n            }\n            else {\n                this.digits = this.defaultString.split('');\n            }\n        }\n        else {\n            // Control flashing of the score on reaching acheivement.\n            if (this.flashIterations <= this.config.FLASH_ITERATIONS) {\n                this.flashTimer += deltaTime;\n                if (this.flashTimer < this.config.FLASH_DURATION) {\n                    paint = false;\n                }\n                else if (this.flashTimer >\n                    this.config.FLASH_DURATION * 2) {\n                    this.flashTimer = 0;\n                    this.flashIterations++;\n                }\n            }\n            else {\n                this.acheivement = false;\n                this.flashIterations = 0;\n                this.flashTimer = 0;\n            }\n        }\n        // Draw the digits if not flashing.\n        if (paint) {\n            for (var i = this.digits.length - 1; i >= 0; i--) {\n                this.draw(i, parseInt(this.digits[i]));\n            }\n        }\n        this.drawHighScore();\n        return playSound;\n    }\n    /**\n     * Draw the high score.\n     */\n    drawHighScore() {\n        this.canvasCtx.save();\n        this.canvasCtx.globalAlpha = .8;\n        for (var i = this.highScore.length - 1; i >= 0; i--) {\n            this.draw(i, parseInt(this.highScore[i], 10), true);\n        }\n        this.canvasCtx.restore();\n    }\n    /**\n     * Set the highscore as a array string.\n     * Position of char in the sprite: H - 10, I - 11.\n     * @param {number} distance Distance ran in pixels.\n     */\n    setHighScore(distance) {\n        distance = this.getActualDistance(distance);\n        var highScoreStr = (this.defaultString +\n            distance).substr(-this.maxScoreUnits);\n        this.highScore = ['10', '11', ''].concat(highScoreStr.split(''));\n    }\n    /**\n     * Reset the distance meter back to '00000'.\n     */\n    reset() {\n        this.update(0);\n        this.acheivement = false;\n    }\n}\n/**\n* @enum {number}\n*/\nDistanceMeter.dimensions = {\n    WIDTH: 10,\n    HEIGHT: 13,\n    DEST_WIDTH: 11\n};\n/**\n* Y positioning of the digits in the sprite sheet.\n* X position is always 0.\n* @type {Array<number>}\n*/\nDistanceMeter.yPos = [0, 13, 27, 40, 53, 67, 80, 93, 107, 120];\n/**\n* Distance meter config.\n* @enum {number}\n*/\nDistanceMeter.config = {\n    // Number of digits.\n    MAX_DISTANCE_UNITS: 5,\n    // Distance that causes achievement animation.\n    ACHIEVEMENT_DISTANCE: 100,\n    // Used for conversion from pixel distance to a scaled unit.\n    COEFFICIENT: 0.025,\n    // Flash duration in milliseconds.\n    FLASH_DURATION: 1000 / 4,\n    // Flash iterations for achievement animation.\n    FLASH_ITERATIONS: 3\n};\n//# sourceMappingURL=DistanceMeter.js.map","import { IS_HIDPI } from '.';\n/**\n * Game over panel.\n * @param {!HTMLCanvasElement} canvas\n * @param {Object} textImgPos\n * @param {Object} restartImgPos\n * @param {!Object} dimensions Canvas dimensions.\n * @constructor\n */\nexport function GameOverPanel(canvas, textImgPos, restartImgPos, dimensions) {\n    this.canvas = canvas;\n    this.canvasCtx = canvas.getContext('2d');\n    this.canvasDimensions = dimensions;\n    this.textImgPos = textImgPos;\n    this.restartImgPos = restartImgPos;\n    this.draw();\n}\n;\n/**\n* Dimensions used in the panel.\n* @enum {number}\n*/\nGameOverPanel.dimensions = {\n    TEXT_X: 0,\n    TEXT_Y: 13,\n    TEXT_WIDTH: 191,\n    TEXT_HEIGHT: 11,\n    RESTART_WIDTH: 36,\n    RESTART_HEIGHT: 32\n};\nGameOverPanel.prototype = {\n    /**\n     * Update the panel dimensions.\n     * @param {number} width New canvas width.\n     * @param {number} opt_height Optional new canvas height.\n     */\n    updateDimensions: function (width, opt_height) {\n        this.canvasDimensions.WIDTH = width;\n        if (opt_height) {\n            this.canvasDimensions.HEIGHT = opt_height;\n        }\n    },\n    /**\n     * Draw the panel.\n     */\n    draw: function () {\n        var dimensions = GameOverPanel.dimensions;\n        var centerX = this.canvasDimensions.WIDTH / 2;\n        // Game over text.\n        var textSourceX = dimensions.TEXT_X;\n        var textSourceY = dimensions.TEXT_Y;\n        var textSourceWidth = dimensions.TEXT_WIDTH;\n        var textSourceHeight = dimensions.TEXT_HEIGHT;\n        var textTargetX = Math.round(centerX - (dimensions.TEXT_WIDTH / 2));\n        var textTargetY = Math.round((this.canvasDimensions.HEIGHT - 25) / 3);\n        var textTargetWidth = dimensions.TEXT_WIDTH;\n        var textTargetHeight = dimensions.TEXT_HEIGHT;\n        var restartSourceWidth = dimensions.RESTART_WIDTH;\n        var restartSourceHeight = dimensions.RESTART_HEIGHT;\n        var restartTargetX = centerX - (dimensions.RESTART_WIDTH / 2);\n        var restartTargetY = this.canvasDimensions.HEIGHT / 2;\n        if (IS_HIDPI) {\n            textSourceY *= 2;\n            textSourceX *= 2;\n            textSourceWidth *= 2;\n            textSourceHeight *= 2;\n            restartSourceWidth *= 2;\n            restartSourceHeight *= 2;\n        }\n        textSourceX += this.textImgPos.x;\n        textSourceY += this.textImgPos.y;\n        // Game over text from sprite.\n        this.canvasCtx.drawImage(Runner.imageSprite, textSourceX, textSourceY, textSourceWidth, textSourceHeight, textTargetX, textTargetY, textTargetWidth, textTargetHeight);\n        // Restart button.\n        this.canvasCtx.drawImage(Runner.imageSprite, this.restartImgPos.x, this.restartImgPos.y, restartSourceWidth, restartSourceHeight, restartTargetX, restartTargetY, dimensions.RESTART_WIDTH, dimensions.RESTART_HEIGHT);\n    }\n};\n//# sourceMappingURL=GameOverPanel.js.map","import { Cloud, HorizonLine, NightMode, Obstacle, getRandomNum } from '.';\n/**\n* Horizon background class.\n* @param {HTMLCanvasElement} canvas\n* @param {Object} spritePos Sprite positioning.\n* @param {Object} dimensions Canvas dimensions.\n* @param {number} gapCoefficient\n* @constructor\n*/\nexport class Horizon {\n    constructor(canvas, spritePos, dimensions, gapCoefficient) {\n        this.canvas = canvas;\n        this.canvasCtx = this.canvas.getContext('2d');\n        this.config = Horizon.config;\n        this.dimensions = dimensions;\n        this.gapCoefficient = gapCoefficient;\n        this.obstacles = [];\n        this.obstacleHistory = [];\n        this.horizonOffsets = [0, 0];\n        this.cloudFrequency = this.config.CLOUD_FREQUENCY;\n        this.spritePos = spritePos;\n        this.nightMode = null;\n        // Cloud\n        this.clouds = [];\n        this.cloudSpeed = this.config.BG_CLOUD_SPEED;\n        // Horizon\n        this.horizonLine = null;\n        this.init();\n    }\n    /**\n     * Initialise the horizon. Just add the line and a cloud. No obstacles.\n     */\n    init() {\n        this.addCloud();\n        this.horizonLine = new HorizonLine(this.canvas, this.spritePos.HORIZON);\n        this.nightMode = new NightMode(this.canvas, this.spritePos.MOON, this.dimensions.WIDTH);\n    }\n    /**\n     * @param {number} deltaTime\n     * @param {number} currentSpeed\n     * @param {boolean} updateObstacles Used as an override to prevent\n     *     the obstacles from being updated / added. This happens in the\n     *     ease in section.\n     * @param {boolean} showNightMode Night mode activated.\n     */\n    update(deltaTime, currentSpeed, updateObstacles, showNightMode) {\n        this.runningTime += deltaTime;\n        this.horizonLine.update(deltaTime, currentSpeed);\n        this.nightMode.update(showNightMode);\n        this.updateClouds(deltaTime, currentSpeed);\n        if (updateObstacles) {\n            this.updateObstacles(deltaTime, currentSpeed);\n        }\n    }\n    /**\n     * Update the cloud positions.\n     * @param {number} deltaTime\n     * @param {number} currentSpeed\n     */\n    updateClouds(deltaTime, speed) {\n        var cloudSpeed = this.cloudSpeed / 1000 * deltaTime * speed;\n        var numClouds = this.clouds.length;\n        if (numClouds) {\n            for (var i = numClouds - 1; i >= 0; i--) {\n                this.clouds[i].update(cloudSpeed);\n            }\n            var lastCloud = this.clouds[numClouds - 1];\n            // Check for adding a new cloud.\n            if (numClouds < this.config.MAX_CLOUDS &&\n                (this.dimensions.WIDTH - lastCloud.xPos) > lastCloud.cloudGap &&\n                this.cloudFrequency > Math.random()) {\n                this.addCloud();\n            }\n            // Remove expired clouds.\n            this.clouds = this.clouds.filter(function (obj) {\n                return !obj.remove;\n            });\n        }\n        else {\n            this.addCloud();\n        }\n    }\n    /**\n     * Update the obstacle positions.\n     * @param {number} deltaTime\n     * @param {number} currentSpeed\n     */\n    updateObstacles(deltaTime, currentSpeed) {\n        // Obstacles, move to Horizon layer.\n        var updatedObstacles = this.obstacles.slice(0);\n        for (var i = 0; i < this.obstacles.length; i++) {\n            var obstacle = this.obstacles[i];\n            obstacle.update(deltaTime, currentSpeed);\n            // Clean up existing obstacles.\n            if (obstacle.remove) {\n                updatedObstacles.shift();\n            }\n        }\n        this.obstacles = updatedObstacles;\n        if (this.obstacles.length > 0) {\n            var lastObstacle = this.obstacles[this.obstacles.length - 1];\n            if (lastObstacle && !lastObstacle.followingObstacleCreated &&\n                lastObstacle.isVisible() &&\n                (lastObstacle.xPos + lastObstacle.width + lastObstacle.gap) <\n                    this.dimensions.WIDTH) {\n                this.addNewObstacle(currentSpeed);\n                lastObstacle.followingObstacleCreated = true;\n            }\n        }\n        else {\n            // Create new obstacles.\n            this.addNewObstacle(currentSpeed);\n        }\n    }\n    removeFirstObstacle() {\n        this.obstacles.shift();\n    }\n    /**\n     * Add a new obstacle.\n     * @param {number} currentSpeed\n     */\n    addNewObstacle(currentSpeed) {\n        var obstacleTypeIndex = getRandomNum(0, Obstacle.types.length - 1);\n        var obstacleType = Obstacle.types[obstacleTypeIndex];\n        // Check for multiples of the same type of obstacle.\n        // Also check obstacle is available at current speed.\n        if (this.duplicateObstacleCheck(obstacleType.type) ||\n            currentSpeed < obstacleType.minSpeed) {\n            this.addNewObstacle(currentSpeed);\n        }\n        else {\n            var obstacleSpritePos = this.spritePos[obstacleType.type];\n            this.obstacles.push(new Obstacle(this.canvasCtx, obstacleType, obstacleSpritePos, this.dimensions, this.gapCoefficient, currentSpeed, obstacleType.width));\n            this.obstacleHistory.unshift(obstacleType.type);\n            if (this.obstacleHistory.length > 1) {\n                this.obstacleHistory.splice(Runner.config.MAX_OBSTACLE_DUPLICATION);\n            }\n        }\n    }\n    /**\n     * Returns whether the previous two obstacles are the same as the next one.\n     * Maximum duplication is set in config value MAX_OBSTACLE_DUPLICATION.\n     * @return {boolean}\n     */\n    duplicateObstacleCheck(nextObstacleType) {\n        var duplicateCount = 0;\n        for (var i = 0; i < this.obstacleHistory.length; i++) {\n            duplicateCount = this.obstacleHistory[i] == nextObstacleType ?\n                duplicateCount + 1 : 0;\n        }\n        return duplicateCount >= Runner.config.MAX_OBSTACLE_DUPLICATION;\n    }\n    /**\n     * Reset the horizon layer.\n     * Remove existing obstacles and reposition the horizon line.\n     */\n    reset() {\n        this.obstacles = [];\n        this.horizonLine.reset();\n        this.nightMode.reset();\n    }\n    /**\n     * Update the canvas width and scaling.\n     * @param {number} width Canvas width.\n     * @param {number} height Canvas height.\n     */\n    resize(width, height) {\n        this.canvas.width = width;\n        this.canvas.height = height;\n    }\n    /**\n     * Add a new cloud to the horizon.\n     */\n    addCloud() {\n        this.clouds.push(new Cloud(this.canvas, this.spritePos.CLOUD, this.dimensions.WIDTH));\n    }\n}\n/**\n* Horizon config.\n* @enum {number}\n*/\nHorizon.config = {\n    BG_CLOUD_SPEED: 0.2,\n    BUMPY_THRESHOLD: .3,\n    CLOUD_FREQUENCY: .5,\n    HORIZON_HEIGHT: 16,\n    MAX_CLOUDS: 6\n};\n//# sourceMappingURL=Horizon.js.map","import { IS_HIDPI, FPS } from '.';\n/**\n* Horizon Line.\n* Consists of two connecting lines. Randomly assigns a flat / bumpy horizon.\n* @param {HTMLCanvasElement} canvas\n* @param {Object} spritePos Horizon position in sprite.\n* @constructor\n*/\nexport class HorizonLine {\n    constructor(canvas, spritePos) {\n        this.spritePos = spritePos;\n        this.canvas = canvas;\n        this.canvasCtx = canvas.getContext('2d');\n        this.sourceDimensions = {};\n        this.dimensions = HorizonLine.dimensions;\n        this.sourceXPos = [this.spritePos.x, this.spritePos.x +\n                this.dimensions.WIDTH];\n        this.xPos = [];\n        this.yPos = 0;\n        this.bumpThreshold = 0.5;\n        this.setSourceDimensions();\n        this.draw();\n    }\n    /**\n     * Set the source dimensions of the horizon line.\n     */\n    setSourceDimensions() {\n        for (var dimension in HorizonLine.dimensions) {\n            if (IS_HIDPI) {\n                if (dimension != 'YPOS') {\n                    this.sourceDimensions[dimension] =\n                        HorizonLine.dimensions[dimension] * 2;\n                }\n            }\n            else {\n                this.sourceDimensions[dimension] =\n                    HorizonLine.dimensions[dimension];\n            }\n            this.dimensions[dimension] = HorizonLine.dimensions[dimension];\n        }\n        this.xPos = [0, HorizonLine.dimensions.WIDTH];\n        this.yPos = HorizonLine.dimensions.YPOS;\n    }\n    /**\n     * Return the crop x position of a type.\n     */\n    getRandomType() {\n        return Math.random() > this.bumpThreshold ? this.dimensions.WIDTH : 0;\n    }\n    /**\n     * Draw the horizon line.\n     */\n    draw() {\n        this.canvasCtx.drawImage(Runner.imageSprite, this.sourceXPos[0], this.spritePos.y, this.sourceDimensions.WIDTH, this.sourceDimensions.HEIGHT, this.xPos[0], this.yPos, this.dimensions.WIDTH, this.dimensions.HEIGHT);\n        this.canvasCtx.drawImage(Runner.imageSprite, this.sourceXPos[1], this.spritePos.y, this.sourceDimensions.WIDTH, this.sourceDimensions.HEIGHT, this.xPos[1], this.yPos, this.dimensions.WIDTH, this.dimensions.HEIGHT);\n    }\n    /**\n     * Update the x position of an indivdual piece of the line.\n     * @param {number} pos Line position.\n     * @param {number} increment\n     */\n    updateXPos(pos, increment) {\n        var line1 = pos;\n        var line2 = pos == 0 ? 1 : 0;\n        this.xPos[line1] -= increment;\n        this.xPos[line2] = this.xPos[line1] + this.dimensions.WIDTH;\n        if (this.xPos[line1] <= -this.dimensions.WIDTH) {\n            this.xPos[line1] += this.dimensions.WIDTH * 2;\n            this.xPos[line2] = this.xPos[line1] - this.dimensions.WIDTH;\n            this.sourceXPos[line1] = this.getRandomType() + this.spritePos.x;\n        }\n    }\n    /**\n     * Update the horizon line.\n     * @param {number} deltaTime\n     * @param {number} speed\n     */\n    update(deltaTime, speed) {\n        var increment = Math.floor(speed * (FPS / 1000) * deltaTime);\n        if (this.xPos[0] <= 0) {\n            this.updateXPos(0, increment);\n        }\n        else {\n            this.updateXPos(1, increment);\n        }\n        this.draw();\n    }\n    /**\n     * Reset horizon to the starting position.\n     */\n    reset() {\n        this.xPos[0] = 0;\n        this.xPos[1] = HorizonLine.dimensions.WIDTH;\n    }\n}\n/**\n* Horizon line dimensions.\n* @enum {number}\n*/\nHorizonLine.dimensions = {\n    WIDTH: 600,\n    HEIGHT: 12,\n    YPOS: 127\n};\n//# sourceMappingURL=HorizonLine.js.map","import { getRandomNum, IS_HIDPI } from '.';\n/**\n* Nightmode shows a moon and stars on the horizon.\n*/\nexport class NightMode {\n    constructor(canvas, spritePos, containerWidth) {\n        this.spritePos = spritePos;\n        this.canvas = canvas;\n        this.canvasCtx = canvas.getContext('2d');\n        this.xPos = containerWidth - 50;\n        this.yPos = 30;\n        this.currentPhase = 0;\n        this.opacity = 0;\n        this.containerWidth = containerWidth;\n        this.stars = [];\n        this.drawStars = false;\n        this.placeStars();\n    }\n    /**\n     * Update moving moon, changing phases.\n     * @param {boolean} activated Whether night mode is activated.\n     * @param {number} delta\n     */\n    update(activated, delta) {\n        // Moon phase.\n        if (activated && this.opacity == 0) {\n            this.currentPhase++;\n            if (this.currentPhase >= NightMode.phases.length) {\n                this.currentPhase = 0;\n            }\n        }\n        // Fade in / out.\n        if (activated && (this.opacity < 1 || this.opacity == 0)) {\n            this.opacity += NightMode.config.FADE_SPEED;\n        }\n        else if (this.opacity > 0) {\n            this.opacity -= NightMode.config.FADE_SPEED;\n        }\n        // Set moon positioning.\n        if (this.opacity > 0) {\n            this.xPos = this.updateXPos(this.xPos, NightMode.config.MOON_SPEED);\n            // Update stars.\n            if (this.drawStars) {\n                for (var i = 0; i < NightMode.config.NUM_STARS; i++) {\n                    this.stars[i].x = this.updateXPos(this.stars[i].x, NightMode.config.STAR_SPEED);\n                }\n            }\n            this.draw();\n        }\n        else {\n            this.opacity = 0;\n            this.placeStars();\n        }\n        this.drawStars = true;\n    }\n    updateXPos(currentPos, speed) {\n        if (currentPos < -NightMode.config.WIDTH) {\n            currentPos = this.containerWidth;\n        }\n        else {\n            currentPos -= speed;\n        }\n        return currentPos;\n    }\n    draw() {\n        var moonSourceWidth = this.currentPhase == 3 ? NightMode.config.WIDTH * 2 :\n            NightMode.config.WIDTH;\n        var moonSourceHeight = NightMode.config.HEIGHT;\n        var moonSourceX = this.spritePos.x + NightMode.phases[this.currentPhase];\n        var moonOutputWidth = moonSourceWidth;\n        var starSize = NightMode.config.STAR_SIZE;\n        var starSourceX = Runner.spriteDefinition.LDPI.STAR.x;\n        if (IS_HIDPI) {\n            moonSourceWidth *= 2;\n            moonSourceHeight *= 2;\n            moonSourceX = this.spritePos.x +\n                (NightMode.phases[this.currentPhase] * 2);\n            starSize *= 2;\n            starSourceX = Runner.spriteDefinition.HDPI.STAR.x;\n        }\n        this.canvasCtx.save();\n        this.canvasCtx.globalAlpha = this.opacity;\n        // Stars.\n        if (this.drawStars) {\n            for (var i = 0; i < NightMode.config.NUM_STARS; i++) {\n                this.canvasCtx.drawImage(Runner.imageSprite, starSourceX, this.stars[i].sourceY, starSize, starSize, Math.round(this.stars[i].x), this.stars[i].y, NightMode.config.STAR_SIZE, NightMode.config.STAR_SIZE);\n            }\n        }\n        // Moon.\n        this.canvasCtx.drawImage(Runner.imageSprite, moonSourceX, this.spritePos.y, moonSourceWidth, moonSourceHeight, Math.round(this.xPos), this.yPos, moonOutputWidth, NightMode.config.HEIGHT);\n        this.canvasCtx.globalAlpha = 1;\n        this.canvasCtx.restore();\n    }\n    // Do star placement.\n    placeStars() {\n        var segmentSize = Math.round(this.containerWidth /\n            NightMode.config.NUM_STARS);\n        for (var i = 0; i < NightMode.config.NUM_STARS; i++) {\n            this.stars[i] = {};\n            this.stars[i].x = getRandomNum(segmentSize * i, segmentSize * (i + 1));\n            this.stars[i].y = getRandomNum(0, NightMode.config.STAR_MAX_Y);\n            if (IS_HIDPI) {\n                this.stars[i].sourceY = Runner.spriteDefinition.HDPI.STAR.y +\n                    NightMode.config.STAR_SIZE * 2 * i;\n            }\n            else {\n                this.stars[i].sourceY = Runner.spriteDefinition.LDPI.STAR.y +\n                    NightMode.config.STAR_SIZE * i;\n            }\n        }\n    }\n    reset() {\n        this.currentPhase = 0;\n        this.opacity = 0;\n        this.update(false);\n    }\n}\n/**\n* @enum {number}\n*/\nNightMode.config = {\n    FADE_SPEED: 0.035,\n    HEIGHT: 40,\n    MOON_SPEED: 0.25,\n    NUM_STARS: 2,\n    STAR_SIZE: 9,\n    STAR_SPEED: 0.3,\n    STAR_MAX_Y: 70,\n    WIDTH: 20\n};\nNightMode.phases = [140, 120, 100, 60, 40, 20, 0];\n//# sourceMappingURL=NightMode.js.map","import { CollisionBox, getRandomNum, IS_HIDPI, FPS, IS_MOBILE } from '.';\n/**\n * Obstacle.\n * @param {HTMLCanvasCtx} canvasCtx\n * @param {Obstacle.type} type\n * @param {Object} spritePos Obstacle position in sprite.\n * @param {Object} dimensions\n * @param {number} gapCoefficient Mutipler in determining the gap.\n * @param {number} speed\n * @param {number} opt_xOffset\n */\nexport class Obstacle {\n    constructor(canvasCtx, type, spriteImgPos, dimensions, gapCoefficient, speed, opt_xOffset) {\n        this.canvasCtx = canvasCtx;\n        this.spritePos = spriteImgPos;\n        this.typeConfig = type;\n        this.gapCoefficient = gapCoefficient;\n        this.size = getRandomNum(1, Obstacle.MAX_OBSTACLE_LENGTH);\n        this.dimensions = dimensions;\n        this.remove = false;\n        this.xPos = dimensions.WIDTH + (opt_xOffset || 0);\n        this.yPos = 0;\n        this.width = 0;\n        this.collisionBoxes = [];\n        this.gap = 0;\n        this.speedOffset = 0;\n        // For animated obstacles.\n        this.currentFrame = 0;\n        this.timer = 0;\n        this.init(speed);\n    }\n    /**\n    * Initialise the DOM for the obstacle.\n    * @param {number} speed\n    */\n    init(speed) {\n        this.cloneCollisionBoxes();\n        // Only allow sizing if we're at the right speed.\n        if (this.size > 1 && this.typeConfig.multipleSpeed > speed) {\n            this.size = 1;\n        }\n        this.width = this.typeConfig.width * this.size;\n        // Check if obstacle can be positioned at various heights.\n        if (Array.isArray(this.typeConfig.yPos)) {\n            var yPosConfig = IS_MOBILE ? this.typeConfig.yPosMobile :\n                this.typeConfig.yPos;\n            this.yPos = yPosConfig[getRandomNum(0, yPosConfig.length - 1)];\n        }\n        else {\n            this.yPos = this.typeConfig.yPos;\n        }\n        this.draw();\n        // Make collision box adjustments,\n        // Central box is adjusted to the size as one box.\n        //      ____        ______        ________\n        //    _|   |-|    _|     |-|    _|       |-|\n        //   | |<->| |   | |<--->| |   | |<----->| |\n        //   | | 1 | |   | |  2  | |   | |   3   | |\n        //   |_|___|_|   |_|_____|_|   |_|_______|_|\n        //\n        if (this.size > 1) {\n            this.collisionBoxes[1].width = this.width - this.collisionBoxes[0].width -\n                this.collisionBoxes[2].width;\n            this.collisionBoxes[2].x = this.width - this.collisionBoxes[2].width;\n        }\n        // For obstacles that go at a different speed from the horizon.\n        if (this.typeConfig.speedOffset) {\n            this.speedOffset = Math.random() > 0.5 ? this.typeConfig.speedOffset :\n                -this.typeConfig.speedOffset;\n        }\n        this.gap = this.getGap(this.gapCoefficient, speed);\n    }\n    /**\n    * Draw and crop based on size.\n    */\n    draw() {\n        var sourceWidth = this.typeConfig.width;\n        var sourceHeight = this.typeConfig.height;\n        if (IS_HIDPI) {\n            sourceWidth = sourceWidth * 2;\n            sourceHeight = sourceHeight * 2;\n        }\n        // X position in sprite.\n        var sourceX = (sourceWidth * this.size) * (0.5 * (this.size - 1)) +\n            this.spritePos.x;\n        // Animation frames.\n        if (this.currentFrame > 0) {\n            sourceX += sourceWidth * this.currentFrame;\n        }\n        this.canvasCtx.drawImage(Runner.imageSprite, sourceX, this.spritePos.y, sourceWidth * this.size, sourceHeight, this.xPos, this.yPos, this.typeConfig.width * this.size, this.typeConfig.height);\n    }\n    /**\n    * Obstacle frame update.\n    * @param {number} deltaTime\n    * @param {number} speed\n    */\n    update(deltaTime, speed) {\n        if (!this.remove) {\n            if (this.typeConfig.speedOffset) {\n                speed += this.speedOffset;\n            }\n            this.xPos -= Math.floor((speed * FPS / 1000) * deltaTime);\n            // Update frame\n            if (this.typeConfig.numFrames) {\n                this.timer += deltaTime;\n                if (this.timer >= this.typeConfig.frameRate) {\n                    this.currentFrame =\n                        this.currentFrame == this.typeConfig.numFrames - 1 ?\n                            0 : this.currentFrame + 1;\n                    this.timer = 0;\n                }\n            }\n            this.draw();\n            if (!this.isVisible()) {\n                this.remove = true;\n            }\n        }\n    }\n    /**\n    * Calculate a random gap size.\n    * - Minimum gap gets wider as speed increses\n    * @param {number} gapCoefficient\n    * @param {number} speed\n    * @return {number} The gap size.\n    */\n    getGap(gapCoefficient, speed) {\n        var minGap = Math.round(this.width * speed +\n            this.typeConfig.minGap * gapCoefficient);\n        var maxGap = Math.round(minGap * Obstacle.MAX_GAP_COEFFICIENT);\n        return getRandomNum(minGap, maxGap);\n    }\n    /**\n    * Check if obstacle is visible.\n    * @return {boolean} Whether the obstacle is in the game area.\n    */\n    isVisible() {\n        return this.xPos + this.width > 0;\n    }\n    /**\n    * Make a copy of the collision boxes, since these will change based on\n    * obstacle type and size.\n    */\n    cloneCollisionBoxes() {\n        var collisionBoxes = this.typeConfig.collisionBoxes;\n        for (var i = collisionBoxes.length - 1; i >= 0; i--) {\n            this.collisionBoxes[i] = new CollisionBox(collisionBoxes[i].x, collisionBoxes[i].y, collisionBoxes[i].width, collisionBoxes[i].height);\n        }\n    }\n}\n/**\n* Coefficient for calculating the maximum gap.\n* @const\n*/\nObstacle.MAX_GAP_COEFFICIENT = 1.5;\n/**\n* Maximum obstacle grouping count.\n* @const\n*/\nObstacle.MAX_OBSTACLE_LENGTH = 3;\n/**\n* Obstacle definitions.\n* minGap: minimum pixel space betweeen obstacles.\n* multipleSpeed: Speed at which multiples are allowed.\n* speedOffset: speed faster / slower than the horizon.\n* minSpeed: Minimum speed which the obstacle can make an appearance.\n*/\nObstacle.types = [\n    {\n        type: 'CACTUS_SMALL',\n        width: 17,\n        height: 35,\n        yPos: 105,\n        multipleSpeed: 4,\n        minGap: 120,\n        minSpeed: 0,\n        collisionBoxes: [\n            new CollisionBox(0, 7, 5, 27),\n            new CollisionBox(4, 0, 6, 34),\n            new CollisionBox(10, 4, 7, 14)\n        ]\n    },\n    {\n        type: 'CACTUS_LARGE',\n        width: 25,\n        height: 50,\n        yPos: 90,\n        multipleSpeed: 7,\n        minGap: 120,\n        minSpeed: 0,\n        collisionBoxes: [\n            new CollisionBox(0, 12, 7, 38),\n            new CollisionBox(8, 0, 7, 49),\n            new CollisionBox(13, 10, 10, 38)\n        ]\n    },\n    {\n        type: 'PTERODACTYL',\n        width: 46,\n        height: 40,\n        yPos: [100, 75, 50],\n        yPosMobile: [100, 50],\n        multipleSpeed: 999,\n        minSpeed: 8.5,\n        minGap: 150,\n        collisionBoxes: [\n            new CollisionBox(15, 15, 16, 5),\n            new CollisionBox(18, 21, 24, 6),\n            new CollisionBox(2, 14, 4, 3),\n            new CollisionBox(6, 10, 4, 7),\n            new CollisionBox(10, 8, 6, 9)\n        ],\n        numFrames: 2,\n        frameRate: 1000 / 6,\n        speedOffset: .8\n    }\n];\n//# sourceMappingURL=Obstacle.js.map","import { CollisionBox, FPS, IS_HIDPI, getTimeStamp } from '.';\n/**\n* T-rex game character.\n* @param {HTMLCanvas} canvas\n* @param {Object} spritePos Positioning within image sprite.\n* @constructor\n*/\nexport class Trex {\n    constructor(canvas, spritePos) {\n        this.canvas = canvas;\n        this.canvasCtx = canvas.getContext('2d');\n        this.spritePos = spritePos;\n        this.xPos = 0;\n        this.yPos = 0;\n        // Position when on the ground.\n        this.groundYPos = 0;\n        this.currentFrame = 0;\n        this.currentAnimFrames = [];\n        this.blinkDelay = 0;\n        this.blinkCount = 0;\n        this.animStartTime = 0;\n        this.timer = 0;\n        this.msPerFrame = 1000 / FPS;\n        this.config = Trex.config;\n        // Current status.\n        this.status = Trex.status.WAITING;\n        this.jumping = false;\n        this.ducking = false;\n        this.jumpVelocity = 0;\n        this.reachedMinHeight = false;\n        this.speedDrop = false;\n        this.jumpCount = 0;\n        this.jumpspotX = 0;\n        this.init();\n    }\n    /**\n     * T-rex player initaliser.\n     * Sets the t-rex to blink at random intervals.\n     */\n    init() {\n        this.groundYPos = Runner.defaultDimensions.HEIGHT - this.config.HEIGHT -\n            Runner.config.BOTTOM_PAD;\n        this.yPos = this.groundYPos;\n        this.minJumpHeight = this.groundYPos - this.config.MIN_JUMP_HEIGHT;\n        this.draw(0, 0);\n        this.update(0, Trex.status.WAITING);\n    }\n    /**\n     * Setter for the jump velocity.\n     * The approriate drop velocity is also set.\n     */\n    setJumpVelocity(setting) {\n        this.config.INIITAL_JUMP_VELOCITY = -setting;\n        this.config.DROP_VELOCITY = -setting / 2;\n    }\n    /**\n     * Set the animation status.\n     * @param {!number} deltaTime\n     * @param {Trex.status} status Optional status to switch to.\n     */\n    update(deltaTime, opt_status) {\n        this.timer += deltaTime;\n        // Update the status.\n        if (opt_status) {\n            this.status = opt_status;\n            this.currentFrame = 0;\n            this.msPerFrame = Trex.animFrames[opt_status].msPerFrame;\n            this.currentAnimFrames = Trex.animFrames[opt_status].frames;\n            if (opt_status == Trex.status.WAITING) {\n                this.animStartTime = getTimeStamp();\n                this.setBlinkDelay();\n            }\n        }\n        // Game intro animation, T-rex moves in from the left.\n        if (this.playingIntro && this.xPos < this.config.START_X_POS) {\n            this.xPos += Math.round((this.config.START_X_POS /\n                this.config.INTRO_DURATION) * deltaTime);\n        }\n        if (this.status == Trex.status.WAITING) {\n            this.blink(getTimeStamp());\n        }\n        else {\n            this.draw(this.currentAnimFrames[this.currentFrame], 0);\n        }\n        // Update the frame position.\n        if (this.timer >= this.msPerFrame) {\n            this.currentFrame = this.currentFrame ==\n                this.currentAnimFrames.length - 1 ? 0 : this.currentFrame + 1;\n            this.timer = 0;\n        }\n        // Speed drop becomes duck if the down key is still being pressed.\n        if (this.speedDrop && this.yPos == this.groundYPos) {\n            this.speedDrop = false;\n            this.setDuck(true);\n        }\n    }\n    /**\n     * Draw the t-rex to a particular position.\n     * @param {number} x\n     * @param {number} y\n     */\n    draw(x, y) {\n        var sourceX = x;\n        var sourceY = y;\n        var sourceWidth = this.ducking && this.status != Trex.status.CRASHED ?\n            this.config.WIDTH_DUCK : this.config.WIDTH;\n        var sourceHeight = this.config.HEIGHT;\n        if (IS_HIDPI) {\n            sourceX *= 2;\n            sourceY *= 2;\n            sourceWidth *= 2;\n            sourceHeight *= 2;\n        }\n        // Adjustments for sprite sheet position.\n        sourceX += this.spritePos.x;\n        sourceY += this.spritePos.y;\n        // Ducking.\n        if (this.ducking && this.status != Trex.status.CRASHED) {\n            this.canvasCtx.drawImage(Runner.imageSprite, sourceX, sourceY, sourceWidth, sourceHeight, this.xPos, this.yPos, this.config.WIDTH_DUCK, this.config.HEIGHT);\n        }\n        else {\n            // Crashed whilst ducking. Trex is standing up so needs adjustment.\n            if (this.ducking && this.status == Trex.status.CRASHED) {\n                this.xPos++;\n            }\n            // Standing / running\n            this.canvasCtx.drawImage(Runner.imageSprite, sourceX, sourceY, sourceWidth, sourceHeight, this.xPos, this.yPos, this.config.WIDTH, this.config.HEIGHT);\n        }\n    }\n    /**\n     * Sets a random time for the blink to happen.\n     */\n    setBlinkDelay() {\n        this.blinkDelay = Math.ceil(Math.random() * Trex.BLINK_TIMING);\n    }\n    /**\n     * Make t-rex blink at random intervals.\n     * @param {number} time Current time in milliseconds.\n     */\n    blink(time) {\n        var deltaTime = time - this.animStartTime;\n        if (deltaTime >= this.blinkDelay) {\n            this.draw(this.currentAnimFrames[this.currentFrame], 0);\n            if (this.currentFrame == 1) {\n                // Set new random delay to blink.\n                this.setBlinkDelay();\n                this.animStartTime = time;\n                this.blinkCount++;\n            }\n        }\n    }\n    /**\n     * Initialise a jump.\n     * @param {number} speed\n     */\n    startJump(speed) {\n        if (!this.jumping) {\n            this.update(0, Trex.status.JUMPING);\n            // Tweak the jump velocity based on the speed.\n            this.jumpVelocity = this.config.INIITAL_JUMP_VELOCITY - (speed / 10);\n            this.jumping = true;\n            this.reachedMinHeight = false;\n            this.speedDrop = false;\n        }\n    }\n    /**\n     * Jump is complete, falling down.\n     */\n    endJump() {\n        if (this.reachedMinHeight &&\n            this.jumpVelocity < this.config.DROP_VELOCITY) {\n            this.jumpVelocity = this.config.DROP_VELOCITY;\n        }\n    }\n    /**\n     * Update frame for a jump.\n     * @param {number} deltaTime\n     * @param {number} speed\n     */\n    updateJump(deltaTime, speed) {\n        var msPerFrame = Trex.animFrames[this.status].msPerFrame;\n        var framesElapsed = deltaTime / msPerFrame;\n        // Speed drop makes Trex fall faster.\n        if (this.speedDrop) {\n            this.yPos += Math.round(this.jumpVelocity *\n                this.config.SPEED_DROP_COEFFICIENT * framesElapsed);\n        }\n        else {\n            this.yPos += Math.round(this.jumpVelocity * framesElapsed);\n        }\n        this.jumpVelocity += this.config.GRAVITY * framesElapsed;\n        // Minimum height has been reached.\n        if (this.yPos < this.minJumpHeight || this.speedDrop) {\n            this.reachedMinHeight = true;\n        }\n        // Reached max height\n        if (this.yPos < this.config.MAX_JUMP_HEIGHT || this.speedDrop) {\n            this.endJump();\n        }\n        // Back down at ground level. Jump completed.\n        if (this.yPos > this.groundYPos) {\n            this.reset();\n            this.jumpCount++;\n        }\n        this.update(deltaTime);\n    }\n    /**\n     * Set the speed drop. Immediately cancels the current jump.\n     */\n    setSpeedDrop() {\n        this.speedDrop = true;\n        this.jumpVelocity = 1;\n    }\n    /**\n     * @param {boolean} isDucking.\n     */\n    setDuck(isDucking) {\n        if (isDucking && this.status != Trex.status.DUCKING) {\n            this.update(0, Trex.status.DUCKING);\n            this.ducking = true;\n        }\n        else if (this.status == Trex.status.DUCKING) {\n            this.update(0, Trex.status.RUNNING);\n            this.ducking = false;\n        }\n    }\n    /**\n     * Reset the t-rex to running at start of game.\n     */\n    reset() {\n        this.yPos = this.groundYPos;\n        this.jumpVelocity = 0;\n        this.jumping = false;\n        this.ducking = false;\n        this.update(0, Trex.status.RUNNING);\n        this.midair = false;\n        this.speedDrop = false;\n        this.jumpCount = 0;\n    }\n}\n/**\n* T-rex player config.\n* @enum {number}\n*/\nTrex.config = {\n    DROP_VELOCITY: -5,\n    GRAVITY: 0.6,\n    HEIGHT: 47,\n    HEIGHT_DUCK: 25,\n    INIITAL_JUMP_VELOCITY: -10,\n    INTRO_DURATION: 1500,\n    MAX_JUMP_HEIGHT: 30,\n    MIN_JUMP_HEIGHT: 30,\n    SPEED_DROP_COEFFICIENT: 3,\n    SPRITE_WIDTH: 262,\n    START_X_POS: 50,\n    WIDTH: 44,\n    WIDTH_DUCK: 59\n};\n/**\n* Used in collision detection.\n* @type {Array<CollisionBox>}\n*/\nTrex.collisionBoxes = {\n    DUCKING: [\n        new CollisionBox(1, 18, 55, 25)\n    ],\n    RUNNING: [\n        new CollisionBox(22, 0, 17, 16),\n        new CollisionBox(1, 18, 30, 9),\n        new CollisionBox(10, 35, 14, 8),\n        new CollisionBox(1, 24, 29, 5),\n        new CollisionBox(5, 30, 21, 4),\n        new CollisionBox(9, 34, 15, 4)\n    ]\n};\n/**\n* Animation states.\n* @enum {string}\n*/\nTrex.status = {\n    CRASHED: 'CRASHED',\n    DUCKING: 'DUCKING',\n    JUMPING: 'JUMPING',\n    RUNNING: 'RUNNING',\n    WAITING: 'WAITING'\n};\n/**\n* Blinking coefficient.\n* @const\n*/\nTrex.BLINK_TIMING = 7000;\n/**\n* Animation config for different states.\n* @enum {Object}\n*/\nTrex.animFrames = {\n    WAITING: {\n        frames: [44, 0],\n        msPerFrame: 1000 / 3\n    },\n    RUNNING: {\n        frames: [88, 132],\n        msPerFrame: 1000 / 12\n    },\n    CRASHED: {\n        frames: [220],\n        msPerFrame: 1000 / 60\n    },\n    JUMPING: {\n        frames: [0],\n        msPerFrame: 1000 / 60\n    },\n    DUCKING: {\n        frames: [264, 323],\n        msPerFrame: 1000 / 8\n    }\n};\n//# sourceMappingURL=Trex.js.map","// Copyright (c) 2014 The Chromium Authors. All rights reserved.\n// Use of this source code is governed by a BSD-style license that can be\n// found in the LICENSE file.\n// extract from chromium source code by @liuwayong\nimport { Horizon, Trex, GameOverPanel, DistanceMeter, DEFAULT_WIDTH, FPS, IS_HIDPI, IS_MOBILE, IS_IOS, getTimeStamp, decodeBase64ToArrayBuffer, createCanvas, checkForCollision, vibrate } from '.';\n/**\n * T-Rex runner.\n * @param {string} outerContainerId Outer containing element id.\n * @param {Object} opt_config\n * @constructor\n * @export\n */\nexport class Runner {\n    constructor(outerContainerId, opt_config) {\n        // Singleton\n        if (Runner.instance_) {\n            return Runner.instance_;\n        }\n        Runner.instance_ = this;\n        this.outerContainerEl = document.querySelector(outerContainerId);\n        this.containerEl = null;\n        this.snackbarEl = null;\n        this.detailsButton = this.outerContainerEl.querySelector('#details-button');\n        this.config = opt_config || Runner.config;\n        this.dimensions = Runner.defaultDimensions;\n        this.canvas = null;\n        this.canvasCtx = null;\n        this.tRex = null;\n        this.distanceMeter = null;\n        this.distanceRan = 0;\n        this.highestScore = 0;\n        this.time = 0;\n        this.runningTime = 0;\n        this.msPerFrame = 1000 / FPS;\n        this.currentSpeed = this.config.SPEED;\n        this.obstacles = [];\n        this.activated = false; // Whether the easter egg has been activated.\n        this.playing = false; // Whether the game is currently in play state.\n        this.crashed = false;\n        this.paused = false;\n        this.inverted = true; // actives Night mode / Shows stars and the moon\n        this.invertTimer = 0;\n        this.resizeTimerId_ = null;\n        this.playCount = 0;\n        // Sound FX.\n        this.audioBuffer = null;\n        this.soundFx = {};\n        // Global web audio context for playing sounds.\n        this.audioContext = null;\n        // Images.\n        this.images = {};\n        this.imagesLoaded = 0;\n        if (this.isDisabled()) {\n            this.setupDisabledRunner();\n        }\n        else {\n            this.loadImages();\n        }\n    }\n    /**\n     * Stops the game, clears container and clears game instance\n     */\n    destroy() {\n        this.stop();\n        this.stopListening();\n        this.containerEl = null;\n        Runner.instance_ = null;\n    }\n    /**\n       * Whether the easter egg has been disabled. CrOS enterprise enrolled devices.\n       * @return {boolean}\n       */\n    isDisabled() {\n        // return loadTimeData && loadTimeData.valueExists('disabledEasterEgg');\n        return false;\n    }\n    /**\n     * For disabled instances, set up a snackbar with the disabled message.\n     */\n    setupDisabledRunner() {\n        this.containerEl = document.createElement('div');\n        this.containerEl.className = Runner.classes.SNACKBAR;\n        this.containerEl.textContent = loadTimeData.getValue('disabledEasterEgg');\n        this.outerContainerEl.appendChild(this.containerEl);\n        // Show notification when the activation key is pressed.\n        document.addEventListener(Runner.events.KEYDOWN, function (e) {\n            if (Runner.keycodes.JUMP[e.keyCode]) {\n                this.containerEl.classList.add(Runner.classes.SNACKBAR_SHOW);\n                document.querySelector('.icon').classList.add('icon-disabled');\n            }\n        }.bind(this));\n    }\n    /**\n     * Setting individual settings for debugging.\n     * @param {string} setting\n     * @param {*} value\n     */\n    updateConfigSetting(setting, value) {\n        if (setting in this.config && value != undefined) {\n            this.config[setting] = value;\n            switch (setting) {\n                case 'GRAVITY':\n                case 'MIN_JUMP_HEIGHT':\n                case 'SPEED_DROP_COEFFICIENT':\n                    this.tRex.config[setting] = value;\n                    break;\n                case 'INITIAL_JUMP_VELOCITY':\n                    this.tRex.setJumpVelocity(value);\n                    break;\n                case 'SPEED':\n                    this.setSpeed(value);\n                    break;\n            }\n        }\n    }\n    /**\n     * Cache the appropriate image sprite from the page and get the sprite sheet\n     * definition.\n     */\n    loadImages() {\n        if (IS_HIDPI) {\n            Runner.imageSprite = document.getElementById('offline-resources-2x');\n            this.spriteDef = Runner.spriteDefinition.HDPI;\n        }\n        else {\n            Runner.imageSprite = document.getElementById('offline-resources-1x');\n            this.spriteDef = Runner.spriteDefinition.LDPI;\n        }\n        if (Runner.imageSprite.complete) {\n            this.init();\n        }\n        else {\n            // If the images are not yet loaded, add a listener.\n            Runner.imageSprite.addEventListener(Runner.events.LOAD, this.init.bind(this));\n        }\n    }\n    /**\n     * Load and decode base 64 encoded sounds.\n     */\n    loadSounds() {\n        if (!IS_IOS) {\n            this.audioContext = new AudioContext();\n            var resourceTemplate = document.getElementById(this.config.RESOURCE_TEMPLATE_ID);\n            for (var sound in Runner.sounds) {\n                var soundSrc = resourceTemplate.querySelector('#' + Runner.sounds[sound]).src;\n                soundSrc = soundSrc.substr(soundSrc.indexOf(',') + 1);\n                var buffer = decodeBase64ToArrayBuffer(soundSrc);\n                // Async, so no guarantee of order in array.\n                this.audioContext.decodeAudioData(buffer, function (index, audioData) {\n                    this.soundFx[index] = audioData;\n                }.bind(this, sound));\n            }\n        }\n    }\n    /**\n     * Sets the game speed. Adjust the speed accordingly if on a smaller screen.\n     * @param {number} opt_speed\n     */\n    setSpeed(opt_speed) {\n        var speed = opt_speed || this.currentSpeed;\n        // Reduce the speed on smaller mobile screens.\n        if (this.dimensions.WIDTH < DEFAULT_WIDTH) {\n            var mobileSpeed = speed * this.dimensions.WIDTH / DEFAULT_WIDTH *\n                this.config.MOBILE_SPEED_COEFFICIENT;\n            this.currentSpeed = mobileSpeed > speed ? speed : mobileSpeed;\n        }\n        else if (opt_speed) {\n            this.currentSpeed = opt_speed;\n        }\n    }\n    /**\n     * Game initialiser.\n     */\n    init() {\n        // Hide the static icon.\n        document.querySelector('.' + Runner.classes.ICON).style.visibility =\n            'hidden';\n        this.adjustDimensions();\n        this.setSpeed();\n        this.containerEl = document.createElement('div');\n        this.containerEl.className = Runner.classes.CONTAINER;\n        // Player canvas container.\n        this.canvas = createCanvas(this.containerEl, this.dimensions.WIDTH, this.dimensions.HEIGHT, Runner.classes.PLAYER);\n        this.canvasCtx = this.canvas.getContext('2d');\n        this.canvasCtx.fillStyle = '#f7f7f7';\n        this.canvasCtx.fill();\n        Runner.updateCanvasScaling(this.canvas);\n        // Horizon contains clouds, obstacles and the ground.\n        this.horizon = new Horizon(this.canvas, this.spriteDef, this.dimensions, this.config.GAP_COEFFICIENT);\n        // Distance meter\n        this.distanceMeter = new DistanceMeter(this.canvas, this.spriteDef.TEXT_SPRITE, this.dimensions.WIDTH);\n        // Draw t-rex\n        this.tRex = new Trex(this.canvas, this.spriteDef.TREX);\n        this.outerContainerEl.appendChild(this.containerEl);\n        if (IS_MOBILE) {\n            this.createTouchController();\n        }\n        this.startListening();\n        this.update();\n        window.addEventListener(Runner.events.RESIZE, this.debounceResize.bind(this));\n    }\n    /**\n     * Create the touch controller. A div that covers whole screen.\n     */\n    createTouchController() {\n        this.touchController = document.createElement('div');\n        this.touchController.className = Runner.classes.TOUCH_CONTROLLER;\n        this.outerContainerEl.appendChild(this.touchController);\n    }\n    /**\n     * Debounce the resize event.\n     */\n    debounceResize() {\n        if (!this.resizeTimerId_) {\n            this.resizeTimerId_ =\n                setInterval(this.adjustDimensions.bind(this), 250);\n        }\n    }\n    /**\n     * Adjust game space dimensions on resize.\n     */\n    adjustDimensions() {\n        clearInterval(this.resizeTimerId_);\n        this.resizeTimerId_ = null;\n        var boxStyles = window.getComputedStyle(this.outerContainerEl);\n        var padding = Number(boxStyles.paddingLeft.substr(0, boxStyles.paddingLeft.length - 2));\n        this.dimensions.WIDTH = this.outerContainerEl.offsetWidth - padding * 2;\n        // Redraw the elements back onto the canvas.\n        if (this.canvas) {\n            this.canvas.width = this.dimensions.WIDTH;\n            this.canvas.height = this.dimensions.HEIGHT;\n            Runner.updateCanvasScaling(this.canvas);\n            this.distanceMeter.calcXPos(this.dimensions.WIDTH);\n            this.clearCanvas();\n            this.horizon.update(0, 0, true);\n            this.tRex.update(0);\n            // Outer container and distance meter.\n            if (this.playing || this.crashed || this.paused) {\n                this.containerEl.style.width = this.dimensions.WIDTH + 'px';\n                this.containerEl.style.height = this.dimensions.HEIGHT + 'px';\n                this.distanceMeter.update(0, Math.ceil(this.distanceRan));\n                this.stop();\n            }\n            else {\n                this.tRex.draw(0, 0);\n            }\n            // Game over panel.\n            if (this.crashed && this.gameOverPanel) {\n                this.gameOverPanel.updateDimensions(this.dimensions.WIDTH);\n                this.gameOverPanel.draw();\n            }\n        }\n    }\n    /**\n     * Play the game intro.\n     * Canvas container width expands out to the full width.\n     */\n    playIntro() {\n        if (!this.activated && !this.crashed) {\n            this.playingIntro = true;\n            this.tRex.playingIntro = true;\n            // CSS animation definition.\n            var keyframes = '@-webkit-keyframes intro { ' +\n                'from { width:' + Trex.config.WIDTH + 'px }' +\n                'to { width: ' + this.dimensions.WIDTH + 'px }' +\n                '}';\n            // create a style sheet to put the keyframe rule in \n            // and then place the style sheet in the html head    \n            var sheet = document.createElement('style');\n            sheet.innerHTML = keyframes;\n            document.head.appendChild(sheet);\n            this.containerEl.addEventListener(Runner.events.ANIM_END, this.startGame.bind(this));\n            this.containerEl.style.webkitAnimation = 'intro .4s ease-out 1 both';\n            this.containerEl.style.width = this.dimensions.WIDTH + 'px';\n            // if (this.touchController) {\n            //     this.outerContainerEl.appendChild(this.touchController);\n            // }\n            this.playing = true;\n            this.activated = true;\n        }\n        else if (this.crashed) {\n            this.restart();\n        }\n    }\n    /**\n     * Update the game status to started.\n     */\n    startGame() {\n        this.runningTime = 0;\n        this.playingIntro = false;\n        this.tRex.playingIntro = false;\n        this.containerEl.style.webkitAnimation = '';\n        this.playCount++;\n        // Handle tabbing off the page. Pause the current game.\n        document.addEventListener(Runner.events.VISIBILITY, this.onVisibilityChange.bind(this));\n        window.addEventListener(Runner.events.BLUR, this.onVisibilityChange.bind(this));\n        window.addEventListener(Runner.events.FOCUS, this.onVisibilityChange.bind(this));\n    }\n    clearCanvas() {\n        this.canvasCtx.clearRect(0, 0, this.dimensions.WIDTH, this.dimensions.HEIGHT);\n    }\n    /**\n     * Update the game frame and schedules the next one.\n     */\n    update() {\n        this.updatePending = false;\n        var now = getTimeStamp();\n        var deltaTime = now - (this.time || now);\n        this.time = now;\n        if (this.playing) {\n            this.clearCanvas();\n            if (this.tRex.jumping) {\n                this.tRex.updateJump(deltaTime);\n            }\n            this.runningTime += deltaTime;\n            var hasObstacles = this.runningTime > this.config.CLEAR_TIME;\n            // First jump triggers the intro.\n            if (this.tRex.jumpCount == 1 && !this.playingIntro) {\n                this.playIntro();\n            }\n            // The horizon doesn't move until the intro is over.\n            if (this.playingIntro) {\n                this.horizon.update(0, this.currentSpeed, hasObstacles);\n            }\n            else {\n                deltaTime = !this.activated ? 0 : deltaTime;\n                this.horizon.update(deltaTime, this.currentSpeed, hasObstacles, this.inverted);\n            }\n            // Check for collisions.\n            var collision = hasObstacles &&\n                checkForCollision(this.horizon.obstacles[0], this.tRex);\n            if (!collision) {\n                this.distanceRan += this.currentSpeed * deltaTime / this.msPerFrame;\n                if (this.currentSpeed < this.config.MAX_SPEED) {\n                    this.currentSpeed += this.config.ACCELERATION;\n                }\n            }\n            else {\n                this.gameOver();\n            }\n            var playAchievementSound = this.distanceMeter.update(deltaTime, Math.ceil(this.distanceRan));\n            if (playAchievementSound) {\n                this.playSound(this.soundFx.SCORE);\n            }\n            // Night mode.\n            if (this.invertTimer > this.config.INVERT_FADE_DURATION) {\n                this.invertTimer = 0;\n                this.invertTrigger = false;\n                this.invert();\n            }\n            else if (this.invertTimer) {\n                this.invertTimer += deltaTime;\n            }\n            else {\n                var actualDistance = this.distanceMeter.getActualDistance(Math.ceil(this.distanceRan));\n                if (actualDistance > 0) {\n                    this.invertTrigger = !(actualDistance %\n                        this.config.INVERT_DISTANCE);\n                    if (this.invertTrigger && this.invertTimer === 0) {\n                        this.invertTimer += deltaTime;\n                        this.invert();\n                    }\n                }\n            }\n        }\n        if (this.playing || (!this.activated &&\n            this.tRex.blinkCount < Runner.config.MAX_BLINK_COUNT)) {\n            this.tRex.update(deltaTime);\n            this.scheduleNextUpdate();\n        }\n    }\n    /**\n     * Event handler.\n     */\n    handleEvent(e) {\n        return (function (evtType, events) {\n            switch (evtType) {\n                case events.KEYDOWN:\n                case events.TOUCHSTART:\n                case events.MOUSEDOWN:\n                    this.onKeyDown(e);\n                    break;\n                case events.KEYUP:\n                case events.TOUCHEND:\n                case events.MOUSEUP:\n                    this.onKeyUp(e);\n                    break;\n            }\n        }.bind(this))(e.type, Runner.events);\n    }\n    /**\n     * Bind relevant key / mouse / touch listeners.\n     */\n    startListening() {\n        // Keys.\n        document.addEventListener(Runner.events.KEYDOWN, this);\n        document.addEventListener(Runner.events.KEYUP, this);\n        if (IS_MOBILE) {\n            // Mobile only touch devices.\n            this.touchController.addEventListener(Runner.events.TOUCHSTART, this);\n            this.touchController.addEventListener(Runner.events.TOUCHEND, this);\n            this.containerEl.addEventListener(Runner.events.TOUCHSTART, this);\n        }\n        else {\n            // Mouse.\n            document.addEventListener(Runner.events.MOUSEDOWN, this);\n            document.addEventListener(Runner.events.MOUSEUP, this);\n        }\n    }\n    /**\n     * Remove all listeners.\n     */\n    stopListening() {\n        document.removeEventListener(Runner.events.KEYDOWN, this);\n        document.removeEventListener(Runner.events.KEYUP, this);\n        if (IS_MOBILE) {\n            this.touchController.removeEventListener(Runner.events.TOUCHSTART, this);\n            this.touchController.removeEventListener(Runner.events.TOUCHEND, this);\n            this.containerEl.removeEventListener(Runner.events.TOUCHSTART, this);\n        }\n        else {\n            document.removeEventListener(Runner.events.MOUSEDOWN, this);\n            document.removeEventListener(Runner.events.MOUSEUP, this);\n        }\n    }\n    /**\n     * Process keydown.\n     * @param {Event} e\n     */\n    onKeyDown(e) {\n        // Prevent native page scrolling whilst tapping on mobile.\n        if (IS_MOBILE && this.playing) {\n            e.preventDefault();\n        }\n        if (e.target != this.detailsButton) {\n            if (!this.crashed && (Runner.keycodes.JUMP[e.keyCode] ||\n                e.type == Runner.events.TOUCHSTART)) {\n                if (!this.playing) {\n                    this.loadSounds();\n                    this.playing = true;\n                    this.update();\n                    if (window.errorPageController) {\n                        errorPageController.trackEasterEgg();\n                    }\n                }\n                //  Play sound effect and jump on starting the game for the first time.\n                if (!this.tRex.jumping && !this.tRex.ducking) {\n                    this.playSound(this.soundFx.BUTTON_PRESS);\n                    this.tRex.startJump(this.currentSpeed);\n                }\n            }\n            if (this.crashed && e.type == Runner.events.TOUCHSTART &&\n                e.currentTarget == this.containerEl) {\n                this.restart();\n            }\n        }\n        if (this.playing && !this.crashed && Runner.keycodes.DUCK[e.keyCode]) {\n            e.preventDefault();\n            if (this.tRex.jumping) {\n                // Speed drop, activated only when jump key is not pressed.\n                this.tRex.setSpeedDrop();\n            }\n            else if (!this.tRex.jumping && !this.tRex.ducking) {\n                // Duck.\n                this.tRex.setDuck(true);\n            }\n        }\n    }\n    /**\n     * Process key up.\n     * @param {Event} e\n     */\n    onKeyUp(e) {\n        var keyCode = String(e.keyCode);\n        var isjumpKey = Runner.keycodes.JUMP[keyCode] ||\n            e.type == Runner.events.TOUCHEND ||\n            e.type == Runner.events.MOUSEDOWN;\n        if (this.isRunning() && isjumpKey) {\n            this.tRex.endJump();\n        }\n        else if (Runner.keycodes.DUCK[keyCode]) {\n            this.tRex.speedDrop = false;\n            this.tRex.setDuck(false);\n        }\n        else if (this.crashed) {\n            // Check that enough time has elapsed before allowing jump key to restart.\n            var deltaTime = getTimeStamp() - this.time;\n            if (Runner.keycodes.RESTART[keyCode] || this.isLeftClickOnCanvas(e) ||\n                (deltaTime >= this.config.GAMEOVER_CLEAR_TIME &&\n                    Runner.keycodes.JUMP[keyCode])) {\n                this.restart();\n            }\n        }\n        else if (this.paused && isjumpKey) {\n            // Reset the jump state\n            this.tRex.reset();\n            this.play();\n        }\n    }\n    /**\n     * Returns whether the event was a left click on canvas.\n     * On Windows right click is registered as a click.\n     * @param {Event} e\n     * @return {boolean}\n     */\n    isLeftClickOnCanvas(e) {\n        return e.button != null && e.button < 2 &&\n            e.type == Runner.events.MOUSEUP && e.target == this.canvas;\n    }\n    /**\n     * RequestAnimationFrame wrapper.\n     */\n    scheduleNextUpdate() {\n        if (!this.updatePending) {\n            this.updatePending = true;\n            this.raqId = requestAnimationFrame(this.update.bind(this));\n        }\n    }\n    /**\n     * Whether the game is running.\n     * @return {boolean}\n     */\n    isRunning() {\n        return !!this.raqId;\n    }\n    /**\n     * Game over state.\n     */\n    gameOver() {\n        this.playSound(this.soundFx.HIT);\n        vibrate(200);\n        this.stop();\n        this.crashed = true;\n        this.distanceMeter.acheivement = false;\n        this.tRex.update(100, Trex.status.CRASHED);\n        // Game over panel.\n        if (!this.gameOverPanel) {\n            this.gameOverPanel = new GameOverPanel(this.canvas, this.spriteDef.TEXT_SPRITE, this.spriteDef.RESTART, this.dimensions);\n        }\n        else {\n            this.gameOverPanel.draw();\n        }\n        // Update the high score.\n        if (this.distanceRan > this.highestScore) {\n            this.highestScore = Math.ceil(this.distanceRan);\n            this.distanceMeter.setHighScore(this.highestScore);\n        }\n        // Reset the time clock.\n        this.time = getTimeStamp();\n    }\n    stop() {\n        this.playing = false;\n        this.paused = true;\n        cancelAnimationFrame(this.raqId);\n        this.raqId = 0;\n    }\n    play() {\n        if (!this.crashed) {\n            this.playing = true;\n            this.paused = false;\n            this.tRex.update(0, Trex.status.RUNNING);\n            this.time = getTimeStamp();\n            this.update();\n        }\n    }\n    restart() {\n        if (!this.raqId) {\n            this.playCount++;\n            this.runningTime = 0;\n            this.playing = true;\n            this.crashed = false;\n            this.distanceRan = 0;\n            this.setSpeed(this.config.SPEED);\n            this.time = getTimeStamp();\n            this.containerEl.classList.remove(Runner.classes.CRASHED);\n            this.clearCanvas();\n            this.distanceMeter.reset(this.highestScore);\n            this.horizon.reset();\n            this.tRex.reset();\n            this.playSound(this.soundFx.BUTTON_PRESS);\n            this.invert(true);\n            this.update();\n        }\n    }\n    /**\n     * Pause the game if the tab is not in focus.\n     */\n    onVisibilityChange(e) {\n        if (document.hidden || document.webkitHidden || e.type == 'blur' ||\n            document.visibilityState != 'visible') {\n            this.stop();\n        }\n        else if (!this.crashed) {\n            this.tRex.reset();\n            this.play();\n        }\n    }\n    /**\n     * Play a sound.\n     * @param {SoundBuffer} soundBuffer\n     */\n    playSound(soundBuffer) {\n        if (soundBuffer) {\n            var sourceNode = this.audioContext.createBufferSource();\n            sourceNode.buffer = soundBuffer;\n            sourceNode.connect(this.audioContext.destination);\n            sourceNode.start(0);\n        }\n    }\n    /**\n     * Inverts the current page / canvas colors.\n     * @param {boolean} Whether to reset colors.\n     */\n    invert(reset) {\n        if (reset) {\n            document.body.classList.toggle(Runner.classes.INVERTED, false);\n            this.invertTimer = 0;\n            this.inverted = false;\n        }\n        else {\n            this.inverted = document.body.classList.toggle(Runner.classes.INVERTED, this.invertTrigger);\n        }\n    }\n}\n/**\n * Default game configuration.\n * @enum {number}\n */\nRunner.config = {\n    ACCELERATION: 0.001,\n    BG_CLOUD_SPEED: 0.2,\n    BOTTOM_PAD: 10,\n    CLEAR_TIME: 3000,\n    CLOUD_FREQUENCY: 0.5,\n    GAMEOVER_CLEAR_TIME: 750,\n    GAP_COEFFICIENT: 0.6,\n    GRAVITY: 0.6,\n    INITIAL_JUMP_VELOCITY: 12,\n    INVERT_FADE_DURATION: 12000,\n    INVERT_DISTANCE: 700,\n    MAX_BLINK_COUNT: 3,\n    MAX_CLOUDS: 6,\n    MAX_OBSTACLE_LENGTH: 3,\n    MAX_OBSTACLE_DUPLICATION: 2,\n    MAX_SPEED: 13,\n    MIN_JUMP_HEIGHT: 35,\n    MOBILE_SPEED_COEFFICIENT: 1.2,\n    RESOURCE_TEMPLATE_ID: 'audio-resources',\n    SPEED: 6,\n    SPEED_DROP_COEFFICIENT: 3\n};\n/**\n * Default dimensions.\n * @enum {string}\n */\nRunner.defaultDimensions = {\n    WIDTH: DEFAULT_WIDTH,\n    HEIGHT: 150\n};\n/**\n * CSS class names.\n * @enum {string}\n */\nRunner.classes = {\n    CANVAS: 'runner-canvas',\n    CONTAINER: 'runner-container',\n    CRASHED: 'crashed',\n    ICON: 'icon-offline',\n    INVERTED: 'inverted',\n    SNACKBAR: 'snackbar',\n    SNACKBAR_SHOW: 'snackbar-show',\n    TOUCH_CONTROLLER: 'controller'\n};\n/**\n * Sprite definition layout of the spritesheet.\n * @enum {Object}\n */\nRunner.spriteDefinition = {\n    LDPI: {\n        CACTUS_LARGE: { x: 332, y: 2 },\n        CACTUS_SMALL: { x: 228, y: 2 },\n        CLOUD: { x: 86, y: 2 },\n        HORIZON: { x: 2, y: 54 },\n        MOON: { x: 484, y: 2 },\n        PTERODACTYL: { x: 134, y: 2 },\n        RESTART: { x: 2, y: 2 },\n        TEXT_SPRITE: { x: 655, y: 2 },\n        TREX: { x: 848, y: 2 },\n        STAR: { x: 645, y: 2 }\n    },\n    HDPI: {\n        CACTUS_LARGE: { x: 652, y: 2 },\n        CACTUS_SMALL: { x: 446, y: 2 },\n        CLOUD: { x: 166, y: 2 },\n        HORIZON: { x: 2, y: 104 },\n        MOON: { x: 954, y: 2 },\n        PTERODACTYL: { x: 260, y: 2 },\n        RESTART: { x: 2, y: 2 },\n        TEXT_SPRITE: { x: 1294, y: 2 },\n        TREX: { x: 1678, y: 2 },\n        STAR: { x: 1276, y: 2 }\n    }\n};\n/**\n * Sound FX. Reference to the ID of the audio tag on interstitial page.\n * @enum {string}\n */\nRunner.sounds = {\n    BUTTON_PRESS: 'offline-sound-press',\n    HIT: 'offline-sound-hit',\n    SCORE: 'offline-sound-reached'\n};\n/**\n * Key code mapping.\n * @enum {Object}\n */\nRunner.keycodes = {\n    JUMP: { '38': 1, '32': 1 },\n    DUCK: { '40': 1 },\n    RESTART: { '13': 1 } // Enter\n};\n/**\n * Runner event names.\n * @enum {string}\n */\nRunner.events = {\n    ANIM_END: 'webkitAnimationEnd',\n    CLICK: 'click',\n    KEYDOWN: 'keydown',\n    KEYUP: 'keyup',\n    MOUSEDOWN: 'mousedown',\n    MOUSEUP: 'mouseup',\n    RESIZE: 'resize',\n    TOUCHEND: 'touchend',\n    TOUCHSTART: 'touchstart',\n    VISIBILITY: 'visibilitychange',\n    BLUR: 'blur',\n    FOCUS: 'focus',\n    LOAD: 'load'\n};\n;\n/**\n* Updates the canvas size taking into\n* account the backing store pixel ratio and\n* the device pixel ratio.\n*\n* See article by Paul Lewis:\n* http://www.html5rocks.com/en/tutorials/canvas/hidpi/\n*\n* @param {HTMLCanvasElement} canvas\n* @param {number} opt_width\n* @param {number} opt_height\n* @return {boolean} Whether the canvas was scaled.\n*/\nRunner.updateCanvasScaling = function (canvas, opt_width, opt_height) {\n    var context = canvas.getContext('2d');\n    // Query the various pixel ratios\n    var devicePixelRatio = Math.floor(window.devicePixelRatio) || 1;\n    var backingStoreRatio = Math.floor(context.webkitBackingStorePixelRatio) || 1;\n    var ratio = devicePixelRatio / backingStoreRatio;\n    // Upscale the canvas if the two ratios don't match\n    if (devicePixelRatio !== backingStoreRatio) {\n        var oldWidth = opt_width || canvas.width;\n        var oldHeight = opt_height || canvas.height;\n        canvas.width = oldWidth * ratio;\n        canvas.height = oldHeight * ratio;\n        canvas.style.width = oldWidth + 'px';\n        canvas.style.height = oldHeight + 'px';\n        // Scale the context to counter the fact that we've manually scaled\n        // our canvas element.\n        context.scale(ratio, ratio);\n        return true;\n    }\n    else if (devicePixelRatio == 1) {\n        // Reset the canvas width / height. Fixes scaling bug when the page is\n        // zoomed and the devicePixelRatio changes accordingly.\n        canvas.style.width = canvas.width + 'px';\n        canvas.style.height = canvas.height + 'px';\n    }\n    return false;\n};\nwindow['Runner'] = Runner;\n//# sourceMappingURL=Runner.js.map","import React, { useState, useEffect } from \"react\";\nimport \"./CowGame.css\";\nimport useKeyPress from \"./hooks/useKeyPress\";\n// import sprites1x from \"./assets/default_100_percent/100-offline-sprite.png\";\nimport sprites2x from \"./assets/default_200_percent/200-offline-sprite.png\";\nimport { Runner } from \"./model/Runner\";\nimport { IS_MOBILE } from \"./model/const\";\nimport { devLog } from \"./utils\";\nconst STYLES = {\n    textAlign: \"center\",\n    fontFamily: \"Open Sans, sans-serif\",\n    margin: 0,\n    height: 0,\n};\nexport function CowGame() {\n    const [showMessageBox, setShowMessageBox] = useState(true);\n    // Hide box when pressing Space\n    const hideMessageBox = () => setShowMessageBox(false);\n    useEffect(() => {\n        devLog(\"🐮🐮 Loading Cow Runner 🐮🐮\");\n        // Boot runner\n        const runner = new Runner(\".interstitial-wrapper\", undefined);\n        devLog(\"Runner\", runner);\n        // Mobile/touch device: On touch start hide message box\n        // Element doesnt exist until game is initialized\n        const messageBox = document.getElementById(\"main-cowgame\");\n        if (IS_MOBILE && messageBox) {\n            messageBox.addEventListener(\"touchstart\", hideMessageBox, false);\n        }\n        return () => {\n            messageBox.removeEventListener(\"touchstart\", hideMessageBox);\n            runner.destroy();\n        };\n    }, []);\n    // Desktop/non-touch device: Key binding to hide message box\n    !IS_MOBILE && useKeyPress([\"Space\", \"ArrowUp\"], hideMessageBox);\n    const startTitle = IS_MOBILE ? \"Tap to start\" : \"Press Space to start\";\n    return (React.createElement(\"div\", { id: \"main-cowgame\" },\n        React.createElement(\"div\", { id: \"messageBox\", className: \"sendmessage\", style: { visibility: showMessageBox ? 'visible' : 'hidden' } },\n            React.createElement(\"h1\", { style: STYLES },\n                \"\\uD83D\\uDC2E \",\n                startTitle,\n                \" \\uD83D\\uDC2E\")),\n        React.createElement(\"div\", { id: \"main-frame-error\", className: \"interstitial-wrapper\" },\n            React.createElement(\"div\", { id: \"main-content\" },\n                React.createElement(\"div\", { className: \"icon icon-offline\" })),\n            React.createElement(\"div\", { id: \"offline-resources\" },\n                React.createElement(\"img\", { id: \"offline-resources-2x\", src: sprites2x }),\n                React.createElement(\"div\", { id: \"audio-resources\" },\n                    React.createElement(\"audio\", { id: \"offline-sound-press\", src: \"data:audio/mpeg;base64,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\" }),\n                    React.createElement(\"audio\", { id: \"offline-sound-hit\", src: \"data:audio/mpeg;base64,\" }),\n                    React.createElement(\"audio\", { id: \"offline-sound-reached\", src: \"data:audio/mpeg;base64,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\" }))))));\n}\n//# sourceMappingURL=CowGame.js.map","import { useEffect } from 'react';\n/**\n * useKeyPress\n * @param {[string]} keys - the name of the key to respond to, compared against event.key\n * @param {function} action - the action to perform on key press\n */\nexport default function useKeypress(keys, action) {\n    useEffect(() => {\n        function onKeyup(e) {\n            // console.log(`Key up: \"${e.key}\": `, e)\n            if (keys.includes(e.code)) {\n                action();\n            }\n        }\n        window.addEventListener('keyup', onKeyup);\n        return () => window.removeEventListener('keyup', onKeyup);\n    }, []);\n}\n//# sourceMappingURL=useKeyPress.js.map"],"sourceRoot":""}