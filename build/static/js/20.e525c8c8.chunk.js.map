{"version":3,"sources":["../node_modules/ipfs-only-hash/index.js","../node_modules/@babel/runtime/helpers/asyncIterator.js","../node_modules/@babel/runtime/helpers/awaitAsyncGenerator.js","../node_modules/@babel/runtime/helpers/wrapAsyncGenerator.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/bases/base.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/bytes.js","../node_modules/protobufjs/src/util/minimal.js","../node_modules/err-code/index.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/dag-link/dagLink.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/hashes/digest.js","../node_modules/ipfs-unixfs-importer/node_modules/ipfs-unixfs/src/index.js","../node_modules/ipfs-unixfs-importer/src/utils/persist.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/index.js","../node_modules/ipfs-unixfs-importer/node_modules/multihashing-async/src/index.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/varint.js","../node_modules/it-batch/index.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/hashes/hasher.js","../node_modules/protobufjs/minimal.js","../node_modules/ipfs-unixfs-importer/node_modules/uint8arrays/from-string.js","../node_modules/ipfs-unixfs-importer/src/dir.js","../node_modules/@babel/runtime/helpers/AwaitValue.js","../node_modules/it-parallel-batch/index.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/basics.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/bases/base32.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/bases/base58.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/cid.js","../node_modules/blakejs/util.js","../node_modules/@babel/runtime/helpers/asyncGeneratorDelegate.js","../node_modules/protobufjs/src/writer.js","../node_modules/protobufjs/src/reader.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/util.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/dag.js","../node_modules/ipfs-unixfs-importer/node_modules/uint8arrays/util/bases.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/dag-node/dagNode.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/dag-node/sortLinks.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/dag-link/util.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/serialize.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/genCid.js","../node_modules/ipfs-unixfs-importer/node_modules/bl/BufferList.js","../node_modules/ipfs-unixfs-importer/src/dir-flat.js","../node_modules/ipfs-unixfs-importer/src/index.js","../node_modules/@babel/runtime/helpers/AsyncGenerator.js","../node_modules/ipfs-unixfs-importer/src/options.js","../node_modules/ipfs-unixfs-importer/node_modules/merge-options/index.js","../node_modules/ipfs-unixfs-importer/node_modules/is-plain-obj/index.js","../node_modules/ipfs-unixfs-importer/node_modules/multihashing-async/src/crypto.js","../node_modules/murmurhash3js-revisited/index.js","../node_modules/murmurhash3js-revisited/lib/murmurHash3js.js","../node_modules/ipfs-unixfs-importer/node_modules/multihashing-async/src/sha.browser.js","../node_modules/ipfs-unixfs-importer/node_modules/multihashing-async/src/utils.js","../node_modules/ipfs-unixfs-importer/node_modules/multihashing-async/node_modules/uint8arrays/cjs/src/from-string.js","../node_modules/ipfs-unixfs-importer/node_modules/multihashing-async/node_modules/uint8arrays/cjs/src/util/bases.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/bases/identity.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/vendor/base-x.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/bases/base2.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/bases/base8.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/bases/base10.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/bases/base16.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/bases/base36.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/bases/base64.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/bases/base256emoji.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/hashes/sha2-browser.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/vendor/varint.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/hashes/identity.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/codecs/raw.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/codecs/json.js","../node_modules/ipfs-unixfs-importer/node_modules/multiformats/cjs/src/index.js","../node_modules/ipfs-unixfs-importer/node_modules/multihashing-async/src/blake.js","../node_modules/blakejs/index.js","../node_modules/blakejs/blake2b.js","../node_modules/blakejs/blake2s.js","../node_modules/ipfs-unixfs-importer/node_modules/multihashing-async/node_modules/uint8arrays/cjs/src/equals.js","../node_modules/ipfs-unixfs-importer/src/dag-builder/index.js","../node_modules/ipfs-unixfs-importer/src/dag-builder/dir.js","../node_modules/ipfs-unixfs-importer/node_modules/ipfs-unixfs/src/unixfs.js","../node_modules/protobufjs/src/index-minimal.js","../node_modules/@protobufjs/aspromise/index.js","../node_modules/@protobufjs/base64/index.js","../node_modules/@protobufjs/eventemitter/index.js","../node_modules/@protobufjs/float/index.js","../node_modules/@protobufjs/inquire/index.js","../node_modules/@protobufjs/utf8/index.js","../node_modules/@protobufjs/pool/index.js","../node_modules/protobufjs/src/util/longbits.js","../node_modules/protobufjs/src/writer_buffer.js","../node_modules/protobufjs/src/reader_buffer.js","../node_modules/protobufjs/src/rpc.js","../node_modules/protobufjs/src/rpc/service.js","../node_modules/protobufjs/src/roots.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/resolver.js","../node_modules/stable/stable.js","../node_modules/ipfs-unixfs-importer/node_modules/uint8arrays/compare.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/dag-node/toDagLink.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/dag-node/addLink.js","../node_modules/ipfs-unixfs-importer/node_modules/ipld-dag-pb/src/dag-node/rmLink.js","../node_modules/ipfs-unixfs-importer/node_modules/uint8arrays/equals.js","../node_modules/ipfs-unixfs-importer/node_modules/uint8arrays/to-string.js","../node_modules/ipfs-unixfs-importer/src/dag-builder/file/index.js","../node_modules/ipfs-unixfs-importer/src/dag-builder/file/flat.js","../node_modules/it-all/index.js","../node_modules/ipfs-unixfs-importer/src/dag-builder/file/balanced.js","../node_modules/ipfs-unixfs-importer/src/dag-builder/file/trickle.js","../node_modules/ipfs-unixfs-importer/src/dag-builder/file/buffer-importer.js","../node_modules/ipfs-unixfs-importer/src/chunker/rabin.js","../node_modules/rabin-wasm/src/index.js","../node_modules/rabin-wasm/src/rabin.js","../node_modules/rabin-wasm/dist/rabin-wasm.js","../node_modules/@assemblyscript/loader/index.js","../node_modules/ipfs-unixfs-importer/src/chunker/fixed-size.js","../node_modules/ipfs-unixfs-importer/src/dag-builder/validate-chunks.js","../node_modules/ipfs-unixfs-importer/src/tree-builder.js","../node_modules/ipfs-unixfs-importer/src/flat-to-shard.js","../node_modules/ipfs-unixfs-importer/src/dir-sharded.js","../node_modules/hamt-sharding/src/index.js","../node_modules/hamt-sharding/src/bucket.js","../node_modules/sparse-array/index.js","../node_modules/hamt-sharding/src/consumable-hash.js","../node_modules/hamt-sharding/src/consumable-buffer.js","../node_modules/ipfs-unixfs-importer/src/utils/to-path-components.js"],"names":["importer","require","block","get","cid","Error","put","exports","of","content","options","onlyHash","TextEncoder","encode","lastCid","AsyncFromSyncIterator","s","AsyncFromSyncIteratorContinuation","r","Object","Promise","reject","TypeError","done","resolve","value","then","this","n","next","prototype","apply","arguments","ret","thr","module","iterable","method","async","sync","retry","Symbol","asyncIterator","iterator","call","__esModule","AwaitValue","AsyncGenerator","fn","defineProperty","baseX$1","bytes","Encoder","name","prefix","baseEncode","Uint8Array","Decoder","baseDecode","undefined","codePointAt","prefixCodePoint","text","JSON","stringify","slice","length","decoder","or","ComposedDecoder","decoders","input","decode","RangeError","keys","left","right","Codec","encoder","from","baseX","alphabet","coerce","rfc4648","bitsPerChar","data","pad","mask","out","bits","buffer","i","string","codes","end","written","SyntaxError","empty","o","constructor","ArrayBuffer","isView","byteOffset","byteLength","equals","aa","bb","ii","fromHex","hex","hexes","match","map","b","parseInt","fromString","str","isBinary","toHex","d","reduce","byte","toString","padStart","TextDecoder","util","merge","dst","src","ifNotSet","newError","CustomError","message","properties","captureStackTrace","stack","create","asPromise","base64","EventEmitter","float","inquire","utf8","pool","LongBits","isNode","Boolean","global","process","versions","node","window","self","emptyArray","freeze","emptyObject","isInteger","Number","isFinite","Math","floor","isString","String","isObject","isset","isSet","obj","prop","hasOwnProperty","Array","isArray","Buffer","utf8Write","e","_Buffer_from","_Buffer_allocUnsafe","newBuffer","sizeOrArray","Long","dcodeIO","key2Re","key32Re","key64Re","longToHash","toHash","zeroHash","longFromHash","hash","unsigned","fromHash","fromBits","lo","hi","toNumber","lcFirst","charAt","toLowerCase","substring","ProtocolError","oneOfGetter","fieldNames","fieldMap","oneOfSetter","toJSONOptions","longs","enums","json","_configure","encoding","allocUnsafe","size","assign","props","key","enumerable","configurable","err","code","_","ErrClass","getPrototypeOf","CID","uint8ArrayFromString","DAGLink","Name","Tsize","Hash","defineProperties","_nameBuf","writable","toBaseEncodedString","_json","varint","Digest","digest","sizeOffset","encodingLength","digestOffset","encodeTo","set","multihash","bytes$1","subarray","a","PBData","Data","errcode","types","dirTypes","DEFAULT_FILE_MODE","DEFAULT_DIRECTORY_MODE","parseMode","mode","parseMtime","mtime","secs","nsecs","Seconds","FractionalNanoseconds","Date","ms","getTime","type","blockSizes","hashType","fanout","includes","_originalMode","_mode","isDirectory","parsedMode","push","index","splice","sum","forEach","DataType","Raw","Directory","File","Metadata","Symlink","HAMTShard","parsed","pbData","Type","filesize","fileSize","blocksizes","finish","marshaled","decoded","toObject","defaults","arrays","objects","UnixFS","mh","persist","codec","cidVersion","hashAlg","pin","preload","timeout","resolver","format","DAGNode","defaultHashAlg","crypto","Multihashing","alg","createHash","coerceCode","functions","identity","sha1","sha2256","sha2512","sha3512","sha3384","sha3256","sha3224","shake128","shake256","keccak224","keccak256","keccak384","keccak512","murmur3128","murmur332","dblSha2256","addBlake","validate","newHash","varint$1","int","target","offset","source","things","thing","Hasher","result","digest$1","bases","base","Dir","root","dir","path","dirty","flat","parent","parentKey","unixfs","wrapped","batch","tasks","p","ok","base2","base8","base10","base16","base32","base36","base58","base256emoji","sha2","identity$1","raw","hasher","hashes","codecs","base32upper","base32pad","base32padupper","base32hex","base32hexupper","base32hexpad","base32hexpadupper","base32z","base58btc","base58flickr","version","asCID","_baseCache","Map","hidden","readonly","DAG_PB_CODE","SHA_256_CODE","createV0","createV1","other","toStringV0","toStringV1","deprecate","IS_CID_DEPRECATION","cidSymbol","encodeCID","decodeFirst","specs","inspectBytes","prefixSize","multihashSize","multihashBytes","digestBytes","digestSize","multihashCode","initialBytes","parseCIDtoBytes","toStringTag","for","cache","codeOffset","hashOffset","range","test","console","warn","uint32ToHex","val","normalizeInput","join","debugPrint","label","arr","msg","toUpperCase","log","testSpeed","hashFn","N","M","startMs","genMs","hashHex","hashMs","round","inner","awaitWrap","iter","waiting","pump","Writer","BufferWriter","Op","len","noop","State","writer","head","tail","states","writeByte","buf","pos","VarintOp","writeVarint64","writeFixed32","alloc","_push","uint32","int32","fromNumber","sint32","uint64","int64","sint64","zzEncode","bool","fixed32","sfixed32","fixed64","sfixed64","writeFloatLE","double","writeDoubleLE","writeBytes","write","fork","reset","ldelim","BufferWriter_","Reader","BufferReader","indexOutOfRange","reader","writeLength","create_array","isBuffer","readLongVarint","readFixed32_end","readFixed64","_slice","readFloatLE","readDoubleLE","start","read","skip","skipType","wireType","BufferReader_","zzDecode","PBNode","serializeDAGNode","serializeDAGNodeLike","genCid","serialize","Links","deserialize","pbn","links","link","binaryBlob","userOptions","$protobuf","$Reader","$Writer","$util","$root","roots","PBLink","ks","m","w","l","c","t","fromObject","fromValue","low","high","toJSON","j","createCodec","ascii","fromCharCode","charCodeAt","BASES","sortLinks","createDagLinkFromB58EncodedHash","toDAGLink","addLink","rmLink","uint8ArrayToString","serializedSize","sortedLinks","_serializedSize","_size","_invalidateCached","sort","uint8ArrayCompare","linkSort","buf1","nameAsBuffer","buf2","inplace","Size","protobuf","toProtoBuf","pbf","multicodec","multihashing","DAG_PB","names","hashName","codecName","getNameFromCode","symbol","BufferList","_init","_bufs","append","_new","_offset","tot","_t","_reverseOffset","blOffset","bufferId","copy","dstStart","srcStart","srcEnd","off","bufoff","concat","shallowSlice","startOffset","endOffset","buffers","pop","consume","trunc","isNaN","shift","duplicate","_appendBuffer","_isBufferList","indexOf","search","blIndex","buffOffset","buff","nativeSearchResult","revOffset","_match","searchOffset","methods","readDoubleBE","readFloatBE","readInt32BE","readInt32LE","readUInt32BE","readUInt32LE","readInt16BE","readInt16LE","readUInt16BE","readUInt16LE","readInt8","readUInt8","readIntBE","readIntLE","readUIntBE","readUIntLE","isBufferList","DirFlat","_children","childCount","child","children","flush","entry","marshal","acc","curr","parallelBatch","defaultOptions","opts","dagBuilder","treeBuilder","candidates","fileImportConcurrency","gen","front","back","resume","arg","wrappedAwait","settle","_invoke","request","mergeOptions","bind","ignoreUndefined","justHash","chunker","strategy","rawLeaves","reduceSingleLeafToSelf","leafType","progress","shardSplitThreshold","blockWriteConcurrency","minChunkSize","maxChunkSize","avgChunkSize","polynomial","maxChildrenPerNode","layerRepeat","wrapWithDirectory","recursive","hamtHashFn","hamtHashCode","hamtBucketBits","isOptionObject","propertyIsEnumerable","object","globalThis","defaultMergeOptions","concatArrays","getEnumerableOwnPropertyKeys","getOwnPropertySymbols","symbols","clone","array","cloneArray","cloneOptionObject","mergeKeys","merged","config","resultIndex","indices","k","filter","option","sha3","mur","sha","factory","fromNumberTo32BitBuf","algorithm","sha3_224","arrayBuffer","sha3_256","sha3_384","sha3_512","update","x64","hash128","x86","hash32","library","_validBytes","_x86Multiply","_x86Rotl","_x86Fmix","h","_x64Add","_x64Multiply","_x64Rotl","_x64LeftShift","_x64Xor","_x64Fmix","seed","inputValidation","remainder","blocks","h1","k1","c1","c2","h2","h3","h4","k2","k3","k4","c3","c4","murmurHash3","msCrypto","subtle","number","basics","latin1","binary","_brrp__multiformats_scope_baseX","ALPHABET","BASE_MAP","x","xc","BASE","LEADER","FACTOR","iFACTOR","decodeUnsafe","psz","zeroes","b256","carry","it3","it4","vch","pbegin","pend","b58","it1","it2","repeat","base16upper","base36upper","base64pad","base64url","base64urlpad","alphabetBytesToChars","alphabetCharsToBytes","byts","char","byt","sha256","sha512","encode_1","num","oldOffset","INT","pow","res","counter","N1","N2","N3","N4","N5","N6","N7","N8","N9","textEncoder","textDecoder","parse","blake","blake2b","init","blake2bInit","blake2bUpdate","blake2bFinal","blake2s","blake2sInit","blake2sUpdate","blake2sFinal","makeB2Hash","hf","ctx","table","b2b","b2s","blake2bHex","blake2sHex","ADD64AA","v","o0","o1","ADD64AC","b0","b1","B2B_GET32","B2B_G","ix","iy","x0","x1","y0","y1","xor0","xor1","BLAKE2B_IV32","Uint32Array","SIGMA82","blake2bCompress","last","parameterBlock","outlen","salt","personal","fill","output","B2S_GET32","B2S_G","y","ROTR32","BLAKE2S_IV","SIGMA","blake2sCompress","keylen","dirBuilder","fileBuilder","errCode","contentAsAsyncIterable","isAsyncIterable","split","chunkValidator","file","item","UnixTime","instance","valuesById","values","MimeType","configure","build","rpc","params","pending","ceil","b64","s64","parts","chunk","invalidEncoding","_listeners","on","evt","listeners","emit","args","Float32Array","f32","f8b","le","writeFloat_f32_cpy","writeFloat_f32_rev","readFloat_f32_cpy","readFloat_f32_rev","writeFloatBE","writeFloat_ieee754","writeUint","sign","exponent","LN2","readFloat_ieee754","readUint","uint","mantissa","NaN","Infinity","writeUintLE","writeUintBE","readUintLE","readUintBE","Float64Array","f64","writeDouble_f64_cpy","writeDouble_f64_rev","readDouble_f64_cpy","readDouble_f64_rev","writeDoubleBE","writeDouble_ieee754","off0","off1","readDouble_ieee754","moduleName","mod","eval","replace","SIZE","MAX","slab","zero","toLong","part0","part1","part2","writeStringBuffer","writeBytesBuffer","utf8Slice","min","Service","rpcImpl","requestDelimited","responseDelimited","rpcCall","requestCtor","responseCtor","callback","response","setTimeout","endedByRPC","remainderPath","isCID","tree","stable","comp","exec","localeCompare","chk","pass","tmp","li","ri","dbl","nodeCid","dagLink","asDAGLink","uint8ArrayEquals","dagNode","nameOrCid","predicate","dagBuilders","balanced","trickle","count","bufferImporter","previous","single","buildFileBatch","leaves","leaf","f","addBlockSize","all","reduceToParents","chunked","Root","iteration","maxDepth","subTree","layer","isFull","addChild","SubTree","currentDepth","depth","maxChildren","_addNextNodeToParent","distantRelative","_findParent","nextNode","_reduce","rabin","max","sizes","fingerprint","avg","sizepow","log2","Rabin","getRabin","windowSize","compiled","asModule","__retain","__release","__allocArray","__getInt32Array","Int32Array_ID","Uint8Array_ID","lengthsPtr","Int32Array","pointer","processed","instantiate","loadWebAssembly","imp","supported","wasm","Response","Blob","WebAssembly","BIGINT","BigUint64Array","THIS","CHUNKSIZE","getStringImpl","ptr","U32","U16","Uint16Array","preInstantiate","imports","baseModule","getString","memory","env","abort","mesg","line","colm","trace","postInstantiate","rawExports","retain","rttiBase","getInfo","id","getBase","getValueAlign","info","clz32","getView","alignLog2","signed","Int8Array","Int16Array","BigInt64Array","__getArrayView","align","getTypedArray","getTypedArrayView","bufPtr","__allocString","__getString","view","__getArray","__getArrayBuffer","__getInt8Array","__getInt8ArrayView","__getUint8Array","__getUint8ArrayView","__getUint8ClampedArray","Uint8ClampedArray","__getUint8ClampedArrayView","__getInt16Array","__getInt16ArrayView","__getUint16Array","__getUint16ArrayView","__getInt32ArrayView","__getUint32Array","__getUint32ArrayView","__getInt64Array","__getInt64ArrayView","__getUint64Array","__getUint64ArrayView","__getFloat32Array","__getFloat32ArrayView","__getFloat64Array","__getFloat64ArrayView","__instanceof","baseId","demangle","isResponse","instantiateStreaming","Module","compile","setArgumentsLength","internalName","elem","part","className","classElem","ctor","wrap","valueOf","thisValue","getOwnPropertyNames","getOwnPropertyDescriptor","getter","setter","original","instantiateSync","Instance","bl","currentLength","emitted","newBl","flatToShard","toPathComponents","addToTree","pathElems","lastIndex","currentPath","pathElem","flushAndYield","eachChildSeries","unwrapped","DirSharded","convertToShard","oldDir","newDir","threshold","directChildrenCount","createHAMT","Bucket","_bucket","leafCount","childrenCount","onlyChild","eachLeafSeries","bucket","shardRoot","childrenSize","labelPrefix","shard","subShard","flushedDir","bitField","reverse","tableSize","wrapHash","bucketOptions","SparseArray","posAtParent","_options","_popCount","_parent","_posAtParent","_findNewBucketAndPos","place","_putAt","_findChild","_findPlace","_at","_delAt","compactArray","asyncMap","asyncReduce","asyncTransformBucket","mapNode","reduceNodes","hashValue","take","existingChild","_putObjectAt","newPlace","unset","_level","find","exists","untake","nodes","mappedChildren","popCountReduce","popCount","_v","sortInternal","valueOnly","_bitArrays","_data","_length","_changedLength","_changedData","_internalPositionFor","_unsetInternalPos","_unsetBit","needsSort","_setBit","_setInternalPos","_sortData","mapped","reducer","initialValue","finder","found","noCreate","bytePos","_bytePosFor","bitPos","targetLength","unshift","randomIndex","newByte","pendingBitsForResultingByte","pendingBitsForNewByte","resultingByte","usingBits","ConsumableBuffer","uint8ArrayConcat","InfiniteHash","_value","_hashFn","_depth","_availableBits","_currentBufferIndex","_buffers","pendingBits","_produceMoreBits","available","availableBits","took","availableForUntake","totalBits","START_MASKS","STOP_MASKS","byteBitsToInt","maskFor","_currentBytePos","_currentBitPos","_haveBits","taking","trim"],"mappings":"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","file":"static/js/20.e525c8c8.chunk.js","sourcesContent":["const { importer } = require('ipfs-unixfs-importer')\n\nconst block = {\n  get: async cid => { throw new Error(`unexpected block API get for ${cid}`) },\n  put: async () => { throw new Error('unexpected block API put') }\n}\n\nexports.of = async (content, options) => {\n  options = options || {}\n  options.onlyHash = true\n\n  if (typeof content === 'string') {\n    content = new TextEncoder().encode(content)\n  }\n\n  let lastCid\n  for await (const { cid } of importer([{ content }], block, options)) {\n    lastCid = cid\n  }\n\n  return `${lastCid}`\n}\n","function _asyncIterator(iterable) {\n  var method,\n      async,\n      sync,\n      retry = 2;\n\n  for (\"undefined\" != typeof Symbol && (async = Symbol.asyncIterator, sync = Symbol.iterator); retry--;) {\n    if (async && null != (method = iterable[async])) return method.call(iterable);\n    if (sync && null != (method = iterable[sync])) return new AsyncFromSyncIterator(method.call(iterable));\n    async = \"@@asyncIterator\", sync = \"@@iterator\";\n  }\n\n  throw new TypeError(\"Object is not async iterable\");\n}\n\nfunction AsyncFromSyncIterator(s) {\n  function AsyncFromSyncIteratorContinuation(r) {\n    if (Object(r) !== r) return Promise.reject(new TypeError(r + \" is not an object.\"));\n    var done = r.done;\n    return Promise.resolve(r.value).then(function (value) {\n      return {\n        value: value,\n        done: done\n      };\n    });\n  }\n\n  return AsyncFromSyncIterator = function AsyncFromSyncIterator(s) {\n    this.s = s, this.n = s.next;\n  }, AsyncFromSyncIterator.prototype = {\n    s: null,\n    n: null,\n    next: function next() {\n      return AsyncFromSyncIteratorContinuation(this.n.apply(this.s, arguments));\n    },\n    \"return\": function _return(value) {\n      var ret = this.s[\"return\"];\n      return void 0 === ret ? Promise.resolve({\n        value: value,\n        done: !0\n      }) : AsyncFromSyncIteratorContinuation(ret.apply(this.s, arguments));\n    },\n    \"throw\": function _throw(value) {\n      var thr = this.s[\"return\"];\n      return void 0 === thr ? Promise.reject(value) : AsyncFromSyncIteratorContinuation(thr.apply(this.s, arguments));\n    }\n  }, new AsyncFromSyncIterator(s);\n}\n\nmodule.exports = _asyncIterator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var AwaitValue = require(\"./AwaitValue.js\");\n\nfunction _awaitAsyncGenerator(value) {\n  return new AwaitValue(value);\n}\n\nmodule.exports = _awaitAsyncGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","var AsyncGenerator = require(\"./AsyncGenerator.js\");\n\nfunction _wrapAsyncGenerator(fn) {\n  return function () {\n    return new AsyncGenerator(fn.apply(this, arguments));\n  };\n}\n\nmodule.exports = _wrapAsyncGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar baseX$1 = require('../../vendor/base-x.js');\nvar bytes = require('../bytes.js');\n\nclass Encoder {\n  constructor(name, prefix, baseEncode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n  }\n  encode(bytes) {\n    if (bytes instanceof Uint8Array) {\n      return `${ this.prefix }${ this.baseEncode(bytes) }`;\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\nclass Decoder {\n  constructor(name, prefix, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    if (prefix.codePointAt(0) === undefined) {\n      throw new Error('Invalid prefix character');\n    }\n    this.prefixCodePoint = prefix.codePointAt(0);\n    this.baseDecode = baseDecode;\n  }\n  decode(text) {\n    if (typeof text === 'string') {\n      if (text.codePointAt(0) !== this.prefixCodePoint) {\n        throw Error(`Unable to decode multibase string ${ JSON.stringify(text) }, ${ this.name } decoder only supports inputs prefixed with ${ this.prefix }`);\n      }\n      return this.baseDecode(text.slice(this.prefix.length));\n    } else {\n      throw Error('Can only multibase decode strings');\n    }\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n}\nclass ComposedDecoder {\n  constructor(decoders) {\n    this.decoders = decoders;\n  }\n  or(decoder) {\n    return or(this, decoder);\n  }\n  decode(input) {\n    const prefix = input[0];\n    const decoder = this.decoders[prefix];\n    if (decoder) {\n      return decoder.decode(input);\n    } else {\n      throw RangeError(`Unable to decode multibase string ${ JSON.stringify(input) }, only inputs prefixed with ${ Object.keys(this.decoders) } are supported`);\n    }\n  }\n}\nconst or = (left, right) => new ComposedDecoder({\n  ...left.decoders || { [left.prefix]: left },\n  ...right.decoders || { [right.prefix]: right }\n});\nclass Codec {\n  constructor(name, prefix, baseEncode, baseDecode) {\n    this.name = name;\n    this.prefix = prefix;\n    this.baseEncode = baseEncode;\n    this.baseDecode = baseDecode;\n    this.encoder = new Encoder(name, prefix, baseEncode);\n    this.decoder = new Decoder(name, prefix, baseDecode);\n  }\n  encode(input) {\n    return this.encoder.encode(input);\n  }\n  decode(input) {\n    return this.decoder.decode(input);\n  }\n}\nconst from = ({name, prefix, encode, decode}) => new Codec(name, prefix, encode, decode);\nconst baseX = ({prefix, name, alphabet}) => {\n  const {encode, decode} = baseX$1(alphabet, name);\n  return from({\n    prefix,\n    name,\n    encode,\n    decode: text => bytes.coerce(decode(text))\n  });\n};\nconst decode = (string, alphabet, bitsPerChar, name) => {\n  const codes = {};\n  for (let i = 0; i < alphabet.length; ++i) {\n    codes[alphabet[i]] = i;\n  }\n  let end = string.length;\n  while (string[end - 1] === '=') {\n    --end;\n  }\n  const out = new Uint8Array(end * bitsPerChar / 8 | 0);\n  let bits = 0;\n  let buffer = 0;\n  let written = 0;\n  for (let i = 0; i < end; ++i) {\n    const value = codes[string[i]];\n    if (value === undefined) {\n      throw new SyntaxError(`Non-${ name } character`);\n    }\n    buffer = buffer << bitsPerChar | value;\n    bits += bitsPerChar;\n    if (bits >= 8) {\n      bits -= 8;\n      out[written++] = 255 & buffer >> bits;\n    }\n  }\n  if (bits >= bitsPerChar || 255 & buffer << 8 - bits) {\n    throw new SyntaxError('Unexpected end of data');\n  }\n  return out;\n};\nconst encode = (data, alphabet, bitsPerChar) => {\n  const pad = alphabet[alphabet.length - 1] === '=';\n  const mask = (1 << bitsPerChar) - 1;\n  let out = '';\n  let bits = 0;\n  let buffer = 0;\n  for (let i = 0; i < data.length; ++i) {\n    buffer = buffer << 8 | data[i];\n    bits += 8;\n    while (bits > bitsPerChar) {\n      bits -= bitsPerChar;\n      out += alphabet[mask & buffer >> bits];\n    }\n  }\n  if (bits) {\n    out += alphabet[mask & buffer << bitsPerChar - bits];\n  }\n  if (pad) {\n    while (out.length * bitsPerChar & 7) {\n      out += '=';\n    }\n  }\n  return out;\n};\nconst rfc4648 = ({name, prefix, bitsPerChar, alphabet}) => {\n  return from({\n    prefix,\n    name,\n    encode(input) {\n      return encode(input, alphabet, bitsPerChar);\n    },\n    decode(input) {\n      return decode(input, alphabet, bitsPerChar, name);\n    }\n  });\n};\n\nexports.Codec = Codec;\nexports.baseX = baseX;\nexports.from = from;\nexports.or = or;\nexports.rfc4648 = rfc4648;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst empty = new Uint8Array(0);\nconst toHex = d => d.reduce((hex, byte) => hex + byte.toString(16).padStart(2, '0'), '');\nconst fromHex = hex => {\n  const hexes = hex.match(/../g);\n  return hexes ? new Uint8Array(hexes.map(b => parseInt(b, 16))) : empty;\n};\nconst equals = (aa, bb) => {\n  if (aa === bb)\n    return true;\n  if (aa.byteLength !== bb.byteLength) {\n    return false;\n  }\n  for (let ii = 0; ii < aa.byteLength; ii++) {\n    if (aa[ii] !== bb[ii]) {\n      return false;\n    }\n  }\n  return true;\n};\nconst coerce = o => {\n  if (o instanceof Uint8Array && o.constructor.name === 'Uint8Array')\n    return o;\n  if (o instanceof ArrayBuffer)\n    return new Uint8Array(o);\n  if (ArrayBuffer.isView(o)) {\n    return new Uint8Array(o.buffer, o.byteOffset, o.byteLength);\n  }\n  throw new Error('Unknown type, must be binary type');\n};\nconst isBinary = o => o instanceof ArrayBuffer || ArrayBuffer.isView(o);\nconst fromString = str => new TextEncoder().encode(str);\nconst toString = b => new TextDecoder().decode(b);\n\nexports.coerce = coerce;\nexports.empty = empty;\nexports.equals = equals;\nexports.fromHex = fromHex;\nexports.fromString = fromString;\nexports.isBinary = isBinary;\nexports.toHex = toHex;\nexports.toString = toString;\n","\"use strict\";\nvar util = exports;\n\n// used to return a Promise where callback is omitted\nutil.asPromise = require(\"@protobufjs/aspromise\");\n\n// converts to / from base64 encoded strings\nutil.base64 = require(\"@protobufjs/base64\");\n\n// base class of rpc.Service\nutil.EventEmitter = require(\"@protobufjs/eventemitter\");\n\n// float handling accross browsers\nutil.float = require(\"@protobufjs/float\");\n\n// requires modules optionally and hides the call from bundlers\nutil.inquire = require(\"@protobufjs/inquire\");\n\n// converts to / from utf8 encoded strings\nutil.utf8 = require(\"@protobufjs/utf8\");\n\n// provides a node-like buffer pool in the browser\nutil.pool = require(\"@protobufjs/pool\");\n\n// utility to work with the low and high bits of a 64 bit value\nutil.LongBits = require(\"./longbits\");\n\n/**\n * Whether running within node or not.\n * @memberof util\n * @type {boolean}\n */\nutil.isNode = Boolean(typeof global !== \"undefined\"\n                   && global\n                   && global.process\n                   && global.process.versions\n                   && global.process.versions.node);\n\n/**\n * Global object reference.\n * @memberof util\n * @type {Object}\n */\nutil.global = util.isNode && global\n           || typeof window !== \"undefined\" && window\n           || typeof self   !== \"undefined\" && self\n           || this; // eslint-disable-line no-invalid-this\n\n/**\n * An immuable empty array.\n * @memberof util\n * @type {Array.<*>}\n * @const\n */\nutil.emptyArray = Object.freeze ? Object.freeze([]) : /* istanbul ignore next */ []; // used on prototypes\n\n/**\n * An immutable empty object.\n * @type {Object}\n * @const\n */\nutil.emptyObject = Object.freeze ? Object.freeze({}) : /* istanbul ignore next */ {}; // used on prototypes\n\n/**\n * Tests if the specified value is an integer.\n * @function\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is an integer\n */\nutil.isInteger = Number.isInteger || /* istanbul ignore next */ function isInteger(value) {\n    return typeof value === \"number\" && isFinite(value) && Math.floor(value) === value;\n};\n\n/**\n * Tests if the specified value is a string.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a string\n */\nutil.isString = function isString(value) {\n    return typeof value === \"string\" || value instanceof String;\n};\n\n/**\n * Tests if the specified value is a non-null object.\n * @param {*} value Value to test\n * @returns {boolean} `true` if the value is a non-null object\n */\nutil.isObject = function isObject(value) {\n    return value && typeof value === \"object\";\n};\n\n/**\n * Checks if a property on a message is considered to be present.\n * This is an alias of {@link util.isSet}.\n * @function\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isset =\n\n/**\n * Checks if a property on a message is considered to be present.\n * @param {Object} obj Plain object or message instance\n * @param {string} prop Property name\n * @returns {boolean} `true` if considered to be present, otherwise `false`\n */\nutil.isSet = function isSet(obj, prop) {\n    var value = obj[prop];\n    if (value != null && obj.hasOwnProperty(prop)) // eslint-disable-line eqeqeq, no-prototype-builtins\n        return typeof value !== \"object\" || (Array.isArray(value) ? value.length : Object.keys(value).length) > 0;\n    return false;\n};\n\n/**\n * Any compatible Buffer instance.\n * This is a minimal stand-alone definition of a Buffer instance. The actual type is that exported by node's typings.\n * @interface Buffer\n * @extends Uint8Array\n */\n\n/**\n * Node's Buffer class if available.\n * @type {Constructor<Buffer>}\n */\nutil.Buffer = (function() {\n    try {\n        var Buffer = util.inquire(\"buffer\").Buffer;\n        // refuse to use non-node buffers if not explicitly assigned (perf reasons):\n        return Buffer.prototype.utf8Write ? Buffer : /* istanbul ignore next */ null;\n    } catch (e) {\n        /* istanbul ignore next */\n        return null;\n    }\n})();\n\n// Internal alias of or polyfull for Buffer.from.\nutil._Buffer_from = null;\n\n// Internal alias of or polyfill for Buffer.allocUnsafe.\nutil._Buffer_allocUnsafe = null;\n\n/**\n * Creates a new buffer of whatever type supported by the environment.\n * @param {number|number[]} [sizeOrArray=0] Buffer size or number array\n * @returns {Uint8Array|Buffer} Buffer\n */\nutil.newBuffer = function newBuffer(sizeOrArray) {\n    /* istanbul ignore next */\n    return typeof sizeOrArray === \"number\"\n        ? util.Buffer\n            ? util._Buffer_allocUnsafe(sizeOrArray)\n            : new util.Array(sizeOrArray)\n        : util.Buffer\n            ? util._Buffer_from(sizeOrArray)\n            : typeof Uint8Array === \"undefined\"\n                ? sizeOrArray\n                : new Uint8Array(sizeOrArray);\n};\n\n/**\n * Array implementation used in the browser. `Uint8Array` if supported, otherwise `Array`.\n * @type {Constructor<Uint8Array>}\n */\nutil.Array = typeof Uint8Array !== \"undefined\" ? Uint8Array /* istanbul ignore next */ : Array;\n\n/**\n * Any compatible Long instance.\n * This is a minimal stand-alone definition of a Long instance. The actual type is that exported by long.js.\n * @interface Long\n * @property {number} low Low bits\n * @property {number} high High bits\n * @property {boolean} unsigned Whether unsigned or not\n */\n\n/**\n * Long.js's Long class if available.\n * @type {Constructor<Long>}\n */\nutil.Long = /* istanbul ignore next */ util.global.dcodeIO && /* istanbul ignore next */ util.global.dcodeIO.Long\n         || /* istanbul ignore next */ util.global.Long\n         || util.inquire(\"long\");\n\n/**\n * Regular expression used to verify 2 bit (`bool`) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key2Re = /^true|false|0|1$/;\n\n/**\n * Regular expression used to verify 32 bit (`int32` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key32Re = /^-?(?:0|[1-9][0-9]*)$/;\n\n/**\n * Regular expression used to verify 64 bit (`int64` etc.) map keys.\n * @type {RegExp}\n * @const\n */\nutil.key64Re = /^(?:[\\\\x00-\\\\xff]{8}|-?(?:0|[1-9][0-9]*))$/;\n\n/**\n * Converts a number or long to an 8 characters long hash string.\n * @param {Long|number} value Value to convert\n * @returns {string} Hash\n */\nutil.longToHash = function longToHash(value) {\n    return value\n        ? util.LongBits.from(value).toHash()\n        : util.LongBits.zeroHash;\n};\n\n/**\n * Converts an 8 characters long hash string to a long or number.\n * @param {string} hash Hash\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long|number} Original value\n */\nutil.longFromHash = function longFromHash(hash, unsigned) {\n    var bits = util.LongBits.fromHash(hash);\n    if (util.Long)\n        return util.Long.fromBits(bits.lo, bits.hi, unsigned);\n    return bits.toNumber(Boolean(unsigned));\n};\n\n/**\n * Merges the properties of the source object into the destination object.\n * @memberof util\n * @param {Object.<string,*>} dst Destination object\n * @param {Object.<string,*>} src Source object\n * @param {boolean} [ifNotSet=false] Merges only if the key is not already set\n * @returns {Object.<string,*>} Destination object\n */\nfunction merge(dst, src, ifNotSet) { // used by converters\n    for (var keys = Object.keys(src), i = 0; i < keys.length; ++i)\n        if (dst[keys[i]] === undefined || !ifNotSet)\n            dst[keys[i]] = src[keys[i]];\n    return dst;\n}\n\nutil.merge = merge;\n\n/**\n * Converts the first character of a string to lower case.\n * @param {string} str String to convert\n * @returns {string} Converted string\n */\nutil.lcFirst = function lcFirst(str) {\n    return str.charAt(0).toLowerCase() + str.substring(1);\n};\n\n/**\n * Creates a custom error constructor.\n * @memberof util\n * @param {string} name Error name\n * @returns {Constructor<Error>} Custom error constructor\n */\nfunction newError(name) {\n\n    function CustomError(message, properties) {\n\n        if (!(this instanceof CustomError))\n            return new CustomError(message, properties);\n\n        // Error.call(this, message);\n        // ^ just returns a new error instance because the ctor can be called as a function\n\n        Object.defineProperty(this, \"message\", { get: function() { return message; } });\n\n        /* istanbul ignore next */\n        if (Error.captureStackTrace) // node\n            Error.captureStackTrace(this, CustomError);\n        else\n            Object.defineProperty(this, \"stack\", { value: new Error().stack || \"\" });\n\n        if (properties)\n            merge(this, properties);\n    }\n\n    (CustomError.prototype = Object.create(Error.prototype)).constructor = CustomError;\n\n    Object.defineProperty(CustomError.prototype, \"name\", { get: function() { return name; } });\n\n    CustomError.prototype.toString = function toString() {\n        return this.name + \": \" + this.message;\n    };\n\n    return CustomError;\n}\n\nutil.newError = newError;\n\n/**\n * Constructs a new protocol error.\n * @classdesc Error subclass indicating a protocol specifc error.\n * @memberof util\n * @extends Error\n * @template T extends Message<T>\n * @constructor\n * @param {string} message Error message\n * @param {Object.<string,*>} [properties] Additional properties\n * @example\n * try {\n *     MyMessage.decode(someBuffer); // throws if required fields are missing\n * } catch (e) {\n *     if (e instanceof ProtocolError && e.instance)\n *         console.log(\"decoded so far: \" + JSON.stringify(e.instance));\n * }\n */\nutil.ProtocolError = newError(\"ProtocolError\");\n\n/**\n * So far decoded message instance.\n * @name util.ProtocolError#instance\n * @type {Message<T>}\n */\n\n/**\n * A OneOf getter as returned by {@link util.oneOfGetter}.\n * @typedef OneOfGetter\n * @type {function}\n * @returns {string|undefined} Set field name, if any\n */\n\n/**\n * Builds a getter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfGetter} Unbound getter\n */\nutil.oneOfGetter = function getOneOf(fieldNames) {\n    var fieldMap = {};\n    for (var i = 0; i < fieldNames.length; ++i)\n        fieldMap[fieldNames[i]] = 1;\n\n    /**\n     * @returns {string|undefined} Set field name, if any\n     * @this Object\n     * @ignore\n     */\n    return function() { // eslint-disable-line consistent-return\n        for (var keys = Object.keys(this), i = keys.length - 1; i > -1; --i)\n            if (fieldMap[keys[i]] === 1 && this[keys[i]] !== undefined && this[keys[i]] !== null)\n                return keys[i];\n    };\n};\n\n/**\n * A OneOf setter as returned by {@link util.oneOfSetter}.\n * @typedef OneOfSetter\n * @type {function}\n * @param {string|undefined} value Field name\n * @returns {undefined}\n */\n\n/**\n * Builds a setter for a oneof's present field name.\n * @param {string[]} fieldNames Field names\n * @returns {OneOfSetter} Unbound setter\n */\nutil.oneOfSetter = function setOneOf(fieldNames) {\n\n    /**\n     * @param {string} name Field name\n     * @returns {undefined}\n     * @this Object\n     * @ignore\n     */\n    return function(name) {\n        for (var i = 0; i < fieldNames.length; ++i)\n            if (fieldNames[i] !== name)\n                delete this[fieldNames[i]];\n    };\n};\n\n/**\n * Default conversion options used for {@link Message#toJSON} implementations.\n *\n * These options are close to proto3's JSON mapping with the exception that internal types like Any are handled just like messages. More precisely:\n *\n * - Longs become strings\n * - Enums become string keys\n * - Bytes become base64 encoded strings\n * - (Sub-)Messages become plain objects\n * - Maps become plain objects with all string keys\n * - Repeated fields become arrays\n * - NaN and Infinity for float and double fields become strings\n *\n * @type {IConversionOptions}\n * @see https://developers.google.com/protocol-buffers/docs/proto3?hl=en#json\n */\nutil.toJSONOptions = {\n    longs: String,\n    enums: String,\n    bytes: String,\n    json: true\n};\n\n// Sets up buffer utility according to the environment (called in index-minimal)\nutil._configure = function() {\n    var Buffer = util.Buffer;\n    /* istanbul ignore if */\n    if (!Buffer) {\n        util._Buffer_from = util._Buffer_allocUnsafe = null;\n        return;\n    }\n    // because node 4.x buffers are incompatible & immutable\n    // see: https://github.com/dcodeIO/protobuf.js/pull/665\n    util._Buffer_from = Buffer.from !== Uint8Array.from && Buffer.from ||\n        /* istanbul ignore next */\n        function Buffer_from(value, encoding) {\n            return new Buffer(value, encoding);\n        };\n    util._Buffer_allocUnsafe = Buffer.allocUnsafe ||\n        /* istanbul ignore next */\n        function Buffer_allocUnsafe(size) {\n            return new Buffer(size);\n        };\n};\n","'use strict';\n\n/**\n * @typedef {{ [key: string]: any }} Extensions\n * @typedef {Error} Err\n * @property {string} message\n */\n\n/**\n *\n * @param {Error} obj\n * @param {Extensions} props\n * @returns {Error & Extensions}\n */\nfunction assign(obj, props) {\n    for (const key in props) {\n        Object.defineProperty(obj, key, {\n            value: props[key],\n            enumerable: true,\n            configurable: true,\n        });\n    }\n\n    return obj;\n}\n\n/**\n *\n * @param {any} err - An Error\n * @param {string|Extensions} code - A string code or props to set on the error\n * @param {Extensions} [props] - Props to set on the error\n * @returns {Error & Extensions}\n */\nfunction createError(err, code, props) {\n    if (!err || typeof err === 'string') {\n        throw new TypeError('Please pass an Error to err-code');\n    }\n\n    if (!props) {\n        props = {};\n    }\n\n    if (typeof code === 'object') {\n        props = code;\n        code = '';\n    }\n\n    if (code) {\n        props.code = code;\n    }\n\n    try {\n        return assign(err, props);\n    } catch (_) {\n        props.message = err.message;\n        props.stack = err.stack;\n\n        const ErrClass = function () {};\n\n        ErrClass.prototype = Object.create(Object.getPrototypeOf(err));\n\n        // @ts-ignore\n        const output = assign(new ErrClass(), props);\n\n        return output;\n    }\n}\n\nmodule.exports = createError;\n","'use strict'\n\nconst CID = require('cids')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\n/**\n * Link represents an IPFS Merkle DAG Link between Nodes.\n */\nclass DAGLink {\n  /**\n   * @param {string | undefined | null} name\n   * @param {number} size\n   * @param {CID | string | Uint8Array} cid\n   */\n  constructor (name, size, cid) {\n    if (!cid) {\n      throw new Error('A link requires a cid to point to')\n    }\n\n    // assert(size, 'A link requires a size')\n    //  note - links should include size, but this assert is disabled\n    //  for now to maintain consistency with go-ipfs pinset\n    this.Name = name || ''\n    this.Tsize = size\n    this.Hash = new CID(cid)\n\n    Object.defineProperties(this, {\n      _nameBuf: { value: null, writable: true, enumerable: false }\n    })\n  }\n\n  toString () {\n    return `DAGLink <${this.Hash.toBaseEncodedString()} - name: \"${this.Name}\", size: ${this.Tsize}>`\n  }\n\n  toJSON () {\n    if (!this._json) {\n      this._json = Object.freeze({\n        name: this.Name,\n        size: this.Tsize,\n        cid: this.Hash.toBaseEncodedString()\n      })\n    }\n\n    return Object.assign({}, this._json)\n  }\n\n  // Memoize the Uint8Array representation of name\n  // We need this to sort the links, otherwise\n  // we will reallocate new Uint8Arrays every time\n  get nameAsBuffer () {\n    if (this._nameBuf != null) {\n      return this._nameBuf\n    }\n\n    this._nameBuf = uint8ArrayFromString(this.Name)\n    return this._nameBuf\n  }\n}\n\nmodule.exports = DAGLink\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\nvar varint = require('../varint.js');\n\nconst create = (code, digest) => {\n  const size = digest.byteLength;\n  const sizeOffset = varint.encodingLength(code);\n  const digestOffset = sizeOffset + varint.encodingLength(size);\n  const bytes = new Uint8Array(digestOffset + size);\n  varint.encodeTo(code, bytes, 0);\n  varint.encodeTo(size, bytes, sizeOffset);\n  bytes.set(digest, digestOffset);\n  return new Digest(code, size, digest, bytes);\n};\nconst decode = multihash => {\n  const bytes$1 = bytes.coerce(multihash);\n  const [code, sizeOffset] = varint.decode(bytes$1);\n  const [size, digestOffset] = varint.decode(bytes$1.subarray(sizeOffset));\n  const digest = bytes$1.subarray(sizeOffset + digestOffset);\n  if (digest.byteLength !== size) {\n    throw new Error('Incorrect length');\n  }\n  return new Digest(code, size, digest, bytes$1);\n};\nconst equals = (a, b) => {\n  if (a === b) {\n    return true;\n  } else {\n    return a.code === b.code && a.size === b.size && bytes.equals(a.bytes, b.bytes);\n  }\n};\nclass Digest {\n  constructor(code, size, digest, bytes) {\n    this.code = code;\n    this.size = size;\n    this.digest = digest;\n    this.bytes = bytes;\n  }\n}\n\nexports.Digest = Digest;\nexports.create = create;\nexports.decode = decode;\nexports.equals = equals;\n","'use strict'\n\nconst {\n  Data: PBData\n} = require('./unixfs')\nconst errcode = require('err-code')\n\n/**\n * @typedef {import('./types').Mtime} Mtime\n * @typedef {import('./types').MtimeLike} MtimeLike\n */\n\nconst types = [\n  'raw',\n  'directory',\n  'file',\n  'metadata',\n  'symlink',\n  'hamt-sharded-directory'\n]\n\nconst dirTypes = [\n  'directory',\n  'hamt-sharded-directory'\n]\n\nconst DEFAULT_FILE_MODE = parseInt('0644', 8)\nconst DEFAULT_DIRECTORY_MODE = parseInt('0755', 8)\n\n/**\n * @param {string | number | undefined} [mode]\n */\nfunction parseMode (mode) {\n  if (mode == null) {\n    return undefined\n  }\n\n  if (typeof mode === 'number') {\n    return mode & 0xFFF\n  }\n\n  mode = mode.toString()\n\n  if (mode.substring(0, 1) === '0') {\n    // octal string\n    return parseInt(mode, 8) & 0xFFF\n  }\n\n  // decimal string\n  return parseInt(mode, 10) & 0xFFF\n}\n\n/**\n * @param {any} input\n */\nfunction parseMtime (input) {\n  if (input == null) {\n    return undefined\n  }\n\n  /** @type {Mtime | undefined} */\n  let mtime\n\n  // { secs, nsecs }\n  if (input.secs != null) {\n    mtime = {\n      secs: input.secs,\n      nsecs: input.nsecs\n    }\n  }\n\n  // UnixFS TimeSpec\n  if (input.Seconds != null) {\n    mtime = {\n      secs: input.Seconds,\n      nsecs: input.FractionalNanoseconds\n    }\n  }\n\n  // process.hrtime()\n  if (Array.isArray(input)) {\n    mtime = {\n      secs: input[0],\n      nsecs: input[1]\n    }\n  }\n\n  // Javascript Date\n  if (input instanceof Date) {\n    const ms = input.getTime()\n    const secs = Math.floor(ms / 1000)\n\n    mtime = {\n      secs: secs,\n      nsecs: (ms - (secs * 1000)) * 1000\n    }\n  }\n\n  /*\n  TODO: https://github.com/ipfs/aegir/issues/487\n\n  // process.hrtime.bigint()\n  if (input instanceof BigInt) {\n    const secs = input / BigInt(1e9)\n    const nsecs = input - (secs * BigInt(1e9))\n\n    mtime = {\n      secs: parseInt(secs.toString()),\n      nsecs: parseInt(nsecs.toString())\n    }\n  }\n  */\n\n  if (!Object.prototype.hasOwnProperty.call(mtime, 'secs')) {\n    return undefined\n  }\n\n  if (mtime != null && mtime.nsecs != null && (mtime.nsecs < 0 || mtime.nsecs > 999999999)) {\n    throw errcode(new Error('mtime-nsecs must be within the range [0,999999999]'), 'ERR_INVALID_MTIME_NSECS')\n  }\n\n  return mtime\n}\n\nclass Data {\n  /**\n   * Decode from protobuf https://github.com/ipfs/specs/blob/master/UNIXFS.md\n   *\n   * @param {Uint8Array} marshaled\n   */\n  static unmarshal (marshaled) {\n    const message = PBData.decode(marshaled)\n    const decoded = PBData.toObject(message, {\n      defaults: false,\n      arrays: true,\n      longs: Number,\n      objects: false\n    })\n\n    const data = new Data({\n      type: types[decoded.Type],\n      data: decoded.Data,\n      blockSizes: decoded.blocksizes,\n      mode: decoded.mode,\n      mtime: decoded.mtime\n        ? {\n            secs: decoded.mtime.Seconds,\n            nsecs: decoded.mtime.FractionalNanoseconds\n          }\n        : undefined\n    })\n\n    // make sure we honour the original mode\n    data._originalMode = decoded.mode || 0\n\n    return data\n  }\n\n  /**\n   * @param {object} [options]\n   * @param {string} [options.type='file']\n   * @param {Uint8Array} [options.data]\n   * @param {number[]} [options.blockSizes]\n   * @param {number} [options.hashType]\n   * @param {number} [options.fanout]\n   * @param {MtimeLike | null} [options.mtime]\n   * @param {number | string} [options.mode]\n   */\n  constructor (options = {\n    type: 'file'\n  }) {\n    const {\n      type,\n      data,\n      blockSizes,\n      hashType,\n      fanout,\n      mtime,\n      mode\n    } = options\n\n    if (type && !types.includes(type)) {\n      throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    this.type = type || 'file'\n    this.data = data\n    this.hashType = hashType\n    this.fanout = fanout\n\n    /** @type {number[]} */\n    this.blockSizes = blockSizes || []\n    this._originalMode = 0\n    this.mode = parseMode(mode)\n\n    if (mtime) {\n      this.mtime = parseMtime(mtime)\n\n      if (this.mtime && !this.mtime.nsecs) {\n        this.mtime.nsecs = 0\n      }\n    }\n  }\n\n  /**\n   * @param {number | undefined} mode\n   */\n  set mode (mode) {\n    this._mode = this.isDirectory() ? DEFAULT_DIRECTORY_MODE : DEFAULT_FILE_MODE\n\n    const parsedMode = parseMode(mode)\n\n    if (parsedMode !== undefined) {\n      this._mode = parsedMode\n    }\n  }\n\n  /**\n   * @returns {number | undefined}\n   */\n  get mode () {\n    return this._mode\n  }\n\n  isDirectory () {\n    return Boolean(this.type && dirTypes.includes(this.type))\n  }\n\n  /**\n   * @param {number} size\n   */\n  addBlockSize (size) {\n    this.blockSizes.push(size)\n  }\n\n  /**\n   * @param {number} index\n   */\n  removeBlockSize (index) {\n    this.blockSizes.splice(index, 1)\n  }\n\n  /**\n   * Returns `0` for directories or `data.length + sum(blockSizes)` for everything else\n   */\n  fileSize () {\n    if (this.isDirectory()) {\n      // dirs don't have file size\n      return 0\n    }\n\n    let sum = 0\n    this.blockSizes.forEach((size) => {\n      sum += size\n    })\n\n    if (this.data) {\n      sum += this.data.length\n    }\n\n    return sum\n  }\n\n  /**\n   * encode to protobuf Uint8Array\n   */\n  marshal () {\n    let type\n\n    switch (this.type) {\n      case 'raw': type = PBData.DataType.Raw; break\n      case 'directory': type = PBData.DataType.Directory; break\n      case 'file': type = PBData.DataType.File; break\n      case 'metadata': type = PBData.DataType.Metadata; break\n      case 'symlink': type = PBData.DataType.Symlink; break\n      case 'hamt-sharded-directory': type = PBData.DataType.HAMTShard; break\n      default:\n        throw errcode(new Error('Type: ' + type + ' is not valid'), 'ERR_INVALID_TYPE')\n    }\n\n    let data = this.data\n\n    if (!this.data || !this.data.length) {\n      data = undefined\n    }\n\n    let mode\n\n    if (this.mode != null) {\n      mode = (this._originalMode & 0xFFFFF000) | (parseMode(this.mode) || 0)\n\n      if (mode === DEFAULT_FILE_MODE && !this.isDirectory()) {\n        mode = undefined\n      }\n\n      if (mode === DEFAULT_DIRECTORY_MODE && this.isDirectory()) {\n        mode = undefined\n      }\n    }\n\n    let mtime\n\n    if (this.mtime != null) {\n      const parsed = parseMtime(this.mtime)\n\n      if (parsed) {\n        mtime = {\n          Seconds: parsed.secs,\n          FractionalNanoseconds: parsed.nsecs\n        }\n\n        if (mtime.FractionalNanoseconds === 0) {\n          delete mtime.FractionalNanoseconds\n        }\n      }\n    }\n\n    const pbData = {\n      Type: type,\n      Data: data,\n      filesize: this.isDirectory() ? undefined : this.fileSize(),\n      blocksizes: this.blockSizes,\n      hashType: this.hashType,\n      fanout: this.fanout,\n      mode,\n      mtime\n    }\n\n    return PBData.encode(pbData).finish()\n  }\n}\n\nmodule.exports = {\n  UnixFS: Data,\n  parseMode,\n  parseMtime\n}\n","'use strict'\n\nconst mh = require('multihashing-async')\nconst CID = require('cids')\n\n/**\n * @param {Uint8Array} buffer\n * @param {import('../types').BlockAPI} block\n * @param {import('../types').PersistOptions} options\n */\nconst persist = async (buffer, block, options) => {\n  if (!options.codec) {\n    options.codec = 'dag-pb'\n  }\n\n  if (!options.cidVersion) {\n    options.cidVersion = 0\n  }\n\n  if (!options.hashAlg) {\n    options.hashAlg = 'sha2-256'\n  }\n\n  if (options.hashAlg !== 'sha2-256') {\n    options.cidVersion = 1\n  }\n\n  const multihash = await mh(buffer, options.hashAlg)\n  const cid = new CID(options.cidVersion, options.codec, multihash)\n\n  if (!options.onlyHash) {\n    // @ts-ignore block api takes uint8arrays or blocks but is missing from typedefs\n    await block.put(buffer, {\n      // @ts-ignore pin option is missing from block api typedefs\n      pin: options.pin,\n      preload: options.preload,\n      timeout: options.timeout,\n      cid\n    })\n  }\n\n  return cid\n}\n\nmodule.exports = persist\n","'use strict'\n\nconst resolver = require('./resolver')\nconst util = require('./util')\nconst DAGNodeClass = require('./dag-node/dagNode')\nconst DAGLinkClass = require('./dag-link/dagLink')\n\n/**\n * @typedef {import('./types').DAGLinkLike} DAGLinkLike\n * @typedef {import('./types').DAGNodeLike} DAGNodeLike\n * @typedef {import('./dag-node/dagNode')} DAGNode\n * @typedef {import('./dag-link/dagLink')} DAGLink\n */\n\n/**\n * @type {import('./types').DAGNodeFormat}\n */\nconst format = {\n  DAGNode: DAGNodeClass,\n  DAGLink: DAGLinkClass,\n\n  /**\n   * Functions to fulfil IPLD Format interface\n   * https://github.com/ipld/interface-ipld-format\n   */\n  resolver,\n  util,\n  codec: util.codec,\n  defaultHashAlg: util.defaultHashAlg\n}\n\nmodule.exports = format\n","'use strict'\n\nconst errcode = require('err-code')\nconst multihash = require('multihashes')\nconst crypto = require('./crypto')\nconst { equals } = require('uint8arrays/equals')\n\n/**\n * @typedef {import(\"./types\").Digest} Digest\n * @typedef {import(\"multihashes\").HashName} HashName\n */\n\n/**\n * Hash the given `bytes` using the algorithm specified by `alg`.\n *\n * @param {Uint8Array} bytes - The value to hash.\n * @param {HashName} alg - The algorithm to use eg 'sha1'\n * @param {number} [length] - Optionally trim the result to this length.\n * @returns {Promise<Uint8Array>}\n */\nasync function Multihashing (bytes, alg, length) {\n  const digest = await Multihashing.digest(bytes, alg, length)\n  return multihash.encode(digest, alg, length)\n}\n\n/**\n * Expose multihash itself, to avoid silly double requires.\n */\nMultihashing.multihash = multihash\n\n/**\n * @param {Uint8Array} bytes - The value to hash.\n * @param {HashName} alg - The algorithm to use eg 'sha1'\n * @param {number} [length] - Optionally trim the result to this length.\n * @returns {Promise<Uint8Array>}\n */\nMultihashing.digest = async (bytes, alg, length) => {\n  const hash = Multihashing.createHash(alg)\n  const digest = await hash(bytes)\n  return length ? digest.slice(0, length) : digest\n}\n\n/**\n * Creates a function that hashes with the given algorithm\n *\n * @param {HashName} alg - The algorithm to use eg 'sha1'\n * @returns {Digest} - The hash function corresponding to `alg`\n */\nMultihashing.createHash = function (alg) {\n  if (!alg) {\n    const e = errcode(new Error('hash algorithm must be specified'), 'ERR_HASH_ALGORITHM_NOT_SPECIFIED')\n    throw e\n  }\n\n  const code = multihash.coerceCode(alg)\n  if (!Multihashing.functions[code]) {\n    throw errcode(new Error(`multihash function '${alg}' not yet supported`), 'ERR_HASH_ALGORITHM_NOT_SUPPORTED')\n  }\n\n  return Multihashing.functions[code]\n}\n\n/**\n * Mapping of multihash codes to their hashing functions.\n *\n * @type {Record<number, Digest>}\n */\n// @ts-ignore - most of those functions aren't typed\nMultihashing.functions = {\n  // identity\n  0x00: crypto.identity,\n  // sha1\n  0x11: crypto.sha1,\n  // sha2-256\n  0x12: crypto.sha2256,\n  // sha2-512\n  0x13: crypto.sha2512,\n  // sha3-512\n  0x14: crypto.sha3512,\n  // sha3-384\n  0x15: crypto.sha3384,\n  // sha3-256\n  0x16: crypto.sha3256,\n  // sha3-224\n  0x17: crypto.sha3224,\n  // shake-128\n  0x18: crypto.shake128,\n  // shake-256\n  0x19: crypto.shake256,\n  // keccak-224\n  0x1A: crypto.keccak224,\n  // keccak-256\n  0x1B: crypto.keccak256,\n  // keccak-384\n  0x1C: crypto.keccak384,\n  // keccak-512\n  0x1D: crypto.keccak512,\n  // murmur3-128\n  0x22: crypto.murmur3128,\n  // murmur3-32\n  0x23: crypto.murmur332,\n  // dbl-sha2-256\n  0x56: crypto.dblSha2256\n}\n\n// add blake functions\ncrypto.addBlake(Multihashing.functions)\n\n/**\n * @param {Uint8Array} bytes\n * @param {Uint8Array} hash\n * @returns {Promise<boolean>}\n */\nMultihashing.validate = async (bytes, hash) => {\n  const newHash = await Multihashing(bytes, multihash.decode(hash).name)\n\n  return equals(hash, newHash)\n}\n\nmodule.exports = Multihashing\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint$1 = require('../vendor/varint.js');\n\nconst decode = data => {\n  const code = varint$1.decode(data);\n  return [\n    code,\n    varint$1.decode.bytes\n  ];\n};\nconst encodeTo = (int, target, offset = 0) => {\n  varint$1.encode(int, target, offset);\n  return target;\n};\nconst encodingLength = int => {\n  return varint$1.encodingLength(int);\n};\n\nexports.decode = decode;\nexports.encodeTo = encodeTo;\nexports.encodingLength = encodingLength;\n","'use strict'\n\n/**\n * Takes an (async) iterable that emits things and returns an async iterable that\n * emits those things in fixed-sized batches.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T[]>}\n */\nasync function * batch (source, size = 1) {\n  /** @type {T[]} */\n  let things = []\n\n  if (size < 1) {\n    size = 1\n  }\n\n  for await (const thing of source) {\n    things.push(thing)\n\n    while (things.length >= size) {\n      yield things.slice(0, size)\n\n      things = things.slice(size)\n    }\n  }\n\n  while (things.length) {\n    yield things.slice(0, size)\n\n    things = things.slice(size)\n  }\n}\n\nmodule.exports = batch\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar digest = require('./digest.js');\n\nconst from = ({name, code, encode}) => new Hasher(name, code, encode);\nclass Hasher {\n  constructor(name, code, encode) {\n    this.name = name;\n    this.code = code;\n    this.encode = encode;\n  }\n  digest(input) {\n    if (input instanceof Uint8Array) {\n      const result = this.encode(input);\n      return result instanceof Uint8Array ? digest.create(this.code, result) : result.then(digest$1 => digest.create(this.code, digest$1));\n    } else {\n      throw Error('Unknown type, must be binary type');\n    }\n  }\n}\n\nexports.Hasher = Hasher;\nexports.from = from;\n","// minimal library entry point.\n\n\"use strict\";\nmodule.exports = require(\"./src/index-minimal\");\n","'use strict'\n\nconst bases = require('./util/bases')\n\n/**\n * @typedef {import('./util/bases').SupportedEncodings} SupportedEncodings\n */\n\n/**\n * Create a `Uint8Array` from the passed string\n *\n * Supports `utf8`, `utf-8`, `hex`, and any encoding supported by the multiformats module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {string} string\n * @param {SupportedEncodings} [encoding=utf8] - utf8, base16, base64, base64urlpad, etc\n * @returns {Uint8Array}\n */\nfunction fromString (string, encoding = 'utf8') {\n  const base = bases[encoding]\n\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  // add multibase prefix\n  return base.decoder.decode(`${base.prefix}${string}`)\n}\n\nmodule.exports = fromString\n","'use strict'\n\n/**\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('./types').BlockAPI} BlockAPI\n * @typedef {import('cids')} CID\n * @typedef {object} DirProps\n * @property {boolean} root\n * @property {boolean} dir\n * @property {string} path\n * @property {boolean} dirty\n * @property {boolean} flat\n * @property {Dir} [parent]\n * @property {string} [parentKey]\n * @property {import('ipfs-unixfs').UnixFS} [unixfs]\n * @property {number} [mode]\n * @property {import('ipfs-unixfs').Mtime} [mtime]\n */\nclass Dir {\n  /**\n   *\n   * @param {DirProps} props\n   * @param {ImporterOptions} options\n   */\n  constructor (props, options) {\n    this.options = options || {}\n\n    this.root = props.root\n    this.dir = props.dir\n    this.path = props.path\n    this.dirty = props.dirty\n    this.flat = props.flat\n    this.parent = props.parent\n    this.parentKey = props.parentKey\n    this.unixfs = props.unixfs\n    this.mode = props.mode\n    this.mtime = props.mtime\n\n    /** @type {CID | undefined} */\n    this.cid = undefined\n    /** @type {number | undefined} */\n    this.size = undefined\n  }\n\n  /**\n   * @param {string} name\n   * @param {InProgressImportResult | Dir} value\n   */\n  async put (name, value) { }\n\n  /**\n   * @param {string} name\n   * @returns {Promise<InProgressImportResult | Dir | undefined>}\n   */\n  get (name) {\n    return Promise.resolve(this)\n  }\n\n  /**\n   * @returns {AsyncIterable<{ key: string, child: InProgressImportResult | Dir}>}\n   */\n  async * eachChildSeries () { }\n\n  /**\n   * @param {BlockAPI} block\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (block) { }\n}\n\nmodule.exports = Dir\n","function _AwaitValue(value) {\n  this.wrapped = value;\n}\n\nmodule.exports = _AwaitValue, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict'\n\nconst batch = require('it-batch')\n\n/**\n * @template T\n * @typedef {{ok:true, value:T}} Success\n */\n\n/**\n * @typedef {{ok:false, err:Error}} Failure\n */\n\n/**\n * Takes an (async) iterator that emits promise-returning functions,\n * invokes them in parallel and emits the results as they become available but\n * in the same order as the input\n *\n * @template T\n * @param {AsyncIterable<() => Promise<T>>} source\n * @param {number} [size=1]\n * @returns {AsyncIterable<T>}\n */\nasync function * parallelBatch (source, size = 1) {\n  for await (const tasks of batch(source, size)) {\n    /** @type {Promise<Success<T>|Failure>[]} */\n    const things = tasks.map(\n      /**\n       * @param {() => Promise<T>} p\n       */\n      p => {\n        return p().then(value => ({ ok: true, value }), err => ({ ok: false, err }))\n      })\n\n    for (let i = 0; i < things.length; i++) {\n      const result = await things[i]\n\n      if (result.ok) {\n        yield result.value\n      } else {\n        throw result.err\n      }\n    }\n  }\n}\n\nmodule.exports = parallelBatch\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar identity = require('./bases/identity.js');\nvar base2 = require('./bases/base2.js');\nvar base8 = require('./bases/base8.js');\nvar base10 = require('./bases/base10.js');\nvar base16 = require('./bases/base16.js');\nvar base32 = require('./bases/base32.js');\nvar base36 = require('./bases/base36.js');\nvar base58 = require('./bases/base58.js');\nvar base64 = require('./bases/base64.js');\nvar base256emoji = require('./bases/base256emoji.js');\nvar sha2 = require('./hashes/sha2.js');\nvar identity$1 = require('./hashes/identity.js');\nvar raw = require('./codecs/raw.js');\nvar json = require('./codecs/json.js');\nrequire('./index.js');\nvar cid = require('./cid.js');\nvar hasher = require('./hashes/hasher.js');\nvar digest = require('./hashes/digest.js');\nvar varint = require('./varint.js');\nvar bytes = require('./bytes.js');\n\nconst bases = {\n  ...identity,\n  ...base2,\n  ...base8,\n  ...base10,\n  ...base16,\n  ...base32,\n  ...base36,\n  ...base58,\n  ...base64,\n  ...base256emoji\n};\nconst hashes = {\n  ...sha2,\n  ...identity$1\n};\nconst codecs = {\n  raw,\n  json\n};\n\nexports.CID = cid.CID;\nexports.hasher = hasher;\nexports.digest = digest;\nexports.varint = varint;\nexports.bytes = bytes;\nexports.bases = bases;\nexports.codecs = codecs;\nexports.hashes = hashes;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base32 = base.rfc4648({\n  prefix: 'b',\n  name: 'base32',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567',\n  bitsPerChar: 5\n});\nconst base32upper = base.rfc4648({\n  prefix: 'B',\n  name: 'base32upper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567',\n  bitsPerChar: 5\n});\nconst base32pad = base.rfc4648({\n  prefix: 'c',\n  name: 'base32pad',\n  alphabet: 'abcdefghijklmnopqrstuvwxyz234567=',\n  bitsPerChar: 5\n});\nconst base32padupper = base.rfc4648({\n  prefix: 'C',\n  name: 'base32padupper',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZ234567=',\n  bitsPerChar: 5\n});\nconst base32hex = base.rfc4648({\n  prefix: 'v',\n  name: 'base32hex',\n  alphabet: '0123456789abcdefghijklmnopqrstuv',\n  bitsPerChar: 5\n});\nconst base32hexupper = base.rfc4648({\n  prefix: 'V',\n  name: 'base32hexupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV',\n  bitsPerChar: 5\n});\nconst base32hexpad = base.rfc4648({\n  prefix: 't',\n  name: 'base32hexpad',\n  alphabet: '0123456789abcdefghijklmnopqrstuv=',\n  bitsPerChar: 5\n});\nconst base32hexpadupper = base.rfc4648({\n  prefix: 'T',\n  name: 'base32hexpadupper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUV=',\n  bitsPerChar: 5\n});\nconst base32z = base.rfc4648({\n  prefix: 'h',\n  name: 'base32z',\n  alphabet: 'ybndrfg8ejkmcpqxot1uwisza345h769',\n  bitsPerChar: 5\n});\n\nexports.base32 = base32;\nexports.base32hex = base32hex;\nexports.base32hexpad = base32hexpad;\nexports.base32hexpadupper = base32hexpadupper;\nexports.base32hexupper = base32hexupper;\nexports.base32pad = base32pad;\nexports.base32padupper = base32padupper;\nexports.base32upper = base32upper;\nexports.base32z = base32z;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base58btc = base.baseX({\n  name: 'base58btc',\n  prefix: 'z',\n  alphabet: '123456789ABCDEFGHJKLMNPQRSTUVWXYZabcdefghijkmnopqrstuvwxyz'\n});\nconst base58flickr = base.baseX({\n  name: 'base58flickr',\n  prefix: 'Z',\n  alphabet: '123456789abcdefghijkmnopqrstuvwxyzABCDEFGHJKLMNPQRSTUVWXYZ'\n});\n\nexports.base58btc = base58btc;\nexports.base58flickr = base58flickr;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar varint = require('./varint.js');\nvar digest = require('./hashes/digest.js');\nvar base58 = require('./bases/base58.js');\nvar base32 = require('./bases/base32.js');\nvar bytes = require('./bytes.js');\n\nclass CID {\n  constructor(version, code, multihash, bytes) {\n    this.code = code;\n    this.version = version;\n    this.multihash = multihash;\n    this.bytes = bytes;\n    this.byteOffset = bytes.byteOffset;\n    this.byteLength = bytes.byteLength;\n    this.asCID = this;\n    this._baseCache = new Map();\n    Object.defineProperties(this, {\n      byteOffset: hidden,\n      byteLength: hidden,\n      code: readonly,\n      version: readonly,\n      multihash: readonly,\n      bytes: readonly,\n      _baseCache: hidden,\n      asCID: hidden\n    });\n  }\n  toV0() {\n    switch (this.version) {\n    case 0: {\n        return this;\n      }\n    default: {\n        const {code, multihash} = this;\n        if (code !== DAG_PB_CODE) {\n          throw new Error('Cannot convert a non dag-pb CID to CIDv0');\n        }\n        if (multihash.code !== SHA_256_CODE) {\n          throw new Error('Cannot convert non sha2-256 multihash CID to CIDv0');\n        }\n        return CID.createV0(multihash);\n      }\n    }\n  }\n  toV1() {\n    switch (this.version) {\n    case 0: {\n        const {code, digest: digest$1} = this.multihash;\n        const multihash = digest.create(code, digest$1);\n        return CID.createV1(this.code, multihash);\n      }\n    case 1: {\n        return this;\n      }\n    default: {\n        throw Error(`Can not convert CID version ${ this.version } to version 0. This is a bug please report`);\n      }\n    }\n  }\n  equals(other) {\n    return other && this.code === other.code && this.version === other.version && digest.equals(this.multihash, other.multihash);\n  }\n  toString(base) {\n    const {bytes, version, _baseCache} = this;\n    switch (version) {\n    case 0:\n      return toStringV0(bytes, _baseCache, base || base58.base58btc.encoder);\n    default:\n      return toStringV1(bytes, _baseCache, base || base32.base32.encoder);\n    }\n  }\n  toJSON() {\n    return {\n      code: this.code,\n      version: this.version,\n      hash: this.multihash.bytes\n    };\n  }\n  get [Symbol.toStringTag]() {\n    return 'CID';\n  }\n  [Symbol.for('nodejs.util.inspect.custom')]() {\n    return 'CID(' + this.toString() + ')';\n  }\n  static isCID(value) {\n    deprecate(/^0\\.0/, IS_CID_DEPRECATION);\n    return !!(value && (value[cidSymbol] || value.asCID === value));\n  }\n  get toBaseEncodedString() {\n    throw new Error('Deprecated, use .toString()');\n  }\n  get codec() {\n    throw new Error('\"codec\" property is deprecated, use integer \"code\" property instead');\n  }\n  get buffer() {\n    throw new Error('Deprecated .buffer property, use .bytes to get Uint8Array instead');\n  }\n  get multibaseName() {\n    throw new Error('\"multibaseName\" property is deprecated');\n  }\n  get prefix() {\n    throw new Error('\"prefix\" property is deprecated');\n  }\n  static asCID(value) {\n    if (value instanceof CID) {\n      return value;\n    } else if (value != null && value.asCID === value) {\n      const {version, code, multihash, bytes} = value;\n      return new CID(version, code, multihash, bytes || encodeCID(version, code, multihash.bytes));\n    } else if (value != null && value[cidSymbol] === true) {\n      const {version, multihash, code} = value;\n      const digest$1 = digest.decode(multihash);\n      return CID.create(version, code, digest$1);\n    } else {\n      return null;\n    }\n  }\n  static create(version, code, digest) {\n    if (typeof code !== 'number') {\n      throw new Error('String codecs are no longer supported');\n    }\n    switch (version) {\n    case 0: {\n        if (code !== DAG_PB_CODE) {\n          throw new Error(`Version 0 CID must use dag-pb (code: ${ DAG_PB_CODE }) block encoding`);\n        } else {\n          return new CID(version, code, digest, digest.bytes);\n        }\n      }\n    case 1: {\n        const bytes = encodeCID(version, code, digest.bytes);\n        return new CID(version, code, digest, bytes);\n      }\n    default: {\n        throw new Error('Invalid version');\n      }\n    }\n  }\n  static createV0(digest) {\n    return CID.create(0, DAG_PB_CODE, digest);\n  }\n  static createV1(code, digest) {\n    return CID.create(1, code, digest);\n  }\n  static decode(bytes) {\n    const [cid, remainder] = CID.decodeFirst(bytes);\n    if (remainder.length) {\n      throw new Error('Incorrect length');\n    }\n    return cid;\n  }\n  static decodeFirst(bytes$1) {\n    const specs = CID.inspectBytes(bytes$1);\n    const prefixSize = specs.size - specs.multihashSize;\n    const multihashBytes = bytes.coerce(bytes$1.subarray(prefixSize, prefixSize + specs.multihashSize));\n    if (multihashBytes.byteLength !== specs.multihashSize) {\n      throw new Error('Incorrect length');\n    }\n    const digestBytes = multihashBytes.subarray(specs.multihashSize - specs.digestSize);\n    const digest$1 = new digest.Digest(specs.multihashCode, specs.digestSize, digestBytes, multihashBytes);\n    const cid = specs.version === 0 ? CID.createV0(digest$1) : CID.createV1(specs.codec, digest$1);\n    return [\n      cid,\n      bytes$1.subarray(specs.size)\n    ];\n  }\n  static inspectBytes(initialBytes) {\n    let offset = 0;\n    const next = () => {\n      const [i, length] = varint.decode(initialBytes.subarray(offset));\n      offset += length;\n      return i;\n    };\n    let version = next();\n    let codec = DAG_PB_CODE;\n    if (version === 18) {\n      version = 0;\n      offset = 0;\n    } else if (version === 1) {\n      codec = next();\n    }\n    if (version !== 0 && version !== 1) {\n      throw new RangeError(`Invalid CID version ${ version }`);\n    }\n    const prefixSize = offset;\n    const multihashCode = next();\n    const digestSize = next();\n    const size = offset + digestSize;\n    const multihashSize = size - prefixSize;\n    return {\n      version,\n      codec,\n      multihashCode,\n      digestSize,\n      multihashSize,\n      size\n    };\n  }\n  static parse(source, base) {\n    const [prefix, bytes] = parseCIDtoBytes(source, base);\n    const cid = CID.decode(bytes);\n    cid._baseCache.set(prefix, source);\n    return cid;\n  }\n}\nconst parseCIDtoBytes = (source, base) => {\n  switch (source[0]) {\n  case 'Q': {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(`${ base58.base58btc.prefix }${ source }`)\n      ];\n    }\n  case base58.base58btc.prefix: {\n      const decoder = base || base58.base58btc;\n      return [\n        base58.base58btc.prefix,\n        decoder.decode(source)\n      ];\n    }\n  case base32.base32.prefix: {\n      const decoder = base || base32.base32;\n      return [\n        base32.base32.prefix,\n        decoder.decode(source)\n      ];\n    }\n  default: {\n      if (base == null) {\n        throw Error('To parse non base32 or base58btc encoded CID multibase decoder must be provided');\n      }\n      return [\n        source[0],\n        base.decode(source)\n      ];\n    }\n  }\n};\nconst toStringV0 = (bytes, cache, base) => {\n  const {prefix} = base;\n  if (prefix !== base58.base58btc.prefix) {\n    throw Error(`Cannot string encode V0 in ${ base.name } encoding`);\n  }\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes).slice(1);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst toStringV1 = (bytes, cache, base) => {\n  const {prefix} = base;\n  const cid = cache.get(prefix);\n  if (cid == null) {\n    const cid = base.encode(bytes);\n    cache.set(prefix, cid);\n    return cid;\n  } else {\n    return cid;\n  }\n};\nconst DAG_PB_CODE = 112;\nconst SHA_256_CODE = 18;\nconst encodeCID = (version, code, multihash) => {\n  const codeOffset = varint.encodingLength(version);\n  const hashOffset = codeOffset + varint.encodingLength(code);\n  const bytes = new Uint8Array(hashOffset + multihash.byteLength);\n  varint.encodeTo(version, bytes, 0);\n  varint.encodeTo(code, bytes, codeOffset);\n  bytes.set(multihash, hashOffset);\n  return bytes;\n};\nconst cidSymbol = Symbol.for('@ipld/js-cid/CID');\nconst readonly = {\n  writable: false,\n  configurable: false,\n  enumerable: true\n};\nconst hidden = {\n  writable: false,\n  enumerable: false,\n  configurable: false\n};\nconst version = '0.0.0-dev';\nconst deprecate = (range, message) => {\n  if (range.test(version)) {\n    console.warn(message);\n  } else {\n    throw new Error(message);\n  }\n};\nconst IS_CID_DEPRECATION = `CID.isCID(v) is deprecated and will be removed in the next major release.\nFollowing code pattern:\n\nif (CID.isCID(value)) {\n  doSomethingWithCID(value)\n}\n\nIs replaced with:\n\nconst cid = CID.asCID(value)\nif (cid) {\n  // Make sure to use cid instead of value\n  doSomethingWithCID(cid)\n}\n`;\n\nexports.CID = CID;\n","const ERROR_MSG_INPUT = 'Input must be an string, Buffer or Uint8Array'\n\n// For convenience, let people hash a string, not just a Uint8Array\nfunction normalizeInput (input) {\n  let ret\n  if (input instanceof Uint8Array) {\n    ret = input\n  } else if (typeof input === 'string') {\n    const encoder = new TextEncoder()\n    ret = encoder.encode(input)\n  } else {\n    throw new Error(ERROR_MSG_INPUT)\n  }\n  return ret\n}\n\n// Converts a Uint8Array to a hexadecimal string\n// For example, toHex([255, 0, 255]) returns \"ff00ff\"\nfunction toHex (bytes) {\n  return Array.prototype.map\n    .call(bytes, function (n) {\n      return (n < 16 ? '0' : '') + n.toString(16)\n    })\n    .join('')\n}\n\n// Converts any value in [0...2^32-1] to an 8-character hex string\nfunction uint32ToHex (val) {\n  return (0x100000000 + val).toString(16).substring(1)\n}\n\n// For debugging: prints out hash state in the same format as the RFC\n// sample computation exactly, so that you can diff\nfunction debugPrint (label, arr, size) {\n  let msg = '\\n' + label + ' = '\n  for (let i = 0; i < arr.length; i += 2) {\n    if (size === 32) {\n      msg += uint32ToHex(arr[i]).toUpperCase()\n      msg += ' '\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n    } else if (size === 64) {\n      msg += uint32ToHex(arr[i + 1]).toUpperCase()\n      msg += uint32ToHex(arr[i]).toUpperCase()\n    } else throw new Error('Invalid size ' + size)\n    if (i % 6 === 4) {\n      msg += '\\n' + new Array(label.length + 4).join(' ')\n    } else if (i < arr.length - 2) {\n      msg += ' '\n    }\n  }\n  console.log(msg)\n}\n\n// For performance testing: generates N bytes of input, hashes M times\n// Measures and prints MB/second hash performance each time\nfunction testSpeed (hashFn, N, M) {\n  let startMs = new Date().getTime()\n\n  const input = new Uint8Array(N)\n  for (let i = 0; i < N; i++) {\n    input[i] = i % 256\n  }\n  const genMs = new Date().getTime()\n  console.log('Generated random input in ' + (genMs - startMs) + 'ms')\n  startMs = genMs\n\n  for (let i = 0; i < M; i++) {\n    const hashHex = hashFn(input)\n    const hashMs = new Date().getTime()\n    const ms = hashMs - startMs\n    startMs = hashMs\n    console.log('Hashed in ' + ms + 'ms: ' + hashHex.substring(0, 20) + '...')\n    console.log(\n      Math.round((N / (1 << 20) / (ms / 1000)) * 100) / 100 + ' MB PER SECOND'\n    )\n  }\n}\n\nmodule.exports = {\n  normalizeInput: normalizeInput,\n  toHex: toHex,\n  debugPrint: debugPrint,\n  testSpeed: testSpeed\n}\n","function _asyncGeneratorDelegate(inner, awaitWrap) {\n  var iter = {},\n      waiting = false;\n\n  function pump(key, value) {\n    waiting = true;\n    value = new Promise(function (resolve) {\n      resolve(inner[key](value));\n    });\n    return {\n      done: false,\n      value: awaitWrap(value)\n    };\n  }\n\n  ;\n\n  iter[typeof Symbol !== \"undefined\" && Symbol.iterator || \"@@iterator\"] = function () {\n    return this;\n  };\n\n  iter.next = function (value) {\n    if (waiting) {\n      waiting = false;\n      return value;\n    }\n\n    return pump(\"next\", value);\n  };\n\n  if (typeof inner[\"throw\"] === \"function\") {\n    iter[\"throw\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        throw value;\n      }\n\n      return pump(\"throw\", value);\n    };\n  }\n\n  if (typeof inner[\"return\"] === \"function\") {\n    iter[\"return\"] = function (value) {\n      if (waiting) {\n        waiting = false;\n        return value;\n      }\n\n      return pump(\"return\", value);\n    };\n  }\n\n  return iter;\n}\n\nmodule.exports = _asyncGeneratorDelegate, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","\"use strict\";\nmodule.exports = Writer;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferWriter; // cyclic\n\nvar LongBits  = util.LongBits,\n    base64    = util.base64,\n    utf8      = util.utf8;\n\n/**\n * Constructs a new writer operation instance.\n * @classdesc Scheduled writer operation.\n * @constructor\n * @param {function(*, Uint8Array, number)} fn Function to call\n * @param {number} len Value byte length\n * @param {*} val Value to write\n * @ignore\n */\nfunction Op(fn, len, val) {\n\n    /**\n     * Function to call.\n     * @type {function(Uint8Array, number, *)}\n     */\n    this.fn = fn;\n\n    /**\n     * Value byte length.\n     * @type {number}\n     */\n    this.len = len;\n\n    /**\n     * Next operation.\n     * @type {Writer.Op|undefined}\n     */\n    this.next = undefined;\n\n    /**\n     * Value to write.\n     * @type {*}\n     */\n    this.val = val; // type varies\n}\n\n/* istanbul ignore next */\nfunction noop() {} // eslint-disable-line no-empty-function\n\n/**\n * Constructs a new writer state instance.\n * @classdesc Copied writer state.\n * @memberof Writer\n * @constructor\n * @param {Writer} writer Writer to copy state from\n * @ignore\n */\nfunction State(writer) {\n\n    /**\n     * Current head.\n     * @type {Writer.Op}\n     */\n    this.head = writer.head;\n\n    /**\n     * Current tail.\n     * @type {Writer.Op}\n     */\n    this.tail = writer.tail;\n\n    /**\n     * Current buffer length.\n     * @type {number}\n     */\n    this.len = writer.len;\n\n    /**\n     * Next state.\n     * @type {State|null}\n     */\n    this.next = writer.states;\n}\n\n/**\n * Constructs a new writer instance.\n * @classdesc Wire format writer using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n */\nfunction Writer() {\n\n    /**\n     * Current length.\n     * @type {number}\n     */\n    this.len = 0;\n\n    /**\n     * Operations head.\n     * @type {Object}\n     */\n    this.head = new Op(noop, 0, 0);\n\n    /**\n     * Operations tail\n     * @type {Object}\n     */\n    this.tail = this.head;\n\n    /**\n     * Linked forked states.\n     * @type {Object|null}\n     */\n    this.states = null;\n\n    // When a value is written, the writer calculates its byte length and puts it into a linked\n    // list of operations to perform when finish() is called. This both allows us to allocate\n    // buffers of the exact required size and reduces the amount of work we have to do compared\n    // to first calculating over objects and then encoding over objects. In our case, the encoding\n    // part is just a linked list walk calling operations with already prepared values.\n}\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup() {\n            return (Writer.create = function create_buffer() {\n                return new BufferWriter();\n            })();\n        }\n        /* istanbul ignore next */\n        : function create_array() {\n            return new Writer();\n        };\n};\n\n/**\n * Creates a new writer.\n * @function\n * @returns {BufferWriter|Writer} A {@link BufferWriter} when Buffers are supported, otherwise a {@link Writer}\n */\nWriter.create = create();\n\n/**\n * Allocates a buffer of the specified size.\n * @param {number} size Buffer size\n * @returns {Uint8Array} Buffer\n */\nWriter.alloc = function alloc(size) {\n    return new util.Array(size);\n};\n\n// Use Uint8Array buffer pool in the browser, just like node does with buffers\n/* istanbul ignore else */\nif (util.Array !== Array)\n    Writer.alloc = util.pool(Writer.alloc, util.Array.prototype.subarray);\n\n/**\n * Pushes a new operation to the queue.\n * @param {function(Uint8Array, number, *)} fn Function to call\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @returns {Writer} `this`\n * @private\n */\nWriter.prototype._push = function push(fn, len, val) {\n    this.tail = this.tail.next = new Op(fn, len, val);\n    this.len += len;\n    return this;\n};\n\nfunction writeByte(val, buf, pos) {\n    buf[pos] = val & 255;\n}\n\nfunction writeVarint32(val, buf, pos) {\n    while (val > 127) {\n        buf[pos++] = val & 127 | 128;\n        val >>>= 7;\n    }\n    buf[pos] = val;\n}\n\n/**\n * Constructs a new varint writer operation instance.\n * @classdesc Scheduled varint writer operation.\n * @extends Op\n * @constructor\n * @param {number} len Value byte length\n * @param {number} val Value to write\n * @ignore\n */\nfunction VarintOp(len, val) {\n    this.len = len;\n    this.next = undefined;\n    this.val = val;\n}\n\nVarintOp.prototype = Object.create(Op.prototype);\nVarintOp.prototype.fn = writeVarint32;\n\n/**\n * Writes an unsigned 32 bit value as a varint.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.uint32 = function write_uint32(value) {\n    // here, the call to this.push has been inlined and a varint specific Op subclass is used.\n    // uint32 is by far the most frequently used operation and benefits significantly from this.\n    this.len += (this.tail = this.tail.next = new VarintOp(\n        (value = value >>> 0)\n                < 128       ? 1\n        : value < 16384     ? 2\n        : value < 2097152   ? 3\n        : value < 268435456 ? 4\n        :                     5,\n    value)).len;\n    return this;\n};\n\n/**\n * Writes a signed 32 bit value as a varint.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.int32 = function write_int32(value) {\n    return value < 0\n        ? this._push(writeVarint64, 10, LongBits.fromNumber(value)) // 10 bytes per spec\n        : this.uint32(value);\n};\n\n/**\n * Writes a 32 bit value as a varint, zig-zag encoded.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sint32 = function write_sint32(value) {\n    return this.uint32((value << 1 ^ value >> 31) >>> 0);\n};\n\nfunction writeVarint64(val, buf, pos) {\n    while (val.hi) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = (val.lo >>> 7 | val.hi << 25) >>> 0;\n        val.hi >>>= 7;\n    }\n    while (val.lo > 127) {\n        buf[pos++] = val.lo & 127 | 128;\n        val.lo = val.lo >>> 7;\n    }\n    buf[pos++] = val.lo;\n}\n\n/**\n * Writes an unsigned 64 bit value as a varint.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.uint64 = function write_uint64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a signed 64 bit value as a varint.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.int64 = Writer.prototype.uint64;\n\n/**\n * Writes a signed 64 bit value as a varint, zig-zag encoded.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sint64 = function write_sint64(value) {\n    var bits = LongBits.from(value).zzEncode();\n    return this._push(writeVarint64, bits.length(), bits);\n};\n\n/**\n * Writes a boolish value as a varint.\n * @param {boolean} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bool = function write_bool(value) {\n    return this._push(writeByte, 1, value ? 1 : 0);\n};\n\nfunction writeFixed32(val, buf, pos) {\n    buf[pos    ] =  val         & 255;\n    buf[pos + 1] =  val >>> 8   & 255;\n    buf[pos + 2] =  val >>> 16  & 255;\n    buf[pos + 3] =  val >>> 24;\n}\n\n/**\n * Writes an unsigned 32 bit value as fixed 32 bits.\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.fixed32 = function write_fixed32(value) {\n    return this._push(writeFixed32, 4, value >>> 0);\n};\n\n/**\n * Writes a signed 32 bit value as fixed 32 bits.\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.sfixed32 = Writer.prototype.fixed32;\n\n/**\n * Writes an unsigned 64 bit value as fixed 64 bits.\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.fixed64 = function write_fixed64(value) {\n    var bits = LongBits.from(value);\n    return this._push(writeFixed32, 4, bits.lo)._push(writeFixed32, 4, bits.hi);\n};\n\n/**\n * Writes a signed 64 bit value as fixed 64 bits.\n * @function\n * @param {Long|number|string} value Value to write\n * @returns {Writer} `this`\n * @throws {TypeError} If `value` is a string and no long library is present.\n */\nWriter.prototype.sfixed64 = Writer.prototype.fixed64;\n\n/**\n * Writes a float (32 bit).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.float = function write_float(value) {\n    return this._push(util.float.writeFloatLE, 4, value);\n};\n\n/**\n * Writes a double (64 bit float).\n * @function\n * @param {number} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.double = function write_double(value) {\n    return this._push(util.float.writeDoubleLE, 8, value);\n};\n\nvar writeBytes = util.Array.prototype.set\n    ? function writeBytes_set(val, buf, pos) {\n        buf.set(val, pos); // also works for plain array values\n    }\n    /* istanbul ignore next */\n    : function writeBytes_for(val, buf, pos) {\n        for (var i = 0; i < val.length; ++i)\n            buf[pos + i] = val[i];\n    };\n\n/**\n * Writes a sequence of bytes.\n * @param {Uint8Array|string} value Buffer or base64 encoded string to write\n * @returns {Writer} `this`\n */\nWriter.prototype.bytes = function write_bytes(value) {\n    var len = value.length >>> 0;\n    if (!len)\n        return this._push(writeByte, 1, 0);\n    if (util.isString(value)) {\n        var buf = Writer.alloc(len = base64.length(value));\n        base64.decode(value, buf, 0);\n        value = buf;\n    }\n    return this.uint32(len)._push(writeBytes, len, value);\n};\n\n/**\n * Writes a string.\n * @param {string} value Value to write\n * @returns {Writer} `this`\n */\nWriter.prototype.string = function write_string(value) {\n    var len = utf8.length(value);\n    return len\n        ? this.uint32(len)._push(utf8.write, len, value)\n        : this._push(writeByte, 1, 0);\n};\n\n/**\n * Forks this writer's state by pushing it to a stack.\n * Calling {@link Writer#reset|reset} or {@link Writer#ldelim|ldelim} resets the writer to the previous state.\n * @returns {Writer} `this`\n */\nWriter.prototype.fork = function fork() {\n    this.states = new State(this);\n    this.head = this.tail = new Op(noop, 0, 0);\n    this.len = 0;\n    return this;\n};\n\n/**\n * Resets this instance to the last state.\n * @returns {Writer} `this`\n */\nWriter.prototype.reset = function reset() {\n    if (this.states) {\n        this.head   = this.states.head;\n        this.tail   = this.states.tail;\n        this.len    = this.states.len;\n        this.states = this.states.next;\n    } else {\n        this.head = this.tail = new Op(noop, 0, 0);\n        this.len  = 0;\n    }\n    return this;\n};\n\n/**\n * Resets to the last state and appends the fork state's current write length as a varint followed by its operations.\n * @returns {Writer} `this`\n */\nWriter.prototype.ldelim = function ldelim() {\n    var head = this.head,\n        tail = this.tail,\n        len  = this.len;\n    this.reset().uint32(len);\n    if (len) {\n        this.tail.next = head.next; // skip noop\n        this.tail = tail;\n        this.len += len;\n    }\n    return this;\n};\n\n/**\n * Finishes the write operation.\n * @returns {Uint8Array} Finished buffer\n */\nWriter.prototype.finish = function finish() {\n    var head = this.head.next, // skip noop\n        buf  = this.constructor.alloc(this.len),\n        pos  = 0;\n    while (head) {\n        head.fn(head.val, buf, pos);\n        pos += head.len;\n        head = head.next;\n    }\n    // this.head = this.tail = null;\n    return buf;\n};\n\nWriter._configure = function(BufferWriter_) {\n    BufferWriter = BufferWriter_;\n    Writer.create = create();\n    BufferWriter._configure();\n};\n","\"use strict\";\nmodule.exports = Reader;\n\nvar util      = require(\"./util/minimal\");\n\nvar BufferReader; // cyclic\n\nvar LongBits  = util.LongBits,\n    utf8      = util.utf8;\n\n/* istanbul ignore next */\nfunction indexOutOfRange(reader, writeLength) {\n    return RangeError(\"index out of range: \" + reader.pos + \" + \" + (writeLength || 1) + \" > \" + reader.len);\n}\n\n/**\n * Constructs a new reader instance using the specified buffer.\n * @classdesc Wire format reader using `Uint8Array` if available, otherwise `Array`.\n * @constructor\n * @param {Uint8Array} buffer Buffer to read from\n */\nfunction Reader(buffer) {\n\n    /**\n     * Read buffer.\n     * @type {Uint8Array}\n     */\n    this.buf = buffer;\n\n    /**\n     * Read buffer position.\n     * @type {number}\n     */\n    this.pos = 0;\n\n    /**\n     * Read buffer length.\n     * @type {number}\n     */\n    this.len = buffer.length;\n}\n\nvar create_array = typeof Uint8Array !== \"undefined\"\n    ? function create_typed_array(buffer) {\n        if (buffer instanceof Uint8Array || Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    }\n    /* istanbul ignore next */\n    : function create_array(buffer) {\n        if (Array.isArray(buffer))\n            return new Reader(buffer);\n        throw Error(\"illegal buffer\");\n    };\n\nvar create = function create() {\n    return util.Buffer\n        ? function create_buffer_setup(buffer) {\n            return (Reader.create = function create_buffer(buffer) {\n                return util.Buffer.isBuffer(buffer)\n                    ? new BufferReader(buffer)\n                    /* istanbul ignore next */\n                    : create_array(buffer);\n            })(buffer);\n        }\n        /* istanbul ignore next */\n        : create_array;\n};\n\n/**\n * Creates a new reader using the specified buffer.\n * @function\n * @param {Uint8Array|Buffer} buffer Buffer to read from\n * @returns {Reader|BufferReader} A {@link BufferReader} if `buffer` is a Buffer, otherwise a {@link Reader}\n * @throws {Error} If `buffer` is not a valid buffer\n */\nReader.create = create();\n\nReader.prototype._slice = util.Array.prototype.subarray || /* istanbul ignore next */ util.Array.prototype.slice;\n\n/**\n * Reads a varint as an unsigned 32 bit value.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.uint32 = (function read_uint32_setup() {\n    var value = 4294967295; // optimizer type-hint, tends to deopt otherwise (?!)\n    return function read_uint32() {\n        value = (         this.buf[this.pos] & 127       ) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) <<  7) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 14) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] & 127) << 21) >>> 0; if (this.buf[this.pos++] < 128) return value;\n        value = (value | (this.buf[this.pos] &  15) << 28) >>> 0; if (this.buf[this.pos++] < 128) return value;\n\n        /* istanbul ignore if */\n        if ((this.pos += 5) > this.len) {\n            this.pos = this.len;\n            throw indexOutOfRange(this, 10);\n        }\n        return value;\n    };\n})();\n\n/**\n * Reads a varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.int32 = function read_int32() {\n    return this.uint32() | 0;\n};\n\n/**\n * Reads a zig-zag encoded varint as a signed 32 bit value.\n * @returns {number} Value read\n */\nReader.prototype.sint32 = function read_sint32() {\n    var value = this.uint32();\n    return value >>> 1 ^ -(value & 1) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readLongVarint() {\n    // tends to deopt with local vars for octet etc.\n    var bits = new LongBits(0, 0);\n    var i = 0;\n    if (this.len - this.pos > 4) { // fast route (lo)\n        for (; i < 4; ++i) {\n            // 1st..4th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 5th\n        bits.lo = (bits.lo | (this.buf[this.pos] & 127) << 28) >>> 0;\n        bits.hi = (bits.hi | (this.buf[this.pos] & 127) >>  4) >>> 0;\n        if (this.buf[this.pos++] < 128)\n            return bits;\n        i = 0;\n    } else {\n        for (; i < 3; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 1st..3th\n            bits.lo = (bits.lo | (this.buf[this.pos] & 127) << i * 7) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n        // 4th\n        bits.lo = (bits.lo | (this.buf[this.pos++] & 127) << i * 7) >>> 0;\n        return bits;\n    }\n    if (this.len - this.pos > 4) { // fast route (hi)\n        for (; i < 5; ++i) {\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    } else {\n        for (; i < 5; ++i) {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n            // 6th..10th\n            bits.hi = (bits.hi | (this.buf[this.pos] & 127) << i * 7 + 3) >>> 0;\n            if (this.buf[this.pos++] < 128)\n                return bits;\n        }\n    }\n    /* istanbul ignore next */\n    throw Error(\"invalid varint encoding\");\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads a varint as a signed 64 bit value.\n * @name Reader#int64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as an unsigned 64 bit value.\n * @name Reader#uint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a zig-zag encoded varint as a signed 64 bit value.\n * @name Reader#sint64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a varint as a boolean.\n * @returns {boolean} Value read\n */\nReader.prototype.bool = function read_bool() {\n    return this.uint32() !== 0;\n};\n\nfunction readFixed32_end(buf, end) { // note that this uses `end`, not `pos`\n    return (buf[end - 4]\n          | buf[end - 3] << 8\n          | buf[end - 2] << 16\n          | buf[end - 1] << 24) >>> 0;\n}\n\n/**\n * Reads fixed 32 bits as an unsigned 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.fixed32 = function read_fixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4);\n};\n\n/**\n * Reads fixed 32 bits as a signed 32 bit integer.\n * @returns {number} Value read\n */\nReader.prototype.sfixed32 = function read_sfixed32() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    return readFixed32_end(this.buf, this.pos += 4) | 0;\n};\n\n/* eslint-disable no-invalid-this */\n\nfunction readFixed64(/* this: Reader */) {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 8);\n\n    return new LongBits(readFixed32_end(this.buf, this.pos += 4), readFixed32_end(this.buf, this.pos += 4));\n}\n\n/* eslint-enable no-invalid-this */\n\n/**\n * Reads fixed 64 bits.\n * @name Reader#fixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads zig-zag encoded fixed 64 bits.\n * @name Reader#sfixed64\n * @function\n * @returns {Long} Value read\n */\n\n/**\n * Reads a float (32 bit) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.float = function read_float() {\n\n    /* istanbul ignore if */\n    if (this.pos + 4 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readFloatLE(this.buf, this.pos);\n    this.pos += 4;\n    return value;\n};\n\n/**\n * Reads a double (64 bit float) as a number.\n * @function\n * @returns {number} Value read\n */\nReader.prototype.double = function read_double() {\n\n    /* istanbul ignore if */\n    if (this.pos + 8 > this.len)\n        throw indexOutOfRange(this, 4);\n\n    var value = util.float.readDoubleLE(this.buf, this.pos);\n    this.pos += 8;\n    return value;\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @returns {Uint8Array} Value read\n */\nReader.prototype.bytes = function read_bytes() {\n    var length = this.uint32(),\n        start  = this.pos,\n        end    = this.pos + length;\n\n    /* istanbul ignore if */\n    if (end > this.len)\n        throw indexOutOfRange(this, length);\n\n    this.pos += length;\n    if (Array.isArray(this.buf)) // plain array\n        return this.buf.slice(start, end);\n    return start === end // fix for IE 10/Win8 and others' subarray returning array of size 1\n        ? new this.buf.constructor(0)\n        : this._slice.call(this.buf, start, end);\n};\n\n/**\n * Reads a string preceeded by its byte length as a varint.\n * @returns {string} Value read\n */\nReader.prototype.string = function read_string() {\n    var bytes = this.bytes();\n    return utf8.read(bytes, 0, bytes.length);\n};\n\n/**\n * Skips the specified number of bytes if specified, otherwise skips a varint.\n * @param {number} [length] Length if known, otherwise a varint is assumed\n * @returns {Reader} `this`\n */\nReader.prototype.skip = function skip(length) {\n    if (typeof length === \"number\") {\n        /* istanbul ignore if */\n        if (this.pos + length > this.len)\n            throw indexOutOfRange(this, length);\n        this.pos += length;\n    } else {\n        do {\n            /* istanbul ignore if */\n            if (this.pos >= this.len)\n                throw indexOutOfRange(this);\n        } while (this.buf[this.pos++] & 128);\n    }\n    return this;\n};\n\n/**\n * Skips the next element of the specified wire type.\n * @param {number} wireType Wire type received\n * @returns {Reader} `this`\n */\nReader.prototype.skipType = function(wireType) {\n    switch (wireType) {\n        case 0:\n            this.skip();\n            break;\n        case 1:\n            this.skip(8);\n            break;\n        case 2:\n            this.skip(this.uint32());\n            break;\n        case 3:\n            while ((wireType = this.uint32() & 7) !== 4) {\n                this.skipType(wireType);\n            }\n            break;\n        case 5:\n            this.skip(4);\n            break;\n\n        /* istanbul ignore next */\n        default:\n            throw Error(\"invalid wire type \" + wireType + \" at offset \" + this.pos);\n    }\n    return this;\n};\n\nReader._configure = function(BufferReader_) {\n    BufferReader = BufferReader_;\n    Reader.create = create();\n    BufferReader._configure();\n\n    var fn = util.Long ? \"toLong\" : /* istanbul ignore next */ \"toNumber\";\n    util.merge(Reader.prototype, {\n\n        int64: function read_int64() {\n            return readLongVarint.call(this)[fn](false);\n        },\n\n        uint64: function read_uint64() {\n            return readLongVarint.call(this)[fn](true);\n        },\n\n        sint64: function read_sint64() {\n            return readLongVarint.call(this).zzDecode()[fn](false);\n        },\n\n        fixed64: function read_fixed64() {\n            return readFixed64.call(this)[fn](true);\n        },\n\n        sfixed64: function read_sfixed64() {\n            return readFixed64.call(this)[fn](false);\n        }\n\n    });\n};\n","'use strict'\n\nconst {\n  PBNode\n} = require('./dag')\nconst DAGLink = require('./dag-link/dagLink')\nconst DAGNode = require('./dag-node/dagNode')\nconst { serializeDAGNode, serializeDAGNodeLike } = require('./serialize')\nconst genCid = require('./genCid')\n\n/**\n * @typedef {import('./types').DAGLinkLike} DAGLinkLike\n */\n\n/**\n * Calculate the CID of the binary blob\n *\n * @param {Uint8Array} binaryBlob - Encoded IPLD Node\n * @param {import('./genCid').GenCIDOptions} [userOptions] - Options to create the CID\n */\nconst cid = (binaryBlob, userOptions) => {\n  return genCid.cid(binaryBlob, userOptions)\n}\n\n/**\n * Serialize internal representation into a binary PB block\n *\n * @param {DAGNode | { Data?: Uint8Array, Links?: (DAGLink | DAGLinkLike)[]}} node\n */\nconst serialize = (node) => {\n  if (node instanceof DAGNode) {\n    return serializeDAGNode(node)\n  } else {\n    return serializeDAGNodeLike(node.Data, node.Links)\n  }\n}\n\n/**\n * Deserialize PB block into the internal representation.\n *\n * @param {Uint8Array} buffer - Binary representation of a PB block\n */\nconst deserialize = (buffer) => {\n  const message = PBNode.decode(buffer)\n  const pbn = PBNode.toObject(message, {\n    defaults: false,\n    arrays: true,\n    longs: Number,\n    objects: false\n  })\n\n  /** @type {DAGLink[]} */\n  const links = pbn.Links.map((/** @type {DAGLinkLike} */ link) => {\n    // @ts-ignore\n    return new DAGLink(link.Name, link.Tsize, link.Hash)\n  })\n\n  const data = pbn.Data == null ? new Uint8Array(0) : pbn.Data\n\n  return new DAGNode(data, links, buffer.byteLength)\n}\n\nmodule.exports = {\n  codec: genCid.codec,\n  defaultHashAlg: genCid.defaultHashAlg,\n  serialize,\n  deserialize,\n  cid\n}\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"default\"] || ($protobuf.roots[\"default\"] = {});\n\n$root.PBLink = (function() {\n\n    /**\n     * Properties of a PBLink.\n     * @exports IPBLink\n     * @interface IPBLink\n     * @property {Uint8Array|null} [Hash] PBLink Hash\n     * @property {string|null} [Name] PBLink Name\n     * @property {number|null} [Tsize] PBLink Tsize\n     */\n\n    /**\n     * Constructs a new PBLink.\n     * @exports PBLink\n     * @classdesc Represents a PBLink.\n     * @implements IPBLink\n     * @constructor\n     * @param {IPBLink=} [p] Properties to set\n     */\n    function PBLink(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * PBLink Hash.\n     * @member {Uint8Array} Hash\n     * @memberof PBLink\n     * @instance\n     */\n    PBLink.prototype.Hash = $util.newBuffer([]);\n\n    /**\n     * PBLink Name.\n     * @member {string} Name\n     * @memberof PBLink\n     * @instance\n     */\n    PBLink.prototype.Name = \"\";\n\n    /**\n     * PBLink Tsize.\n     * @member {number} Tsize\n     * @memberof PBLink\n     * @instance\n     */\n    PBLink.prototype.Tsize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Encodes the specified PBLink message. Does not implicitly {@link PBLink.verify|verify} messages.\n     * @function encode\n     * @memberof PBLink\n     * @static\n     * @param {IPBLink} m PBLink message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    PBLink.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.Hash != null && Object.hasOwnProperty.call(m, \"Hash\"))\n            w.uint32(10).bytes(m.Hash);\n        if (m.Name != null && Object.hasOwnProperty.call(m, \"Name\"))\n            w.uint32(18).string(m.Name);\n        if (m.Tsize != null && Object.hasOwnProperty.call(m, \"Tsize\"))\n            w.uint32(24).uint64(m.Tsize);\n        return w;\n    };\n\n    /**\n     * Decodes a PBLink message from the specified reader or buffer.\n     * @function decode\n     * @memberof PBLink\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {PBLink} PBLink\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    PBLink.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.PBLink();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Hash = r.bytes();\n                break;\n            case 2:\n                m.Name = r.string();\n                break;\n            case 3:\n                m.Tsize = r.uint64();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a PBLink message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof PBLink\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {PBLink} PBLink\n     */\n    PBLink.fromObject = function fromObject(d) {\n        if (d instanceof $root.PBLink)\n            return d;\n        var m = new $root.PBLink();\n        if (d.Hash != null) {\n            if (typeof d.Hash === \"string\")\n                $util.base64.decode(d.Hash, m.Hash = $util.newBuffer($util.base64.length(d.Hash)), 0);\n            else if (d.Hash.length)\n                m.Hash = d.Hash;\n        }\n        if (d.Name != null) {\n            m.Name = String(d.Name);\n        }\n        if (d.Tsize != null) {\n            if ($util.Long)\n                (m.Tsize = $util.Long.fromValue(d.Tsize)).unsigned = true;\n            else if (typeof d.Tsize === \"string\")\n                m.Tsize = parseInt(d.Tsize, 10);\n            else if (typeof d.Tsize === \"number\")\n                m.Tsize = d.Tsize;\n            else if (typeof d.Tsize === \"object\")\n                m.Tsize = new $util.LongBits(d.Tsize.low >>> 0, d.Tsize.high >>> 0).toNumber(true);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a PBLink message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof PBLink\n     * @static\n     * @param {PBLink} m PBLink\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    PBLink.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.Hash = \"\";\n            else {\n                d.Hash = [];\n                if (o.bytes !== Array)\n                    d.Hash = $util.newBuffer(d.Hash);\n            }\n            d.Name = \"\";\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.Tsize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Tsize = o.longs === String ? \"0\" : 0;\n        }\n        if (m.Hash != null && m.hasOwnProperty(\"Hash\")) {\n            d.Hash = o.bytes === String ? $util.base64.encode(m.Hash, 0, m.Hash.length) : o.bytes === Array ? Array.prototype.slice.call(m.Hash) : m.Hash;\n        }\n        if (m.Name != null && m.hasOwnProperty(\"Name\")) {\n            d.Name = m.Name;\n        }\n        if (m.Tsize != null && m.hasOwnProperty(\"Tsize\")) {\n            if (typeof m.Tsize === \"number\")\n                d.Tsize = o.longs === String ? String(m.Tsize) : m.Tsize;\n            else\n                d.Tsize = o.longs === String ? $util.Long.prototype.toString.call(m.Tsize) : o.longs === Number ? new $util.LongBits(m.Tsize.low >>> 0, m.Tsize.high >>> 0).toNumber(true) : m.Tsize;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this PBLink to JSON.\n     * @function toJSON\n     * @memberof PBLink\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    PBLink.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return PBLink;\n})();\n\n$root.PBNode = (function() {\n\n    /**\n     * Properties of a PBNode.\n     * @exports IPBNode\n     * @interface IPBNode\n     * @property {Array.<IPBLink>|null} [Links] PBNode Links\n     * @property {Uint8Array|null} [Data] PBNode Data\n     */\n\n    /**\n     * Constructs a new PBNode.\n     * @exports PBNode\n     * @classdesc Represents a PBNode.\n     * @implements IPBNode\n     * @constructor\n     * @param {IPBNode=} [p] Properties to set\n     */\n    function PBNode(p) {\n        this.Links = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * PBNode Links.\n     * @member {Array.<IPBLink>} Links\n     * @memberof PBNode\n     * @instance\n     */\n    PBNode.prototype.Links = $util.emptyArray;\n\n    /**\n     * PBNode Data.\n     * @member {Uint8Array} Data\n     * @memberof PBNode\n     * @instance\n     */\n    PBNode.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Encodes the specified PBNode message. Does not implicitly {@link PBNode.verify|verify} messages.\n     * @function encode\n     * @memberof PBNode\n     * @static\n     * @param {IPBNode} m PBNode message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    PBNode.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(10).bytes(m.Data);\n        if (m.Links != null && m.Links.length) {\n            for (var i = 0; i < m.Links.length; ++i)\n                $root.PBLink.encode(m.Links[i], w.uint32(18).fork()).ldelim();\n        }\n        return w;\n    };\n\n    /**\n     * Decodes a PBNode message from the specified reader or buffer.\n     * @function decode\n     * @memberof PBNode\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {PBNode} PBNode\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    PBNode.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.PBNode();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 2:\n                if (!(m.Links && m.Links.length))\n                    m.Links = [];\n                m.Links.push($root.PBLink.decode(r, r.uint32()));\n                break;\n            case 1:\n                m.Data = r.bytes();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a PBNode message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof PBNode\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {PBNode} PBNode\n     */\n    PBNode.fromObject = function fromObject(d) {\n        if (d instanceof $root.PBNode)\n            return d;\n        var m = new $root.PBNode();\n        if (d.Links) {\n            if (!Array.isArray(d.Links))\n                throw TypeError(\".PBNode.Links: array expected\");\n            m.Links = [];\n            for (var i = 0; i < d.Links.length; ++i) {\n                if (typeof d.Links[i] !== \"object\")\n                    throw TypeError(\".PBNode.Links: object expected\");\n                m.Links[i] = $root.PBLink.fromObject(d.Links[i]);\n            }\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a PBNode message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof PBNode\n     * @static\n     * @param {PBNode} m PBNode\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    PBNode.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.Links = [];\n        }\n        if (o.defaults) {\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.Links && m.Links.length) {\n            d.Links = [];\n            for (var j = 0; j < m.Links.length; ++j) {\n                d.Links[j] = $root.PBLink.toObject(m.Links[j], o);\n            }\n        }\n        return d;\n    };\n\n    /**\n     * Converts this PBNode to JSON.\n     * @function toJSON\n     * @memberof PBNode\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    PBNode.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return PBNode;\n})();\n\nmodule.exports = $root;\n","  'use strict'\n\nconst { bases } = require('multiformats/basics')\n\n/**\n * @typedef {import('multiformats/bases/interface').MultibaseCodec<any>} MultibaseCodec\n */\n\n/**\n * @param {string} name\n * @param {string} prefix\n * @param {(buf: Uint8Array) => string} encode\n * @param {(str: string) => Uint8Array} decode\n * @returns {MultibaseCodec}\n */\nfunction createCodec (name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: {\n      decode\n    }\n  }\n}\n\nconst string = createCodec('utf8', 'u', (buf) => {\n  const decoder = new TextDecoder('utf8')\n  return 'u' + decoder.decode(buf)\n}, (str) => {\n  const encoder = new TextEncoder()\n  return encoder.encode(str.substring(1))\n})\n\nconst ascii = createCodec('ascii', 'a', (buf) => {\n  let string = 'a'\n\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i])\n  }\n  return string\n}, (str) => {\n  str = str.substring(1)\n  const buf = new Uint8Array(str.length)\n\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i)\n  }\n\n  return buf\n})\n\n/**\n * @typedef {'utf8' | 'utf-8' | 'hex' | 'latin1' | 'ascii' | 'binary' | keyof bases } SupportedEncodings\n */\n\n/**\n * @type {Record<SupportedEncodings, MultibaseCodec>}\n */\nconst BASES = {\n  'utf8': string,\n  'utf-8': string,\n  'hex': bases.base16,\n  'latin1': ascii,\n  'ascii': ascii,\n  'binary': ascii,\n\n  ...bases\n}\n\nmodule.exports = BASES\n","'use strict'\n\nconst sortLinks = require('./sortLinks')\nconst DAGLink = require('../dag-link/dagLink')\nconst { createDagLinkFromB58EncodedHash } = require('../dag-link/util')\nconst { serializeDAGNode } = require('../serialize')\nconst toDAGLink = require('./toDagLink')\nconst addLink = require('./addLink')\nconst rmLink = require('./rmLink')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\nconst uint8ArrayToString = require('uint8arrays/to-string')\n\n/**\n * @typedef {import('cids')} CID\n * @typedef {import('../types').DAGLinkLike} DAGLinkLike\n */\n\nclass DAGNode {\n  /**\n   *@param {Uint8Array | string} [data]\n   * @param {(DAGLink | DAGLinkLike)[]} links\n   * @param {number | null} [serializedSize]\n   */\n  constructor (data, links = [], serializedSize = null) {\n    if (!data) {\n      data = new Uint8Array(0)\n    }\n    if (typeof data === 'string') {\n      data = uint8ArrayFromString(data)\n    }\n\n    if (!(data instanceof Uint8Array)) {\n      throw new Error('Passed \\'data\\' is not a Uint8Array or a String!')\n    }\n\n    if (serializedSize !== null && typeof serializedSize !== 'number') {\n      throw new Error('Passed \\'serializedSize\\' must be a number!')\n    }\n\n    const sortedLinks = links.map((link) => {\n      return link instanceof DAGLink\n        ? link\n        : createDagLinkFromB58EncodedHash(link)\n    })\n    sortLinks(sortedLinks)\n\n    this.Data = data\n    this.Links = sortedLinks\n\n    Object.defineProperties(this, {\n      _serializedSize: { value: serializedSize, writable: true, enumerable: false },\n      _size: { value: null, writable: true, enumerable: false }\n    })\n  }\n\n  toJSON () {\n    if (!this._json) {\n      this._json = Object.freeze({\n        data: this.Data,\n        links: this.Links.map((l) => l.toJSON()),\n        size: this.size\n      })\n    }\n\n    return Object.assign({}, this._json)\n  }\n\n  toString () {\n    return `DAGNode <data: \"${uint8ArrayToString(this.Data, 'base64urlpad')}\", links: ${this.Links.length}, size: ${this.size}>`\n  }\n\n  _invalidateCached () {\n    this._serializedSize = null\n    this._size = null\n  }\n\n  /**\n   * @param {DAGLink | import('../types').DAGLinkLike} link\n   */\n  addLink (link) {\n    this._invalidateCached()\n    return addLink(this, link)\n  }\n\n  /**\n   * @param {DAGLink | string | CID} link\n   */\n  rmLink (link) {\n    this._invalidateCached()\n    return rmLink(this, link)\n  }\n\n  /**\n   * @param {import('./toDagLink').ToDagLinkOptions} [options]\n   */\n  toDAGLink (options) {\n    return toDAGLink(this, options)\n  }\n\n  serialize () {\n    const buf = serializeDAGNode(this)\n\n    this._serializedSize = buf.length\n\n    return buf\n  }\n\n  get size () {\n    if (this._size == null) {\n      let serializedSize\n\n      if (serializedSize == null) {\n        this._serializedSize = this.serialize().length\n        serializedSize = this._serializedSize\n      }\n\n      this._size = this.Links.reduce((sum, l) => sum + l.Tsize, serializedSize)\n    }\n\n    return this._size\n  }\n\n  set size (size) {\n    throw new Error(\"Can't set property: 'size' is immutable\")\n  }\n}\n\nmodule.exports = DAGNode\n","'use strict'\n\nconst sort = require('stable')\nconst uint8ArrayCompare = require('uint8arrays/compare')\n\n/**\n * @typedef {import('../dag-link/dagLink')} DAGLink\n */\n\n/**\n *\n * @param {DAGLink} a\n * @param {DAGLink} b\n */\nconst linkSort = (a, b) => {\n  const buf1 = a.nameAsBuffer\n  const buf2 = b.nameAsBuffer\n\n  return uint8ArrayCompare(buf1, buf2)\n}\n\n/**\n * Sorts links in place (mutating given array)\n *\n * @param {DAGLink[]} links\n * @returns {void}\n */\nconst sortLinks = (links) => {\n  sort.inplace(links, linkSort)\n}\n\nmodule.exports = sortLinks\n","'use strict'\n\nconst DAGLink = require('./dagLink')\n\n/**\n * @param {*} link\n */\nfunction createDagLinkFromB58EncodedHash (link) {\n  return new DAGLink(\n    link.Name || link.name || '',\n    link.Tsize || link.Size || link.size || 0,\n    link.Hash || link.hash || link.multihash || link.cid\n  )\n}\n\nmodule.exports = {\n  createDagLinkFromB58EncodedHash\n}\n","'use strict'\n\nconst protobuf = require('protobufjs/minimal')\nconst {\n  PBLink\n} = require('./dag')\n\nconst {\n  createDagLinkFromB58EncodedHash\n} = require('./dag-link/util')\n\n/**\n * @typedef {import('./dag-link/dagLink')} DAGLink\n * @typedef {import('./types').DAGLinkLike} DAGLinkLike\n * @typedef {import('./types').SerializableDAGNode} SerializableDAGNode\n * @typedef {import('cids')} CID\n */\n\n/**\n * @param { { Data?: Uint8Array, Links: (DAGLink | DAGLinkLike)[] }} node\n * @returns {SerializableDAGNode}\n */\nconst toProtoBuf = (node) => {\n  const pbn = {}\n\n  if (node.Data && node.Data.byteLength > 0) {\n    pbn.Data = node.Data\n  } else {\n    // NOTE: this has to be null in order to match go-ipfs serialization\n    // `null !== new Uint8Array(0)`\n    pbn.Data = null\n  }\n\n  if (node.Links && node.Links.length > 0) {\n    pbn.Links = node.Links\n      .map((link) => ({\n        Hash: link.Hash.bytes,\n        Name: link.Name,\n        Tsize: link.Tsize\n      }))\n  } else {\n    pbn.Links = null\n  }\n\n  return pbn\n}\n\n/**\n * Serialize internal representation into a binary PB block.\n *\n * @param {import('./dag-node/dagNode')} node - Internal representation of a PB block\n */\nconst serializeDAGNode = (node) => {\n  return encode(toProtoBuf(node))\n}\n\n/**\n * Serialize an object where the `Links` might not be a `DAGLink` instance yet\n *\n * @param {Uint8Array} [data]\n * @param {(DAGLink | string | DAGLinkLike)[]} [links]\n */\nconst serializeDAGNodeLike = (data, links = []) => {\n  const node = {\n    Data: data,\n    Links: links.map((link) => {\n      return createDagLinkFromB58EncodedHash(link)\n    })\n  }\n\n  return encode(toProtoBuf(node))\n}\n\nmodule.exports = {\n  serializeDAGNode,\n  serializeDAGNodeLike\n}\n\n/**\n * The fields in PBNode are the wrong way round - `id: 2` comes before\n * `id: 1`. protobufjs writes them out in id order but go-IPFS does not so\n * we have to use the protobuf.Writer interface directly to get the same\n * serialized form as go-IPFS\n *\n * @param {SerializableDAGNode} pbf\n */\nfunction encode (pbf) {\n  const writer = protobuf.Writer.create()\n\n  if (pbf.Links != null) {\n    for (let i = 0; i < pbf.Links.length; i++) {\n      PBLink.encode(pbf.Links[i], writer.uint32(18).fork()).ldelim()\n    }\n  }\n\n  if (pbf.Data != null) {\n    writer.uint32(10).bytes(pbf.Data)\n  }\n\n  return writer.finish()\n}\n","'use strict'\n\nconst CID = require('cids')\nconst multicodec = require('multicodec')\nconst multihashing = require('multihashing-async')\nconst { multihash } = multihashing\n\nconst codec = multicodec.DAG_PB\nconst defaultHashAlg = multihash.names['sha2-256']\n\n/**\n * @typedef {object} GenCIDOptions - Options to create the CID\n * @property {CID.CIDVersion} [cidVersion=1] - CID version number\n * @property {multihashing.multihash.HashCode} [hashAlg=multihash.names['sha2-256']] - Defaults to the defaultHashAlg of the format\n */\n\n/**\n * Calculate the CID of the binary blob.\n *\n * @param {Uint8Array} binaryBlob - Encoded IPLD Node\n * @param {GenCIDOptions} [userOptions] - Options to create the CID\n */\nconst cid = async (binaryBlob, userOptions = {}) => {\n  const options = {\n    cidVersion: userOptions.cidVersion == null ? 1 : userOptions.cidVersion,\n    hashAlg: userOptions.hashAlg == null ? defaultHashAlg : userOptions.hashAlg\n  }\n\n  const hashName = multihash.codes[options.hashAlg]\n  const hash = await multihashing(binaryBlob, hashName)\n  const codecName = multicodec.getNameFromCode(codec)\n  const cid = new CID(options.cidVersion, codecName, hash)\n\n  return cid\n}\n\nmodule.exports = {\n  codec,\n  defaultHashAlg,\n  cid\n}\n","'use strict'\n\nconst { Buffer } = require('buffer')\nconst symbol = Symbol.for('BufferList')\n\nfunction BufferList (buf) {\n  if (!(this instanceof BufferList)) {\n    return new BufferList(buf)\n  }\n\n  BufferList._init.call(this, buf)\n}\n\nBufferList._init = function _init (buf) {\n  Object.defineProperty(this, symbol, { value: true })\n\n  this._bufs = []\n  this.length = 0\n\n  if (buf) {\n    this.append(buf)\n  }\n}\n\nBufferList.prototype._new = function _new (buf) {\n  return new BufferList(buf)\n}\n\nBufferList.prototype._offset = function _offset (offset) {\n  if (offset === 0) {\n    return [0, 0]\n  }\n\n  let tot = 0\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    const _t = tot + this._bufs[i].length\n    if (offset < _t || i === this._bufs.length - 1) {\n      return [i, offset - tot]\n    }\n    tot = _t\n  }\n}\n\nBufferList.prototype._reverseOffset = function (blOffset) {\n  const bufferId = blOffset[0]\n  let offset = blOffset[1]\n\n  for (let i = 0; i < bufferId; i++) {\n    offset += this._bufs[i].length\n  }\n\n  return offset\n}\n\nBufferList.prototype.get = function get (index) {\n  if (index > this.length || index < 0) {\n    return undefined\n  }\n\n  const offset = this._offset(index)\n\n  return this._bufs[offset[0]][offset[1]]\n}\n\nBufferList.prototype.slice = function slice (start, end) {\n  if (typeof start === 'number' && start < 0) {\n    start += this.length\n  }\n\n  if (typeof end === 'number' && end < 0) {\n    end += this.length\n  }\n\n  return this.copy(null, 0, start, end)\n}\n\nBufferList.prototype.copy = function copy (dst, dstStart, srcStart, srcEnd) {\n  if (typeof srcStart !== 'number' || srcStart < 0) {\n    srcStart = 0\n  }\n\n  if (typeof srcEnd !== 'number' || srcEnd > this.length) {\n    srcEnd = this.length\n  }\n\n  if (srcStart >= this.length) {\n    return dst || Buffer.alloc(0)\n  }\n\n  if (srcEnd <= 0) {\n    return dst || Buffer.alloc(0)\n  }\n\n  const copy = !!dst\n  const off = this._offset(srcStart)\n  const len = srcEnd - srcStart\n  let bytes = len\n  let bufoff = (copy && dstStart) || 0\n  let start = off[1]\n\n  // copy/slice everything\n  if (srcStart === 0 && srcEnd === this.length) {\n    if (!copy) {\n      // slice, but full concat if multiple buffers\n      return this._bufs.length === 1\n        ? this._bufs[0]\n        : Buffer.concat(this._bufs, this.length)\n    }\n\n    // copy, need to copy individual buffers\n    for (let i = 0; i < this._bufs.length; i++) {\n      this._bufs[i].copy(dst, bufoff)\n      bufoff += this._bufs[i].length\n    }\n\n    return dst\n  }\n\n  // easy, cheap case where it's a subset of one of the buffers\n  if (bytes <= this._bufs[off[0]].length - start) {\n    return copy\n      ? this._bufs[off[0]].copy(dst, dstStart, start, start + bytes)\n      : this._bufs[off[0]].slice(start, start + bytes)\n  }\n\n  if (!copy) {\n    // a slice, we need something to copy in to\n    dst = Buffer.allocUnsafe(len)\n  }\n\n  for (let i = off[0]; i < this._bufs.length; i++) {\n    const l = this._bufs[i].length - start\n\n    if (bytes > l) {\n      this._bufs[i].copy(dst, bufoff, start)\n      bufoff += l\n    } else {\n      this._bufs[i].copy(dst, bufoff, start, start + bytes)\n      bufoff += l\n      break\n    }\n\n    bytes -= l\n\n    if (start) {\n      start = 0\n    }\n  }\n\n  // safeguard so that we don't return uninitialized memory\n  if (dst.length > bufoff) return dst.slice(0, bufoff)\n\n  return dst\n}\n\nBufferList.prototype.shallowSlice = function shallowSlice (start, end) {\n  start = start || 0\n  end = typeof end !== 'number' ? this.length : end\n\n  if (start < 0) {\n    start += this.length\n  }\n\n  if (end < 0) {\n    end += this.length\n  }\n\n  if (start === end) {\n    return this._new()\n  }\n\n  const startOffset = this._offset(start)\n  const endOffset = this._offset(end)\n  const buffers = this._bufs.slice(startOffset[0], endOffset[0] + 1)\n\n  if (endOffset[1] === 0) {\n    buffers.pop()\n  } else {\n    buffers[buffers.length - 1] = buffers[buffers.length - 1].slice(0, endOffset[1])\n  }\n\n  if (startOffset[1] !== 0) {\n    buffers[0] = buffers[0].slice(startOffset[1])\n  }\n\n  return this._new(buffers)\n}\n\nBufferList.prototype.toString = function toString (encoding, start, end) {\n  return this.slice(start, end).toString(encoding)\n}\n\nBufferList.prototype.consume = function consume (bytes) {\n  // first, normalize the argument, in accordance with how Buffer does it\n  bytes = Math.trunc(bytes)\n  // do nothing if not a positive number\n  if (Number.isNaN(bytes) || bytes <= 0) return this\n\n  while (this._bufs.length) {\n    if (bytes >= this._bufs[0].length) {\n      bytes -= this._bufs[0].length\n      this.length -= this._bufs[0].length\n      this._bufs.shift()\n    } else {\n      this._bufs[0] = this._bufs[0].slice(bytes)\n      this.length -= bytes\n      break\n    }\n  }\n\n  return this\n}\n\nBufferList.prototype.duplicate = function duplicate () {\n  const copy = this._new()\n\n  for (let i = 0; i < this._bufs.length; i++) {\n    copy.append(this._bufs[i])\n  }\n\n  return copy\n}\n\nBufferList.prototype.append = function append (buf) {\n  if (buf == null) {\n    return this\n  }\n\n  if (buf.buffer) {\n    // append a view of the underlying ArrayBuffer\n    this._appendBuffer(Buffer.from(buf.buffer, buf.byteOffset, buf.byteLength))\n  } else if (Array.isArray(buf)) {\n    for (let i = 0; i < buf.length; i++) {\n      this.append(buf[i])\n    }\n  } else if (this._isBufferList(buf)) {\n    // unwrap argument into individual BufferLists\n    for (let i = 0; i < buf._bufs.length; i++) {\n      this.append(buf._bufs[i])\n    }\n  } else {\n    // coerce number arguments to strings, since Buffer(number) does\n    // uninitialized memory allocation\n    if (typeof buf === 'number') {\n      buf = buf.toString()\n    }\n\n    this._appendBuffer(Buffer.from(buf))\n  }\n\n  return this\n}\n\nBufferList.prototype._appendBuffer = function appendBuffer (buf) {\n  this._bufs.push(buf)\n  this.length += buf.length\n}\n\nBufferList.prototype.indexOf = function (search, offset, encoding) {\n  if (encoding === undefined && typeof offset === 'string') {\n    encoding = offset\n    offset = undefined\n  }\n\n  if (typeof search === 'function' || Array.isArray(search)) {\n    throw new TypeError('The \"value\" argument must be one of type string, Buffer, BufferList, or Uint8Array.')\n  } else if (typeof search === 'number') {\n    search = Buffer.from([search])\n  } else if (typeof search === 'string') {\n    search = Buffer.from(search, encoding)\n  } else if (this._isBufferList(search)) {\n    search = search.slice()\n  } else if (Array.isArray(search.buffer)) {\n    search = Buffer.from(search.buffer, search.byteOffset, search.byteLength)\n  } else if (!Buffer.isBuffer(search)) {\n    search = Buffer.from(search)\n  }\n\n  offset = Number(offset || 0)\n\n  if (isNaN(offset)) {\n    offset = 0\n  }\n\n  if (offset < 0) {\n    offset = this.length + offset\n  }\n\n  if (offset < 0) {\n    offset = 0\n  }\n\n  if (search.length === 0) {\n    return offset > this.length ? this.length : offset\n  }\n\n  const blOffset = this._offset(offset)\n  let blIndex = blOffset[0] // index of which internal buffer we're working on\n  let buffOffset = blOffset[1] // offset of the internal buffer we're working on\n\n  // scan over each buffer\n  for (; blIndex < this._bufs.length; blIndex++) {\n    const buff = this._bufs[blIndex]\n\n    while (buffOffset < buff.length) {\n      const availableWindow = buff.length - buffOffset\n\n      if (availableWindow >= search.length) {\n        const nativeSearchResult = buff.indexOf(search, buffOffset)\n\n        if (nativeSearchResult !== -1) {\n          return this._reverseOffset([blIndex, nativeSearchResult])\n        }\n\n        buffOffset = buff.length - search.length + 1 // end of native search window\n      } else {\n        const revOffset = this._reverseOffset([blIndex, buffOffset])\n\n        if (this._match(revOffset, search)) {\n          return revOffset\n        }\n\n        buffOffset++\n      }\n    }\n\n    buffOffset = 0\n  }\n\n  return -1\n}\n\nBufferList.prototype._match = function (offset, search) {\n  if (this.length - offset < search.length) {\n    return false\n  }\n\n  for (let searchOffset = 0; searchOffset < search.length; searchOffset++) {\n    if (this.get(offset + searchOffset) !== search[searchOffset]) {\n      return false\n    }\n  }\n  return true\n}\n\n;(function () {\n  const methods = {\n    readDoubleBE: 8,\n    readDoubleLE: 8,\n    readFloatBE: 4,\n    readFloatLE: 4,\n    readInt32BE: 4,\n    readInt32LE: 4,\n    readUInt32BE: 4,\n    readUInt32LE: 4,\n    readInt16BE: 2,\n    readInt16LE: 2,\n    readUInt16BE: 2,\n    readUInt16LE: 2,\n    readInt8: 1,\n    readUInt8: 1,\n    readIntBE: null,\n    readIntLE: null,\n    readUIntBE: null,\n    readUIntLE: null\n  }\n\n  for (const m in methods) {\n    (function (m) {\n      if (methods[m] === null) {\n        BufferList.prototype[m] = function (offset, byteLength) {\n          return this.slice(offset, offset + byteLength)[m](0, byteLength)\n        }\n      } else {\n        BufferList.prototype[m] = function (offset = 0) {\n          return this.slice(offset, offset + methods[m])[m](0)\n        }\n      }\n    }(m))\n  }\n}())\n\n// Used internally by the class and also as an indicator of this object being\n// a `BufferList`. It's not possible to use `instanceof BufferList` in a browser\n// environment because there could be multiple different copies of the\n// BufferList class and some `BufferList`s might be `BufferList`s.\nBufferList.prototype._isBufferList = function _isBufferList (b) {\n  return b instanceof BufferList || BufferList.isBufferList(b)\n}\n\nBufferList.isBufferList = function isBufferList (b) {\n  return b != null && b[symbol]\n}\n\nmodule.exports = BufferList\n","'use strict'\n\nconst {\n  DAGLink,\n  DAGNode\n} = require('ipld-dag-pb')\nconst { UnixFS } = require('ipfs-unixfs')\nconst Dir = require('./dir')\nconst persist = require('./utils/persist')\n\n/**\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('./types').BlockAPI} BlockAPI\n * @typedef {import('./dir').DirProps} DirProps\n * @typedef {import('cids')} CID\n */\n\nclass DirFlat extends Dir {\n  /**\n   * @param {DirProps} props\n   * @param {ImporterOptions} options\n   */\n  constructor (props, options) {\n    super(props, options)\n\n    /** @type {{ [key: string]: InProgressImportResult | Dir }} */\n    this._children = {}\n  }\n\n  /**\n   * @param {string} name\n   * @param {InProgressImportResult | Dir} value\n   */\n  async put (name, value) {\n    this.cid = undefined\n    this.size = undefined\n\n    this._children[name] = value\n  }\n\n  /**\n   * @param {string} name\n   */\n  get (name) {\n    return Promise.resolve(this._children[name])\n  }\n\n  childCount () {\n    return Object.keys(this._children).length\n  }\n\n  directChildrenCount () {\n    return this.childCount()\n  }\n\n  onlyChild () {\n    return this._children[Object.keys(this._children)[0]]\n  }\n\n  async * eachChildSeries () {\n    const keys = Object.keys(this._children)\n\n    for (let i = 0; i < keys.length; i++) {\n      const key = keys[i]\n\n      yield {\n        key: key,\n        child: this._children[key]\n      }\n    }\n  }\n\n  /**\n   * @param {BlockAPI} block\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (block) {\n    const children = Object.keys(this._children)\n    const links = []\n\n    for (let i = 0; i < children.length; i++) {\n      let child = this._children[children[i]]\n\n      if (child instanceof Dir) {\n        for await (const entry of child.flush(block)) {\n          child = entry\n\n          yield child\n        }\n      }\n\n      if (child.size != null && child.cid) {\n        links.push(new DAGLink(children[i], child.size, child.cid))\n      }\n    }\n\n    const unixfs = new UnixFS({\n      type: 'directory',\n      mtime: this.mtime,\n      mode: this.mode\n    })\n\n    const node = new DAGNode(unixfs.marshal(), links)\n    const buffer = node.serialize()\n    const cid = await persist(buffer, block, this.options)\n    const size = buffer.length + node.Links.reduce(\n      /**\n       * @param {number} acc\n       * @param {DAGLink} curr\n       */\n      (acc, curr) => acc + curr.Tsize,\n      0)\n\n    this.cid = cid\n    this.size = size\n\n    yield {\n      cid,\n      unixfs,\n      path: this.path,\n      size\n    }\n  }\n}\n\nmodule.exports = DirFlat\n","'use strict'\n\nconst parallelBatch = require('it-parallel-batch')\nconst defaultOptions = require('./options')\n\n/**\n * @typedef {import('./types').BlockAPI} BlockAPI\n * @typedef {import('./types').ImportCandidate} ImportCandidate\n * @typedef {import('./types').UserImporterOptions} UserImporterOptions\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').Directory} Directory\n * @typedef {import('./types').File} File\n * @typedef {import('./types').ImportResult} ImportResult\n *\n * @typedef {import('./types').Chunker} Chunker\n * @typedef {import('./types').DAGBuilder} DAGBuilder\n * @typedef {import('./types').TreeBuilder} TreeBuilder\n * @typedef {import('./types').BufferImporter} BufferImporter\n * @typedef {import('./types').ChunkValidator} ChunkValidator\n * @typedef {import('./types').Reducer} Reducer\n * @typedef {import('./types').ProgressHandler} ProgressHandler\n */\n\n/**\n * @param {AsyncIterable<ImportCandidate> | Iterable<ImportCandidate> | ImportCandidate} source\n * @param {BlockAPI} block\n * @param {UserImporterOptions} options\n */\nasync function * importer (source, block, options = {}) {\n  const opts = defaultOptions(options)\n\n  let dagBuilder\n\n  if (typeof options.dagBuilder === 'function') {\n    dagBuilder = options.dagBuilder\n  } else {\n    dagBuilder = require('./dag-builder')\n  }\n\n  let treeBuilder\n\n  if (typeof options.treeBuilder === 'function') {\n    treeBuilder = options.treeBuilder\n  } else {\n    treeBuilder = require('./tree-builder')\n  }\n\n  /** @type {AsyncIterable<ImportCandidate> | Iterable<ImportCandidate>} */\n  let candidates\n\n  if (Symbol.asyncIterator in source || Symbol.iterator in source) {\n    // @ts-ignore\n    candidates = source\n  } else {\n    // @ts-ignore\n    candidates = [source]\n  }\n\n  for await (const entry of treeBuilder(parallelBatch(dagBuilder(candidates, block, opts), opts.fileImportConcurrency), block, opts)) {\n    yield {\n      cid: entry.cid,\n      path: entry.path,\n      unixfs: entry.unixfs,\n      size: entry.size\n    }\n  }\n}\n\nmodule.exports = {\n  importer\n}\n","var AwaitValue = require(\"./AwaitValue.js\");\n\nfunction AsyncGenerator(gen) {\n  var front, back;\n\n  function send(key, arg) {\n    return new Promise(function (resolve, reject) {\n      var request = {\n        key: key,\n        arg: arg,\n        resolve: resolve,\n        reject: reject,\n        next: null\n      };\n\n      if (back) {\n        back = back.next = request;\n      } else {\n        front = back = request;\n        resume(key, arg);\n      }\n    });\n  }\n\n  function resume(key, arg) {\n    try {\n      var result = gen[key](arg);\n      var value = result.value;\n      var wrappedAwait = value instanceof AwaitValue;\n      Promise.resolve(wrappedAwait ? value.wrapped : value).then(function (arg) {\n        if (wrappedAwait) {\n          resume(key === \"return\" ? \"return\" : \"next\", arg);\n          return;\n        }\n\n        settle(result.done ? \"return\" : \"normal\", arg);\n      }, function (err) {\n        resume(\"throw\", err);\n      });\n    } catch (err) {\n      settle(\"throw\", err);\n    }\n  }\n\n  function settle(type, value) {\n    switch (type) {\n      case \"return\":\n        front.resolve({\n          value: value,\n          done: true\n        });\n        break;\n\n      case \"throw\":\n        front.reject(value);\n        break;\n\n      default:\n        front.resolve({\n          value: value,\n          done: false\n        });\n        break;\n    }\n\n    front = front.next;\n\n    if (front) {\n      resume(front.key, front.arg);\n    } else {\n      back = null;\n    }\n  }\n\n  this._invoke = send;\n\n  if (typeof gen[\"return\"] !== \"function\") {\n    this[\"return\"] = undefined;\n  }\n}\n\nAsyncGenerator.prototype[typeof Symbol === \"function\" && Symbol.asyncIterator || \"@@asyncIterator\"] = function () {\n  return this;\n};\n\nAsyncGenerator.prototype.next = function (arg) {\n  return this._invoke(\"next\", arg);\n};\n\nAsyncGenerator.prototype[\"throw\"] = function (arg) {\n  return this._invoke(\"throw\", arg);\n};\n\nAsyncGenerator.prototype[\"return\"] = function (arg) {\n  return this._invoke(\"return\", arg);\n};\n\nmodule.exports = AsyncGenerator, module.exports.__esModule = true, module.exports[\"default\"] = module.exports;","'use strict'\n\nconst mergeOptions = require('merge-options').bind({ ignoreUndefined: true })\nconst multihashing = require('multihashing-async')\n\n/**\n * @param {Uint8Array} buf\n */\nasync function hamtHashFn (buf) {\n  const hash = await multihashing(buf, 'murmur3-128')\n\n  // Multihashing inserts preamble of 2 bytes. Remove it.\n  // Also, murmur3 outputs 128 bit but, accidentally, IPFS Go's\n  // implementation only uses the first 64, so we must do the same\n  // for parity..\n  const justHash = hash.slice(2, 10)\n  const length = justHash.length\n  const result = new Uint8Array(length)\n  // TODO: invert buffer because that's how Go impl does it\n  for (let i = 0; i < length; i++) {\n    result[length - i - 1] = justHash[i]\n  }\n\n  return result\n}\n\n/**\n * @typedef {import('./types').UserImporterOptions} UserImporterOptions\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n */\n\n/**\n * @type {ImporterOptions}\n */\nconst defaultOptions = {\n  chunker: 'fixed',\n  strategy: 'balanced', // 'flat', 'trickle'\n  rawLeaves: false,\n  onlyHash: false,\n  reduceSingleLeafToSelf: true,\n  hashAlg: 'sha2-256',\n  leafType: 'file', // 'raw'\n  cidVersion: 0,\n  progress: () => () => {},\n  shardSplitThreshold: 1000,\n  fileImportConcurrency: 50,\n  blockWriteConcurrency: 10,\n  minChunkSize: 262144,\n  maxChunkSize: 262144,\n  avgChunkSize: 262144,\n  window: 16,\n  // FIXME: This number is too big for JavaScript\n  // https://github.com/ipfs/go-ipfs-chunker/blob/d0125832512163708c0804a3cda060e21acddae4/rabin.go#L11\n  polynomial: 17437180132763653, // eslint-disable-line no-loss-of-precision\n  maxChildrenPerNode: 174,\n  layerRepeat: 4,\n  wrapWithDirectory: false,\n  pin: false,\n  recursive: false,\n  hidden: false,\n  preload: false,\n  timeout: undefined,\n  hamtHashFn,\n  hamtHashCode: 0x22,\n  hamtBucketBits: 8\n}\n\n/**\n * @param {UserImporterOptions} options\n * @returns {ImporterOptions}\n */\nmodule.exports = function (options = {}) {\n  return mergeOptions(defaultOptions, options)\n}\n","'use strict';\nconst isOptionObject = require('is-plain-obj');\n\nconst {hasOwnProperty} = Object.prototype;\nconst {propertyIsEnumerable} = Object;\nconst defineProperty = (object, name, value) => Object.defineProperty(object, name, {\n\tvalue,\n\twritable: true,\n\tenumerable: true,\n\tconfigurable: true\n});\n\nconst globalThis = this;\nconst defaultMergeOptions = {\n\tconcatArrays: false,\n\tignoreUndefined: false\n};\n\nconst getEnumerableOwnPropertyKeys = value => {\n\tconst keys = [];\n\n\tfor (const key in value) {\n\t\tif (hasOwnProperty.call(value, key)) {\n\t\t\tkeys.push(key);\n\t\t}\n\t}\n\n\t/* istanbul ignore else  */\n\tif (Object.getOwnPropertySymbols) {\n\t\tconst symbols = Object.getOwnPropertySymbols(value);\n\n\t\tfor (const symbol of symbols) {\n\t\t\tif (propertyIsEnumerable.call(value, symbol)) {\n\t\t\t\tkeys.push(symbol);\n\t\t\t}\n\t\t}\n\t}\n\n\treturn keys;\n};\n\nfunction clone(value) {\n\tif (Array.isArray(value)) {\n\t\treturn cloneArray(value);\n\t}\n\n\tif (isOptionObject(value)) {\n\t\treturn cloneOptionObject(value);\n\t}\n\n\treturn value;\n}\n\nfunction cloneArray(array) {\n\tconst result = array.slice(0, 0);\n\n\tgetEnumerableOwnPropertyKeys(array).forEach(key => {\n\t\tdefineProperty(result, key, clone(array[key]));\n\t});\n\n\treturn result;\n}\n\nfunction cloneOptionObject(object) {\n\tconst result = Object.getPrototypeOf(object) === null ? Object.create(null) : {};\n\n\tgetEnumerableOwnPropertyKeys(object).forEach(key => {\n\t\tdefineProperty(result, key, clone(object[key]));\n\t});\n\n\treturn result;\n}\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {string[]} keys keys to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nconst mergeKeys = (merged, source, keys, config) => {\n\tkeys.forEach(key => {\n\t\tif (typeof source[key] === 'undefined' && config.ignoreUndefined) {\n\t\t\treturn;\n\t\t}\n\n\t\t// Do not recurse into prototype chain of merged\n\t\tif (key in merged && merged[key] !== Object.getPrototypeOf(merged)) {\n\t\t\tdefineProperty(merged, key, merge(merged[key], source[key], config));\n\t\t} else {\n\t\t\tdefineProperty(merged, key, clone(source[key]));\n\t\t}\n\t});\n\n\treturn merged;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n *\n * see [Array.prototype.concat ( ...arguments )](http://www.ecma-international.org/ecma-262/6.0/#sec-array.prototype.concat)\n */\nconst concatArrays = (merged, source, config) => {\n\tlet result = merged.slice(0, 0);\n\tlet resultIndex = 0;\n\n\t[merged, source].forEach(array => {\n\t\tconst indices = [];\n\n\t\t// `result.concat(array)` with cloning\n\t\tfor (let k = 0; k < array.length; k++) {\n\t\t\tif (!hasOwnProperty.call(array, k)) {\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tindices.push(String(k));\n\n\t\t\tif (array === merged) {\n\t\t\t\t// Already cloned\n\t\t\t\tdefineProperty(result, resultIndex++, array[k]);\n\t\t\t} else {\n\t\t\t\tdefineProperty(result, resultIndex++, clone(array[k]));\n\t\t\t}\n\t\t}\n\n\t\t// Merge non-index keys\n\t\tresult = mergeKeys(result, array, getEnumerableOwnPropertyKeys(array).filter(key => !indices.includes(key)), config);\n\t});\n\n\treturn result;\n};\n\n/**\n * @param {*} merged already cloned\n * @param {*} source something to merge\n * @param {Object} config Config Object\n * @returns {*} cloned Object\n */\nfunction merge(merged, source, config) {\n\tif (config.concatArrays && Array.isArray(merged) && Array.isArray(source)) {\n\t\treturn concatArrays(merged, source, config);\n\t}\n\n\tif (!isOptionObject(source) || !isOptionObject(merged)) {\n\t\treturn clone(source);\n\t}\n\n\treturn mergeKeys(merged, source, getEnumerableOwnPropertyKeys(source), config);\n}\n\nmodule.exports = function (...options) {\n\tconst config = merge(clone(defaultMergeOptions), (this !== globalThis && this) || {}, defaultMergeOptions);\n\tlet merged = {_: {}};\n\n\tfor (const option of options) {\n\t\tif (option === undefined) {\n\t\t\tcontinue;\n\t\t}\n\n\t\tif (!isOptionObject(option)) {\n\t\t\tthrow new TypeError('`' + option + '` is not an Option Object');\n\t\t}\n\n\t\tmerged = merge(merged, {_: option}, config);\n\t}\n\n\treturn merged._;\n};\n","'use strict';\n\nmodule.exports = value => {\n\tif (Object.prototype.toString.call(value) !== '[object Object]') {\n\t\treturn false;\n\t}\n\n\tconst prototype = Object.getPrototypeOf(value);\n\treturn prototype === null || prototype === Object.prototype;\n};\n","'use strict'\n\nconst sha3 = require('js-sha3')\n// @ts-ignore - no types available\nconst mur = require('murmurhash3js-revisited')\nconst { factory: sha } = require('./sha')\nconst { fromNumberTo32BitBuf } = require('./utils')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\n\n// Note that although this function doesn't do any asynchronous work, we mark\n// the function as async because it must return a Promise to match the API\n// for other functions that do perform asynchronous work (see sha.browser.js)\n// eslint-disable-next-line\n/**\n * @param {string} algorithm\n * @returns {import('./types').Digest}\n */\nconst hash = (algorithm) => async (data) => {\n  switch (algorithm) {\n    case 'sha3-224':\n      return new Uint8Array(sha3.sha3_224.arrayBuffer(data))\n    case 'sha3-256':\n      return new Uint8Array(sha3.sha3_256.arrayBuffer(data))\n    case 'sha3-384':\n      return new Uint8Array(sha3.sha3_384.arrayBuffer(data))\n    case 'sha3-512':\n      return new Uint8Array(sha3.sha3_512.arrayBuffer(data))\n    case 'shake-128':\n      return new Uint8Array(sha3.shake128.create(128).update(data).arrayBuffer())\n    case 'shake-256':\n      return new Uint8Array(sha3.shake256.create(256).update(data).arrayBuffer())\n    case 'keccak-224':\n      return new Uint8Array(sha3.keccak224.arrayBuffer(data))\n    case 'keccak-256':\n      return new Uint8Array(sha3.keccak256.arrayBuffer(data))\n    case 'keccak-384':\n      return new Uint8Array(sha3.keccak384.arrayBuffer(data))\n    case 'keccak-512':\n      return new Uint8Array(sha3.keccak512.arrayBuffer(data))\n    case 'murmur3-128':\n      return uint8ArrayFromString(mur.x64.hash128(data), 'base16')\n    case 'murmur3-32':\n      return fromNumberTo32BitBuf(mur.x86.hash32(data))\n\n    default:\n      throw new TypeError(`${algorithm} is not a supported algorithm`)\n  }\n}\n\n/** @type {import('./types').Digest} */\nconst identity = data => data\n\nmodule.exports = {\n  identity,\n  sha1: sha('sha1'),\n  sha2256: sha('sha2-256'),\n  sha2512: sha('sha2-512'),\n  dblSha2256: sha('dbl-sha2-256'),\n  sha3224: hash('sha3-224'),\n  sha3256: hash('sha3-256'),\n  sha3384: hash('sha3-384'),\n  sha3512: hash('sha3-512'),\n  shake128: hash('shake-128'),\n  shake256: hash('shake-256'),\n  keccak224: hash('keccak-224'),\n  keccak256: hash('keccak-256'),\n  keccak384: hash('keccak-384'),\n  keccak512: hash('keccak-512'),\n  murmur3128: hash('murmur3-128'),\n  murmur332: hash('murmur3-32'),\n  addBlake: require('./blake')\n}\n","module.exports = require('./lib/murmurHash3js');\n","/* jshint -W086: true */\n// +----------------------------------------------------------------------+\n// | murmurHash3js.js v3.0.1 // https://github.com/pid/murmurHash3js\n// | A javascript implementation of MurmurHash3's x86 hashing algorithms. |\n// |----------------------------------------------------------------------|\n// | Copyright (c) 2012-2015 Karan Lyons                                       |\n// | https://github.com/karanlyons/murmurHash3.js/blob/c1778f75792abef7bdd74bc85d2d4e1a3d25cfe9/murmurHash3.js |\n// | Freely distributable under the MIT license.                          |\n// +----------------------------------------------------------------------+\n\n;(function (root, undefined) {\n    'use strict';\n\n    // Create a local object that'll be exported or referenced globally.\n    var library = {\n        'version': '3.0.0',\n        'x86': {},\n        'x64': {},\n        'inputValidation': true\n    };\n\n    // PRIVATE FUNCTIONS\n    // -----------------\n\n    function _validBytes(bytes) {\n        // check the input is an array or a typed array\n        if (!Array.isArray(bytes) && !ArrayBuffer.isView(bytes)) {\n            return false;\n        }\n\n        // check all bytes are actually bytes\n        for (var i = 0; i < bytes.length; i++) {\n            if (!Number.isInteger(bytes[i]) || bytes[i] < 0 || bytes[i] > 255) {\n                return false;\n            }\n        }\n        return true;\n    }\n\n    function _x86Multiply(m, n) {\n        //\n        // Given two 32bit ints, returns the two multiplied together as a\n        // 32bit int.\n        //\n\n        return ((m & 0xffff) * n) + ((((m >>> 16) * n) & 0xffff) << 16);\n    }\n\n    function _x86Rotl(m, n) {\n        //\n        // Given a 32bit int and an int representing a number of bit positions,\n        // returns the 32bit int rotated left by that number of positions.\n        //\n\n        return (m << n) | (m >>> (32 - n));\n    }\n\n    function _x86Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x86 mix of that block.\n        //\n\n        h ^= h >>> 16;\n        h = _x86Multiply(h, 0x85ebca6b);\n        h ^= h >>> 13;\n        h = _x86Multiply(h, 0xc2b2ae35);\n        h ^= h >>> 16;\n\n        return h;\n    }\n\n    function _x64Add(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // added together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] + n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] + n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] + n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += m[0] + n[0];\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Multiply(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // multiplied together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        m = [m[0] >>> 16, m[0] & 0xffff, m[1] >>> 16, m[1] & 0xffff];\n        n = [n[0] >>> 16, n[0] & 0xffff, n[1] >>> 16, n[1] & 0xffff];\n        var o = [0, 0, 0, 0];\n\n        o[3] += m[3] * n[3];\n        o[2] += o[3] >>> 16;\n        o[3] &= 0xffff;\n\n        o[2] += m[2] * n[3];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[2] += m[3] * n[2];\n        o[1] += o[2] >>> 16;\n        o[2] &= 0xffff;\n\n        o[1] += m[1] * n[3];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[2] * n[2];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[1] += m[3] * n[1];\n        o[0] += o[1] >>> 16;\n        o[1] &= 0xffff;\n\n        o[0] += (m[0] * n[3]) + (m[1] * n[2]) + (m[2] * n[1]) + (m[3] * n[0]);\n        o[0] &= 0xffff;\n\n        return [(o[0] << 16) | o[1], (o[2] << 16) | o[3]];\n    }\n\n    function _x64Rotl(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) rotated left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 32) {\n            return [m[1], m[0]];\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), (m[1] << n) | (m[0] >>> (32 - n))];\n        } else {\n            n -= 32;\n            return [(m[1] << n) | (m[0] >>> (32 - n)), (m[0] << n) | (m[1] >>> (32 - n))];\n        }\n    }\n\n    function _x64LeftShift(m, n) {\n        //\n        // Given a 64bit int (as an array of two 32bit ints) and an int\n        // representing a number of bit positions, returns the 64bit int (as an\n        // array of two 32bit ints) shifted left by that number of positions.\n        //\n\n        n %= 64;\n\n        if (n === 0) {\n            return m;\n        } else if (n < 32) {\n            return [(m[0] << n) | (m[1] >>> (32 - n)), m[1] << n];\n        } else {\n            return [m[1] << (n - 32), 0];\n        }\n    }\n\n    function _x64Xor(m, n) {\n        //\n        // Given two 64bit ints (as an array of two 32bit ints) returns the two\n        // xored together as a 64bit int (as an array of two 32bit ints).\n        //\n\n        return [m[0] ^ n[0], m[1] ^ n[1]];\n    }\n\n    function _x64Fmix(h) {\n        //\n        // Given a block, returns murmurHash3's final x64 mix of that block.\n        // (`[0, h[0] >>> 1]` is a 33 bit unsigned right shift. This is the\n        // only place where we need to right shift 64bit ints.)\n        //\n\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xff51afd7, 0xed558ccd]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n        h = _x64Multiply(h, [0xc4ceb9fe, 0x1a85ec53]);\n        h = _x64Xor(h, [0, h[0] >>> 1]);\n\n        return h;\n    }\n\n    // PUBLIC FUNCTIONS\n    // ----------------\n\n    library.x86.hash32 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 32 bit hash\n        // using the x86 flavor of MurmurHash3, as an unsigned int.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 4;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n\n        var k1 = 0;\n\n        var c1 = 0xcc9e2d51;\n        var c2 = 0x1b873593;\n\n        for (var i = 0; i < blocks; i = i + 4) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n\n            h1 ^= k1;\n            h1 = _x86Rotl(h1, 13);\n            h1 = _x86Multiply(h1, 5) + 0xe6546b64;\n        }\n\n        k1 = 0;\n\n        switch (remainder) {\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h1 = _x86Fmix(h1);\n\n        return h1 >>> 0;\n    };\n\n    library.x86.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x86 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n\n        seed = seed || 0;\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = seed;\n        var h2 = seed;\n        var h3 = seed;\n        var h4 = seed;\n\n        var k1 = 0;\n        var k2 = 0;\n        var k3 = 0;\n        var k4 = 0;\n\n        var c1 = 0x239b961b;\n        var c2 = 0xab0e9789;\n        var c3 = 0x38b34ae5;\n        var c4 = 0xa1e38b93;\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = (bytes[i]) | (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24);\n            k2 = (bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24);\n            k3 = (bytes[i + 8]) | (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24);\n            k4 = (bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24);\n\n            k1 = _x86Multiply(k1, c1);\n            k1 = _x86Rotl(k1, 15);\n            k1 = _x86Multiply(k1, c2);\n            h1 ^= k1;\n\n            h1 = _x86Rotl(h1, 19);\n            h1 += h2;\n            h1 = _x86Multiply(h1, 5) + 0x561ccd1b;\n\n            k2 = _x86Multiply(k2, c2);\n            k2 = _x86Rotl(k2, 16);\n            k2 = _x86Multiply(k2, c3);\n            h2 ^= k2;\n\n            h2 = _x86Rotl(h2, 17);\n            h2 += h3;\n            h2 = _x86Multiply(h2, 5) + 0x0bcaa747;\n\n            k3 = _x86Multiply(k3, c3);\n            k3 = _x86Rotl(k3, 17);\n            k3 = _x86Multiply(k3, c4);\n            h3 ^= k3;\n\n            h3 = _x86Rotl(h3, 15);\n            h3 += h4;\n            h3 = _x86Multiply(h3, 5) + 0x96cd1c35;\n\n            k4 = _x86Multiply(k4, c4);\n            k4 = _x86Rotl(k4, 18);\n            k4 = _x86Multiply(k4, c1);\n            h4 ^= k4;\n\n            h4 = _x86Rotl(h4, 13);\n            h4 += h1;\n            h4 = _x86Multiply(h4, 5) + 0x32ac3b17;\n        }\n\n        k1 = 0;\n        k2 = 0;\n        k3 = 0;\n        k4 = 0;\n\n        switch (remainder) {\n            case 15:\n                k4 ^= bytes[i + 14] << 16;\n\n            case 14:\n                k4 ^= bytes[i + 13] << 8;\n\n            case 13:\n                k4 ^= bytes[i + 12];\n                k4 = _x86Multiply(k4, c4);\n                k4 = _x86Rotl(k4, 18);\n                k4 = _x86Multiply(k4, c1);\n                h4 ^= k4;\n\n            case 12:\n                k3 ^= bytes[i + 11] << 24;\n\n            case 11:\n                k3 ^= bytes[i + 10] << 16;\n\n            case 10:\n                k3 ^= bytes[i + 9] << 8;\n\n            case 9:\n                k3 ^= bytes[i + 8];\n                k3 = _x86Multiply(k3, c3);\n                k3 = _x86Rotl(k3, 17);\n                k3 = _x86Multiply(k3, c4);\n                h3 ^= k3;\n\n            case 8:\n                k2 ^= bytes[i + 7] << 24;\n\n            case 7:\n                k2 ^= bytes[i + 6] << 16;\n\n            case 6:\n                k2 ^= bytes[i + 5] << 8;\n\n            case 5:\n                k2 ^= bytes[i + 4];\n                k2 = _x86Multiply(k2, c2);\n                k2 = _x86Rotl(k2, 16);\n                k2 = _x86Multiply(k2, c3);\n                h2 ^= k2;\n\n            case 4:\n                k1 ^= bytes[i + 3] << 24;\n\n            case 3:\n                k1 ^= bytes[i + 2] << 16;\n\n            case 2:\n                k1 ^= bytes[i + 1] << 8;\n\n            case 1:\n                k1 ^= bytes[i];\n                k1 = _x86Multiply(k1, c1);\n                k1 = _x86Rotl(k1, 15);\n                k1 = _x86Multiply(k1, c2);\n                h1 ^= k1;\n        }\n\n        h1 ^= bytes.length;\n        h2 ^= bytes.length;\n        h3 ^= bytes.length;\n        h4 ^= bytes.length;\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        h1 = _x86Fmix(h1);\n        h2 = _x86Fmix(h2);\n        h3 = _x86Fmix(h3);\n        h4 = _x86Fmix(h4);\n\n        h1 += h2;\n        h1 += h3;\n        h1 += h4;\n        h2 += h1;\n        h3 += h1;\n        h4 += h1;\n\n        return (\"00000000\" + (h1 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h3 >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h4 >>> 0).toString(16)).slice(-8);\n    };\n\n    library.x64.hash128 = function (bytes, seed) {\n        //\n        // Given a string and an optional seed as an int, returns a 128 bit\n        // hash using the x64 flavor of MurmurHash3, as an unsigned hex.\n        //\n        if (library.inputValidation && !_validBytes(bytes)) {\n            return undefined;\n        }\n        seed = seed || 0;\n\n        var remainder = bytes.length % 16;\n        var blocks = bytes.length - remainder;\n\n        var h1 = [0, seed];\n        var h2 = [0, seed];\n\n        var k1 = [0, 0];\n        var k2 = [0, 0];\n\n        var c1 = [0x87c37b91, 0x114253d5];\n        var c2 = [0x4cf5ad43, 0x2745937f];\n\n        for (var i = 0; i < blocks; i = i + 16) {\n            k1 = [(bytes[i + 4]) | (bytes[i + 5] << 8) | (bytes[i + 6] << 16) | (bytes[i + 7] << 24), (bytes[i]) |\n                (bytes[i + 1] << 8) | (bytes[i + 2] << 16) | (bytes[i + 3] << 24)];\n            k2 = [(bytes[i + 12]) | (bytes[i + 13] << 8) | (bytes[i + 14] << 16) | (bytes[i + 15] << 24), (bytes[i + 8]) |\n                (bytes[i + 9] << 8) | (bytes[i + 10] << 16) | (bytes[i + 11] << 24)];\n\n            k1 = _x64Multiply(k1, c1);\n            k1 = _x64Rotl(k1, 31);\n            k1 = _x64Multiply(k1, c2);\n            h1 = _x64Xor(h1, k1);\n\n            h1 = _x64Rotl(h1, 27);\n            h1 = _x64Add(h1, h2);\n            h1 = _x64Add(_x64Multiply(h1, [0, 5]), [0, 0x52dce729]);\n\n            k2 = _x64Multiply(k2, c2);\n            k2 = _x64Rotl(k2, 33);\n            k2 = _x64Multiply(k2, c1);\n            h2 = _x64Xor(h2, k2);\n\n            h2 = _x64Rotl(h2, 31);\n            h2 = _x64Add(h2, h1);\n            h2 = _x64Add(_x64Multiply(h2, [0, 5]), [0, 0x38495ab5]);\n        }\n\n        k1 = [0, 0];\n        k2 = [0, 0];\n\n        switch (remainder) {\n            case 15:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 14]], 48));\n\n            case 14:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 13]], 40));\n\n            case 13:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 12]], 32));\n\n            case 12:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 11]], 24));\n\n            case 11:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 10]], 16));\n\n            case 10:\n                k2 = _x64Xor(k2, _x64LeftShift([0, bytes[i + 9]], 8));\n\n            case 9:\n                k2 = _x64Xor(k2, [0, bytes[i + 8]]);\n                k2 = _x64Multiply(k2, c2);\n                k2 = _x64Rotl(k2, 33);\n                k2 = _x64Multiply(k2, c1);\n                h2 = _x64Xor(h2, k2);\n\n            case 8:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 7]], 56));\n\n            case 7:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 6]], 48));\n\n            case 6:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 5]], 40));\n\n            case 5:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 4]], 32));\n\n            case 4:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 3]], 24));\n\n            case 3:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 2]], 16));\n\n            case 2:\n                k1 = _x64Xor(k1, _x64LeftShift([0, bytes[i + 1]], 8));\n\n            case 1:\n                k1 = _x64Xor(k1, [0, bytes[i]]);\n                k1 = _x64Multiply(k1, c1);\n                k1 = _x64Rotl(k1, 31);\n                k1 = _x64Multiply(k1, c2);\n                h1 = _x64Xor(h1, k1);\n        }\n\n        h1 = _x64Xor(h1, [0, bytes.length]);\n        h2 = _x64Xor(h2, [0, bytes.length]);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        h1 = _x64Fmix(h1);\n        h2 = _x64Fmix(h2);\n\n        h1 = _x64Add(h1, h2);\n        h2 = _x64Add(h2, h1);\n\n        return (\"00000000\" + (h1[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h1[1] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[0] >>> 0).toString(16)).slice(-8) + (\"00000000\" + (h2[1] >>> 0).toString(16)).slice(-8);\n    };\n\n    // INITIALIZATION\n    // --------------\n\n    // Export murmurHash3 for CommonJS, either as an AMD module or just as part\n    // of the global object.\n    if (typeof exports !== 'undefined') {\n\n        if (typeof module !== 'undefined' && module.exports) {\n            exports = module.exports = library;\n        }\n\n        exports.murmurHash3 = library;\n\n    } else if (typeof define === 'function' && define.amd) {\n\n        define([], function () {\n            return library;\n        });\n    } else {\n\n        // Use murmurHash3.noConflict to restore `murmurHash3` back to its\n        // original value. Returns a reference to the library object, to allow\n        // it to be used under a different name.\n        library._murmurHash3 = root.murmurHash3;\n\n        library.noConflict = function () {\n            root.murmurHash3 = library._murmurHash3;\n            library._murmurHash3 = undefined;\n            library.noConflict = undefined;\n\n            return library;\n        };\n\n        root.murmurHash3 = library;\n    }\n})(this);\n","/* eslint-disable require-await */\n'use strict'\n\nconst multihash = require('multihashes')\n/**\n * @typedef {import('multihashes').HashName} HashName\n * @typedef {import('./types').Digest} Digest\n */\n\n/**\n * @type {Crypto}\n */\nconst crypto =\n  self.crypto ||\n  /** @type {typeof window.crypto} */\n  // @ts-ignore - unknown property\n  (self.msCrypto)\n\n/**\n *\n * @param {Uint8Array} data\n * @param {HashName} alg\n * @returns {Promise<Uint8Array>}\n */\nconst digest = async (data, alg) => {\n  if (typeof self === 'undefined' || !crypto) {\n    throw new Error(\n      'Please use a browser with webcrypto support and ensure the code has been delivered securely via HTTPS/TLS and run within a Secure Context'\n    )\n  }\n  switch (alg) {\n    case 'sha1':\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-1' }, data))\n    case 'sha2-256':\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-256' }, data))\n    case 'sha2-512':\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-512' }, data))\n    case 'dbl-sha2-256': {\n      const d = await crypto.subtle.digest({ name: 'SHA-256' }, data)\n      return new Uint8Array(await crypto.subtle.digest({ name: 'SHA-256' }, d))\n    }\n    default:\n      throw new Error(`${alg} is not a supported algorithm`)\n  }\n}\n\nmodule.exports = {\n  /**\n   * @param {HashName} alg\n   * @returns {Digest}\n   */\n  factory: (alg) => async (data) => {\n    return digest(data, alg)\n  },\n  digest,\n  /**\n   * @param {Uint8Array} buf\n   * @param {HashName} alg\n   * @param {number} [length]\n   */\n  multihashing: async (buf, alg, length) => {\n    const h = await digest(buf, alg)\n    return multihash.encode(h, alg, length)\n  }\n}\n","'use strict'\n\n/**\n * @param {number} number\n * @returns {Uint8Array}\n */\nconst fromNumberTo32BitBuf = (number) => {\n  const bytes = new Uint8Array(4)\n\n  for (let i = 0; i < 4; i++) {\n    bytes[i] = number & 0xff\n    number = number >> 8\n  }\n\n  return bytes\n}\n\nmodule.exports = {\n  fromNumberTo32BitBuf\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bases = require('./util/bases.js');\n\nfunction fromString(string, encoding = 'utf8') {\n  const base = bases[encoding];\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${ encoding }\"`);\n  }\n  return base.decoder.decode(`${ base.prefix }${ string }`);\n}\n\nexports.fromString = fromString;\n","'use strict';\n\nvar basics = require('multiformats/basics');\n\nfunction createCodec(name, prefix, encode, decode) {\n  return {\n    name,\n    prefix,\n    encoder: {\n      name,\n      prefix,\n      encode\n    },\n    decoder: { decode }\n  };\n}\nconst string = createCodec('utf8', 'u', buf => {\n  const decoder = new TextDecoder('utf8');\n  return 'u' + decoder.decode(buf);\n}, str => {\n  const encoder = new TextEncoder();\n  return encoder.encode(str.substring(1));\n});\nconst ascii = createCodec('ascii', 'a', buf => {\n  let string = 'a';\n  for (let i = 0; i < buf.length; i++) {\n    string += String.fromCharCode(buf[i]);\n  }\n  return string;\n}, str => {\n  str = str.substring(1);\n  const buf = new Uint8Array(str.length);\n  for (let i = 0; i < str.length; i++) {\n    buf[i] = str.charCodeAt(i);\n  }\n  return buf;\n});\nconst BASES = {\n  utf8: string,\n  'utf-8': string,\n  hex: basics.bases.base16,\n  latin1: ascii,\n  ascii: ascii,\n  binary: ascii,\n  ...basics.bases\n};\n\nmodule.exports = BASES;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\nvar bytes = require('../bytes.js');\n\nconst identity = base.from({\n  prefix: '\\0',\n  name: 'identity',\n  encode: buf => bytes.toString(buf),\n  decode: str => bytes.fromString(str)\n});\n\nexports.identity = identity;\n","'use strict';\n\nfunction base(ALPHABET, name) {\n  if (ALPHABET.length >= 255) {\n    throw new TypeError('Alphabet too long');\n  }\n  var BASE_MAP = new Uint8Array(256);\n  for (var j = 0; j < BASE_MAP.length; j++) {\n    BASE_MAP[j] = 255;\n  }\n  for (var i = 0; i < ALPHABET.length; i++) {\n    var x = ALPHABET.charAt(i);\n    var xc = x.charCodeAt(0);\n    if (BASE_MAP[xc] !== 255) {\n      throw new TypeError(x + ' is ambiguous');\n    }\n    BASE_MAP[xc] = i;\n  }\n  var BASE = ALPHABET.length;\n  var LEADER = ALPHABET.charAt(0);\n  var FACTOR = Math.log(BASE) / Math.log(256);\n  var iFACTOR = Math.log(256) / Math.log(BASE);\n  function encode(source) {\n    if (source instanceof Uint8Array);\n    else if (ArrayBuffer.isView(source)) {\n      source = new Uint8Array(source.buffer, source.byteOffset, source.byteLength);\n    } else if (Array.isArray(source)) {\n      source = Uint8Array.from(source);\n    }\n    if (!(source instanceof Uint8Array)) {\n      throw new TypeError('Expected Uint8Array');\n    }\n    if (source.length === 0) {\n      return '';\n    }\n    var zeroes = 0;\n    var length = 0;\n    var pbegin = 0;\n    var pend = source.length;\n    while (pbegin !== pend && source[pbegin] === 0) {\n      pbegin++;\n      zeroes++;\n    }\n    var size = (pend - pbegin) * iFACTOR + 1 >>> 0;\n    var b58 = new Uint8Array(size);\n    while (pbegin !== pend) {\n      var carry = source[pbegin];\n      var i = 0;\n      for (var it1 = size - 1; (carry !== 0 || i < length) && it1 !== -1; it1--, i++) {\n        carry += 256 * b58[it1] >>> 0;\n        b58[it1] = carry % BASE >>> 0;\n        carry = carry / BASE >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      pbegin++;\n    }\n    var it2 = size - length;\n    while (it2 !== size && b58[it2] === 0) {\n      it2++;\n    }\n    var str = LEADER.repeat(zeroes);\n    for (; it2 < size; ++it2) {\n      str += ALPHABET.charAt(b58[it2]);\n    }\n    return str;\n  }\n  function decodeUnsafe(source) {\n    if (typeof source !== 'string') {\n      throw new TypeError('Expected String');\n    }\n    if (source.length === 0) {\n      return new Uint8Array();\n    }\n    var psz = 0;\n    if (source[psz] === ' ') {\n      return;\n    }\n    var zeroes = 0;\n    var length = 0;\n    while (source[psz] === LEADER) {\n      zeroes++;\n      psz++;\n    }\n    var size = (source.length - psz) * FACTOR + 1 >>> 0;\n    var b256 = new Uint8Array(size);\n    while (source[psz]) {\n      var carry = BASE_MAP[source.charCodeAt(psz)];\n      if (carry === 255) {\n        return;\n      }\n      var i = 0;\n      for (var it3 = size - 1; (carry !== 0 || i < length) && it3 !== -1; it3--, i++) {\n        carry += BASE * b256[it3] >>> 0;\n        b256[it3] = carry % 256 >>> 0;\n        carry = carry / 256 >>> 0;\n      }\n      if (carry !== 0) {\n        throw new Error('Non-zero carry');\n      }\n      length = i;\n      psz++;\n    }\n    if (source[psz] === ' ') {\n      return;\n    }\n    var it4 = size - length;\n    while (it4 !== size && b256[it4] === 0) {\n      it4++;\n    }\n    var vch = new Uint8Array(zeroes + (size - it4));\n    var j = zeroes;\n    while (it4 !== size) {\n      vch[j++] = b256[it4++];\n    }\n    return vch;\n  }\n  function decode(string) {\n    var buffer = decodeUnsafe(string);\n    if (buffer) {\n      return buffer;\n    }\n    throw new Error(`Non-${ name } character`);\n  }\n  return {\n    encode: encode,\n    decodeUnsafe: decodeUnsafe,\n    decode: decode\n  };\n}\nvar src = base;\nvar _brrp__multiformats_scope_baseX = src;\n\nmodule.exports = _brrp__multiformats_scope_baseX;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base2 = base.rfc4648({\n  prefix: '0',\n  name: 'base2',\n  alphabet: '01',\n  bitsPerChar: 1\n});\n\nexports.base2 = base2;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base8 = base.rfc4648({\n  prefix: '7',\n  name: 'base8',\n  alphabet: '01234567',\n  bitsPerChar: 3\n});\n\nexports.base8 = base8;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base10 = base.baseX({\n  prefix: '9',\n  name: 'base10',\n  alphabet: '0123456789'\n});\n\nexports.base10 = base10;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base16 = base.rfc4648({\n  prefix: 'f',\n  name: 'base16',\n  alphabet: '0123456789abcdef',\n  bitsPerChar: 4\n});\nconst base16upper = base.rfc4648({\n  prefix: 'F',\n  name: 'base16upper',\n  alphabet: '0123456789ABCDEF',\n  bitsPerChar: 4\n});\n\nexports.base16 = base16;\nexports.base16upper = base16upper;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base36 = base.baseX({\n  prefix: 'k',\n  name: 'base36',\n  alphabet: '0123456789abcdefghijklmnopqrstuvwxyz'\n});\nconst base36upper = base.baseX({\n  prefix: 'K',\n  name: 'base36upper',\n  alphabet: '0123456789ABCDEFGHIJKLMNOPQRSTUVWXYZ'\n});\n\nexports.base36 = base36;\nexports.base36upper = base36upper;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst base64 = base.rfc4648({\n  prefix: 'm',\n  name: 'base64',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/',\n  bitsPerChar: 6\n});\nconst base64pad = base.rfc4648({\n  prefix: 'M',\n  name: 'base64pad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=',\n  bitsPerChar: 6\n});\nconst base64url = base.rfc4648({\n  prefix: 'u',\n  name: 'base64url',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_',\n  bitsPerChar: 6\n});\nconst base64urlpad = base.rfc4648({\n  prefix: 'U',\n  name: 'base64urlpad',\n  alphabet: 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789-_=',\n  bitsPerChar: 6\n});\n\nexports.base64 = base64;\nexports.base64pad = base64pad;\nexports.base64url = base64url;\nexports.base64urlpad = base64urlpad;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar base = require('./base.js');\n\nconst alphabet = Array.from('\\uD83D\\uDE80\\uD83E\\uDE90\\u2604\\uD83D\\uDEF0\\uD83C\\uDF0C\\uD83C\\uDF11\\uD83C\\uDF12\\uD83C\\uDF13\\uD83C\\uDF14\\uD83C\\uDF15\\uD83C\\uDF16\\uD83C\\uDF17\\uD83C\\uDF18\\uD83C\\uDF0D\\uD83C\\uDF0F\\uD83C\\uDF0E\\uD83D\\uDC09\\u2600\\uD83D\\uDCBB\\uD83D\\uDDA5\\uD83D\\uDCBE\\uD83D\\uDCBF\\uD83D\\uDE02\\u2764\\uD83D\\uDE0D\\uD83E\\uDD23\\uD83D\\uDE0A\\uD83D\\uDE4F\\uD83D\\uDC95\\uD83D\\uDE2D\\uD83D\\uDE18\\uD83D\\uDC4D\\uD83D\\uDE05\\uD83D\\uDC4F\\uD83D\\uDE01\\uD83D\\uDD25\\uD83E\\uDD70\\uD83D\\uDC94\\uD83D\\uDC96\\uD83D\\uDC99\\uD83D\\uDE22\\uD83E\\uDD14\\uD83D\\uDE06\\uD83D\\uDE44\\uD83D\\uDCAA\\uD83D\\uDE09\\u263A\\uD83D\\uDC4C\\uD83E\\uDD17\\uD83D\\uDC9C\\uD83D\\uDE14\\uD83D\\uDE0E\\uD83D\\uDE07\\uD83C\\uDF39\\uD83E\\uDD26\\uD83C\\uDF89\\uD83D\\uDC9E\\u270C\\u2728\\uD83E\\uDD37\\uD83D\\uDE31\\uD83D\\uDE0C\\uD83C\\uDF38\\uD83D\\uDE4C\\uD83D\\uDE0B\\uD83D\\uDC97\\uD83D\\uDC9A\\uD83D\\uDE0F\\uD83D\\uDC9B\\uD83D\\uDE42\\uD83D\\uDC93\\uD83E\\uDD29\\uD83D\\uDE04\\uD83D\\uDE00\\uD83D\\uDDA4\\uD83D\\uDE03\\uD83D\\uDCAF\\uD83D\\uDE48\\uD83D\\uDC47\\uD83C\\uDFB6\\uD83D\\uDE12\\uD83E\\uDD2D\\u2763\\uD83D\\uDE1C\\uD83D\\uDC8B\\uD83D\\uDC40\\uD83D\\uDE2A\\uD83D\\uDE11\\uD83D\\uDCA5\\uD83D\\uDE4B\\uD83D\\uDE1E\\uD83D\\uDE29\\uD83D\\uDE21\\uD83E\\uDD2A\\uD83D\\uDC4A\\uD83E\\uDD73\\uD83D\\uDE25\\uD83E\\uDD24\\uD83D\\uDC49\\uD83D\\uDC83\\uD83D\\uDE33\\u270B\\uD83D\\uDE1A\\uD83D\\uDE1D\\uD83D\\uDE34\\uD83C\\uDF1F\\uD83D\\uDE2C\\uD83D\\uDE43\\uD83C\\uDF40\\uD83C\\uDF37\\uD83D\\uDE3B\\uD83D\\uDE13\\u2B50\\u2705\\uD83E\\uDD7A\\uD83C\\uDF08\\uD83D\\uDE08\\uD83E\\uDD18\\uD83D\\uDCA6\\u2714\\uD83D\\uDE23\\uD83C\\uDFC3\\uD83D\\uDC90\\u2639\\uD83C\\uDF8A\\uD83D\\uDC98\\uD83D\\uDE20\\u261D\\uD83D\\uDE15\\uD83C\\uDF3A\\uD83C\\uDF82\\uD83C\\uDF3B\\uD83D\\uDE10\\uD83D\\uDD95\\uD83D\\uDC9D\\uD83D\\uDE4A\\uD83D\\uDE39\\uD83D\\uDDE3\\uD83D\\uDCAB\\uD83D\\uDC80\\uD83D\\uDC51\\uD83C\\uDFB5\\uD83E\\uDD1E\\uD83D\\uDE1B\\uD83D\\uDD34\\uD83D\\uDE24\\uD83C\\uDF3C\\uD83D\\uDE2B\\u26BD\\uD83E\\uDD19\\u2615\\uD83C\\uDFC6\\uD83E\\uDD2B\\uD83D\\uDC48\\uD83D\\uDE2E\\uD83D\\uDE46\\uD83C\\uDF7B\\uD83C\\uDF43\\uD83D\\uDC36\\uD83D\\uDC81\\uD83D\\uDE32\\uD83C\\uDF3F\\uD83E\\uDDE1\\uD83C\\uDF81\\u26A1\\uD83C\\uDF1E\\uD83C\\uDF88\\u274C\\u270A\\uD83D\\uDC4B\\uD83D\\uDE30\\uD83E\\uDD28\\uD83D\\uDE36\\uD83E\\uDD1D\\uD83D\\uDEB6\\uD83D\\uDCB0\\uD83C\\uDF53\\uD83D\\uDCA2\\uD83E\\uDD1F\\uD83D\\uDE41\\uD83D\\uDEA8\\uD83D\\uDCA8\\uD83E\\uDD2C\\u2708\\uD83C\\uDF80\\uD83C\\uDF7A\\uD83E\\uDD13\\uD83D\\uDE19\\uD83D\\uDC9F\\uD83C\\uDF31\\uD83D\\uDE16\\uD83D\\uDC76\\uD83E\\uDD74\\u25B6\\u27A1\\u2753\\uD83D\\uDC8E\\uD83D\\uDCB8\\u2B07\\uD83D\\uDE28\\uD83C\\uDF1A\\uD83E\\uDD8B\\uD83D\\uDE37\\uD83D\\uDD7A\\u26A0\\uD83D\\uDE45\\uD83D\\uDE1F\\uD83D\\uDE35\\uD83D\\uDC4E\\uD83E\\uDD32\\uD83E\\uDD20\\uD83E\\uDD27\\uD83D\\uDCCC\\uD83D\\uDD35\\uD83D\\uDC85\\uD83E\\uDDD0\\uD83D\\uDC3E\\uD83C\\uDF52\\uD83D\\uDE17\\uD83E\\uDD11\\uD83C\\uDF0A\\uD83E\\uDD2F\\uD83D\\uDC37\\u260E\\uD83D\\uDCA7\\uD83D\\uDE2F\\uD83D\\uDC86\\uD83D\\uDC46\\uD83C\\uDFA4\\uD83D\\uDE47\\uD83C\\uDF51\\u2744\\uD83C\\uDF34\\uD83D\\uDCA3\\uD83D\\uDC38\\uD83D\\uDC8C\\uD83D\\uDCCD\\uD83E\\uDD40\\uD83E\\uDD22\\uD83D\\uDC45\\uD83D\\uDCA1\\uD83D\\uDCA9\\uD83D\\uDC50\\uD83D\\uDCF8\\uD83D\\uDC7B\\uD83E\\uDD10\\uD83E\\uDD2E\\uD83C\\uDFBC\\uD83E\\uDD75\\uD83D\\uDEA9\\uD83C\\uDF4E\\uD83C\\uDF4A\\uD83D\\uDC7C\\uD83D\\uDC8D\\uD83D\\uDCE3\\uD83E\\uDD42');\nconst alphabetBytesToChars = alphabet.reduce((p, c, i) => {\n  p[i] = c;\n  return p;\n}, []);\nconst alphabetCharsToBytes = alphabet.reduce((p, c, i) => {\n  p[c.codePointAt(0)] = i;\n  return p;\n}, []);\nfunction encode(data) {\n  return data.reduce((p, c) => {\n    p += alphabetBytesToChars[c];\n    return p;\n  }, '');\n}\nfunction decode(str) {\n  const byts = [];\n  for (const char of str) {\n    const byt = alphabetCharsToBytes[char.codePointAt(0)];\n    if (byt === undefined) {\n      throw new Error(`Non-base256emoji character: ${ char }`);\n    }\n    byts.push(byt);\n  }\n  return new Uint8Array(byts);\n}\nconst base256emoji = base.from({\n  prefix: '\\uD83D\\uDE80',\n  name: 'base256emoji',\n  encode,\n  decode\n});\n\nexports.base256emoji = base256emoji;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar hasher = require('./hasher.js');\n\nconst sha = name => async data => new Uint8Array(await crypto.subtle.digest(name, data));\nconst sha256 = hasher.from({\n  name: 'sha2-256',\n  code: 18,\n  encode: sha('SHA-256')\n});\nconst sha512 = hasher.from({\n  name: 'sha2-512',\n  code: 19,\n  encode: sha('SHA-512')\n});\n\nexports.sha256 = sha256;\nexports.sha512 = sha512;\n","'use strict';\n\nvar encode_1 = encode;\nvar MSB = 128, REST = 127, MSBALL = ~REST, INT = Math.pow(2, 31);\nfunction encode(num, out, offset) {\n  out = out || [];\n  offset = offset || 0;\n  var oldOffset = offset;\n  while (num >= INT) {\n    out[offset++] = num & 255 | MSB;\n    num /= 128;\n  }\n  while (num & MSBALL) {\n    out[offset++] = num & 255 | MSB;\n    num >>>= 7;\n  }\n  out[offset] = num | 0;\n  encode.bytes = offset - oldOffset + 1;\n  return out;\n}\nvar decode = read;\nvar MSB$1 = 128, REST$1 = 127;\nfunction read(buf, offset) {\n  var res = 0, offset = offset || 0, shift = 0, counter = offset, b, l = buf.length;\n  do {\n    if (counter >= l) {\n      read.bytes = 0;\n      throw new RangeError('Could not decode varint');\n    }\n    b = buf[counter++];\n    res += shift < 28 ? (b & REST$1) << shift : (b & REST$1) * Math.pow(2, shift);\n    shift += 7;\n  } while (b >= MSB$1);\n  read.bytes = counter - offset;\n  return res;\n}\nvar N1 = Math.pow(2, 7);\nvar N2 = Math.pow(2, 14);\nvar N3 = Math.pow(2, 21);\nvar N4 = Math.pow(2, 28);\nvar N5 = Math.pow(2, 35);\nvar N6 = Math.pow(2, 42);\nvar N7 = Math.pow(2, 49);\nvar N8 = Math.pow(2, 56);\nvar N9 = Math.pow(2, 63);\nvar length = function (value) {\n  return value < N1 ? 1 : value < N2 ? 2 : value < N3 ? 3 : value < N4 ? 4 : value < N5 ? 5 : value < N6 ? 6 : value < N7 ? 7 : value < N8 ? 8 : value < N9 ? 9 : 10;\n};\nvar varint = {\n  encode: encode_1,\n  decode: decode,\n  encodingLength: length\n};\nvar _brrp_varint = varint;\nvar varint$1 = _brrp_varint;\n\nmodule.exports = varint$1;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\nvar digest$1 = require('./digest.js');\n\nconst code = 0;\nconst name = 'identity';\nconst encode = bytes.coerce;\nconst digest = input => digest$1.create(code, encode(input));\nconst identity = {\n  code,\n  name,\n  encode,\n  digest\n};\n\nexports.identity = identity;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar bytes = require('../bytes.js');\n\nconst name = 'raw';\nconst code = 85;\nconst encode = node => bytes.coerce(node);\nconst decode = data => bytes.coerce(data);\n\nexports.code = code;\nexports.decode = decode;\nexports.encode = encode;\nexports.name = name;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nconst textEncoder = new TextEncoder();\nconst textDecoder = new TextDecoder();\nconst name = 'json';\nconst code = 512;\nconst encode = node => textEncoder.encode(JSON.stringify(node));\nconst decode = data => JSON.parse(textDecoder.decode(data));\n\nexports.code = code;\nexports.decode = decode;\nexports.encode = encode;\nexports.name = name;\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar cid = require('./cid.js');\nvar varint = require('./varint.js');\nvar bytes = require('./bytes.js');\nvar hasher = require('./hashes/hasher.js');\nvar digest = require('./hashes/digest.js');\n\n\n\nexports.CID = cid.CID;\nexports.varint = varint;\nexports.bytes = bytes;\nexports.hasher = hasher;\nexports.digest = digest;\n","'use strict'\n\n// @ts-ignore - no types available\nconst blake = require('blakejs')\n\nconst minB = 0xb201\nconst minS = 0xb241\n\nconst blake2b = {\n  init: blake.blake2bInit,\n  update: blake.blake2bUpdate,\n  digest: blake.blake2bFinal\n}\n\nconst blake2s = {\n  init: blake.blake2sInit,\n  update: blake.blake2sUpdate,\n  digest: blake.blake2sFinal\n}\n\n// Note that although this function doesn't do any asynchronous work, we mark\n// the function as async because it must return a Promise to match the API\n// for other functions that do perform asynchronous work (see sha.browser.js)\n// eslint-disable-next-line\n\n/**\n * @param {number} size\n * @param {any} hf\n * @returns {import('./types').Digest}\n */\nconst makeB2Hash = (size, hf) => async (data) => {\n  const ctx = hf.init(size, null)\n  hf.update(ctx, data)\n  return hf.digest(ctx)\n}\n\n/**\n * @param {Record<number, import('./types').Digest>} table\n */\nmodule.exports = (table) => {\n  for (let i = 0; i < 64; i++) {\n    table[minB + i] = makeB2Hash(i + 1, blake2b)\n  }\n  for (let i = 0; i < 32; i++) {\n    table[minS + i] = makeB2Hash(i + 1, blake2s)\n  }\n}\n","const b2b = require('./blake2b')\nconst b2s = require('./blake2s')\n\nmodule.exports = {\n  blake2b: b2b.blake2b,\n  blake2bHex: b2b.blake2bHex,\n  blake2bInit: b2b.blake2bInit,\n  blake2bUpdate: b2b.blake2bUpdate,\n  blake2bFinal: b2b.blake2bFinal,\n  blake2s: b2s.blake2s,\n  blake2sHex: b2s.blake2sHex,\n  blake2sInit: b2s.blake2sInit,\n  blake2sUpdate: b2s.blake2sUpdate,\n  blake2sFinal: b2s.blake2sFinal\n}\n","// Blake2B in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += v[b,b+1]\n// v should be a Uint32Array\nfunction ADD64AA (v, a, b) {\n  const o0 = v[a] + v[b]\n  let o1 = v[a + 1] + v[b + 1]\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// 64-bit unsigned addition\n// Sets v[a,a+1] += b\n// b0 is the low 32 bits of b, b1 represents the high 32 bits\nfunction ADD64AC (v, a, b0, b1) {\n  let o0 = v[a] + b0\n  if (b0 < 0) {\n    o0 += 0x100000000\n  }\n  let o1 = v[a + 1] + b1\n  if (o0 >= 0x100000000) {\n    o1++\n  }\n  v[a] = o0\n  v[a + 1] = o1\n}\n\n// Little-endian byte access\nfunction B2B_GET32 (arr, i) {\n  return arr[i] ^ (arr[i + 1] << 8) ^ (arr[i + 2] << 16) ^ (arr[i + 3] << 24)\n}\n\n// G Mixing function\n// The ROTRs are inlined for speed\nfunction B2B_G (a, b, c, d, ix, iy) {\n  const x0 = m[ix]\n  const x1 = m[ix + 1]\n  const y0 = m[iy]\n  const y1 = m[iy + 1]\n\n  ADD64AA(v, a, b) // v[a,a+1] += v[b,b+1] ... in JS we must store a uint64 as two uint32s\n  ADD64AC(v, a, x0, x1) // v[a, a+1] += x ... x0 is the low 32 bits of x, x1 is the high 32 bits\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated to the right by 32 bits\n  let xor0 = v[d] ^ v[a]\n  let xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = xor1\n  v[d + 1] = xor0\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 24 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor0 >>> 24) ^ (xor1 << 8)\n  v[b + 1] = (xor1 >>> 24) ^ (xor0 << 8)\n\n  ADD64AA(v, a, b)\n  ADD64AC(v, a, y0, y1)\n\n  // v[d,d+1] = (v[d,d+1] xor v[a,a+1]) rotated right by 16 bits\n  xor0 = v[d] ^ v[a]\n  xor1 = v[d + 1] ^ v[a + 1]\n  v[d] = (xor0 >>> 16) ^ (xor1 << 16)\n  v[d + 1] = (xor1 >>> 16) ^ (xor0 << 16)\n\n  ADD64AA(v, c, d)\n\n  // v[b,b+1] = (v[b,b+1] xor v[c,c+1]) rotated right by 63 bits\n  xor0 = v[b] ^ v[c]\n  xor1 = v[b + 1] ^ v[c + 1]\n  v[b] = (xor1 >>> 31) ^ (xor0 << 1)\n  v[b + 1] = (xor0 >>> 31) ^ (xor1 << 1)\n}\n\n// Initialization Vector\nconst BLAKE2B_IV32 = new Uint32Array([\n  0xf3bcc908, 0x6a09e667, 0x84caa73b, 0xbb67ae85, 0xfe94f82b, 0x3c6ef372,\n  0x5f1d36f1, 0xa54ff53a, 0xade682d1, 0x510e527f, 0x2b3e6c1f, 0x9b05688c,\n  0xfb41bd6b, 0x1f83d9ab, 0x137e2179, 0x5be0cd19\n])\n\nconst SIGMA8 = [\n  0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13,\n  6, 1, 12, 0, 2, 11, 7, 5, 3, 11, 8, 12, 0, 5, 2, 15, 13, 10, 14, 3, 6, 7, 1,\n  9, 4, 7, 9, 3, 1, 13, 12, 11, 14, 2, 6, 5, 10, 4, 0, 15, 8, 9, 0, 5, 7, 2, 4,\n  10, 15, 14, 1, 11, 12, 6, 8, 3, 13, 2, 12, 6, 10, 0, 11, 8, 3, 4, 13, 7, 5,\n  15, 14, 1, 9, 12, 5, 1, 15, 14, 13, 4, 10, 0, 7, 6, 3, 9, 2, 8, 11, 13, 11, 7,\n  14, 12, 1, 3, 9, 5, 0, 15, 4, 8, 6, 2, 10, 6, 15, 14, 9, 11, 3, 0, 8, 12, 2,\n  13, 7, 1, 4, 10, 5, 10, 2, 8, 4, 7, 6, 1, 5, 15, 11, 9, 14, 3, 12, 13, 0, 0,\n  1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 14, 10, 4, 8, 9, 15, 13, 6,\n  1, 12, 0, 2, 11, 7, 5, 3\n]\n\n// These are offsets into a uint64 buffer.\n// Multiply them all by 2 to make them offsets into a uint32 buffer,\n// because this is Javascript and we don't have uint64s\nconst SIGMA82 = new Uint8Array(\n  SIGMA8.map(function (x) {\n    return x * 2\n  })\n)\n\n// Compression function. 'last' flag indicates last block.\n// Note we're representing 16 uint64s as 32 uint32s\nconst v = new Uint32Array(32)\nconst m = new Uint32Array(32)\nfunction blake2bCompress (ctx, last) {\n  let i = 0\n\n  // init work variables\n  for (i = 0; i < 16; i++) {\n    v[i] = ctx.h[i]\n    v[i + 16] = BLAKE2B_IV32[i]\n  }\n\n  // low 64 bits of offset\n  v[24] = v[24] ^ ctx.t\n  v[25] = v[25] ^ (ctx.t / 0x100000000)\n  // high 64 bits not supported, offset may not be higher than 2**53-1\n\n  // last block flag set ?\n  if (last) {\n    v[28] = ~v[28]\n    v[29] = ~v[29]\n  }\n\n  // get little-endian words\n  for (i = 0; i < 32; i++) {\n    m[i] = B2B_GET32(ctx.b, 4 * i)\n  }\n\n  // twelve rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 64)\n  for (i = 0; i < 12; i++) {\n    // util.debugPrint('   (i=' + (i < 10 ? ' ' : '') + i + ') v[16]', v, 64)\n    B2B_G(0, 8, 16, 24, SIGMA82[i * 16 + 0], SIGMA82[i * 16 + 1])\n    B2B_G(2, 10, 18, 26, SIGMA82[i * 16 + 2], SIGMA82[i * 16 + 3])\n    B2B_G(4, 12, 20, 28, SIGMA82[i * 16 + 4], SIGMA82[i * 16 + 5])\n    B2B_G(6, 14, 22, 30, SIGMA82[i * 16 + 6], SIGMA82[i * 16 + 7])\n    B2B_G(0, 10, 20, 30, SIGMA82[i * 16 + 8], SIGMA82[i * 16 + 9])\n    B2B_G(2, 12, 22, 24, SIGMA82[i * 16 + 10], SIGMA82[i * 16 + 11])\n    B2B_G(4, 14, 16, 26, SIGMA82[i * 16 + 12], SIGMA82[i * 16 + 13])\n    B2B_G(6, 8, 18, 28, SIGMA82[i * 16 + 14], SIGMA82[i * 16 + 15])\n  }\n  // util.debugPrint('   (i=12) v[16]', v, 64)\n\n  for (i = 0; i < 16; i++) {\n    ctx.h[i] = ctx.h[i] ^ v[i] ^ v[i + 16]\n  }\n  // util.debugPrint('h[8]', ctx.h, 64)\n}\n\n// reusable parameterBlock\nconst parameterBlock = new Uint8Array([\n  0,\n  0,\n  0,\n  0, //  0: outlen, keylen, fanout, depth\n  0,\n  0,\n  0,\n  0, //  4: leaf length, sequential mode\n  0,\n  0,\n  0,\n  0, //  8: node offset\n  0,\n  0,\n  0,\n  0, // 12: node offset\n  0,\n  0,\n  0,\n  0, // 16: node depth, inner length, rfu\n  0,\n  0,\n  0,\n  0, // 20: rfu\n  0,\n  0,\n  0,\n  0, // 24: rfu\n  0,\n  0,\n  0,\n  0, // 28: rfu\n  0,\n  0,\n  0,\n  0, // 32: salt\n  0,\n  0,\n  0,\n  0, // 36: salt\n  0,\n  0,\n  0,\n  0, // 40: salt\n  0,\n  0,\n  0,\n  0, // 44: salt\n  0,\n  0,\n  0,\n  0, // 48: personal\n  0,\n  0,\n  0,\n  0, // 52: personal\n  0,\n  0,\n  0,\n  0, // 56: personal\n  0,\n  0,\n  0,\n  0 // 60: personal\n])\n\n// Creates a BLAKE2b hashing context\n// Requires an output length between 1 and 64 bytes\n// Takes an optional Uint8Array key\n// Takes an optinal Uint8Array salt\n// Takes an optinal Uint8Array personal\nfunction blake2bInit (outlen, key, salt, personal) {\n  if (outlen === 0 || outlen > 64) {\n    throw new Error('Illegal output length, expected 0 < length <= 64')\n  }\n  if (key && key.length > 64) {\n    throw new Error('Illegal key, expected Uint8Array with 0 < length <= 64')\n  }\n  if (salt && salt.length !== 16) {\n    throw new Error('Illegal salt, expected Uint8Array with length is 16')\n  }\n  if (personal && personal.length !== 16) {\n    throw new Error('Illegal personal, expected Uint8Array with length is 16')\n  }\n\n  // state, 'param block'\n  const ctx = {\n    b: new Uint8Array(128),\n    h: new Uint32Array(16),\n    t: 0, // input count\n    c: 0, // pointer within buffer\n    outlen: outlen // output length in bytes\n  }\n\n  // initialize parameterBlock before usage\n  parameterBlock.fill(0)\n  parameterBlock[0] = outlen\n  if (key) parameterBlock[1] = key.length\n  parameterBlock[2] = 1 // fanout\n  parameterBlock[3] = 1 // depth\n  if (salt) parameterBlock.set(salt, 32)\n  if (personal) parameterBlock.set(personal, 48)\n\n  // initialize hash state\n  for (let i = 0; i < 16; i++) {\n    ctx.h[i] = BLAKE2B_IV32[i] ^ B2B_GET32(parameterBlock, i * 4)\n  }\n\n  // key the hash, if applicable\n  if (key) {\n    blake2bUpdate(ctx, key)\n    // at the end\n    ctx.c = 128\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2b streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2bUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 128) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2bCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2b streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2bFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n\n  while (ctx.c < 128) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2bCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = ctx.h[i >> 2] >> (8 * (i & 3))\n  }\n  return out\n}\n\n// Computes the BLAKE2B hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2b (input, key, outlen, salt, personal) {\n  // preprocess inputs\n  outlen = outlen || 64\n  input = util.normalizeInput(input)\n  if (salt) {\n    salt = util.normalizeInput(salt)\n  }\n  if (personal) {\n    personal = util.normalizeInput(personal)\n  }\n\n  // do the math\n  const ctx = blake2bInit(outlen, key, salt, personal)\n  blake2bUpdate(ctx, input)\n  return blake2bFinal(ctx)\n}\n\n// Computes the BLAKE2B hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 64 bytes\n// - outlen - optional output length in bytes, default 64\n// - salt - optional salt bytes, string, Buffer or Uint8Array\n// - personal - optional personal bytes, string, Buffer or Uint8Array\nfunction blake2bHex (input, key, outlen, salt, personal) {\n  const output = blake2b(input, key, outlen, salt, personal)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2b: blake2b,\n  blake2bHex: blake2bHex,\n  blake2bInit: blake2bInit,\n  blake2bUpdate: blake2bUpdate,\n  blake2bFinal: blake2bFinal\n}\n","// BLAKE2s hash function in pure Javascript\n// Adapted from the reference implementation in RFC7693\n// Ported to Javascript by DC - https://github.com/dcposch\n\nconst util = require('./util')\n\n// Little-endian byte access.\n// Expects a Uint8Array and an index\n// Returns the little-endian uint32 at v[i..i+3]\nfunction B2S_GET32 (v, i) {\n  return v[i] ^ (v[i + 1] << 8) ^ (v[i + 2] << 16) ^ (v[i + 3] << 24)\n}\n\n// Mixing function G.\nfunction B2S_G (a, b, c, d, x, y) {\n  v[a] = v[a] + v[b] + x\n  v[d] = ROTR32(v[d] ^ v[a], 16)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 12)\n  v[a] = v[a] + v[b] + y\n  v[d] = ROTR32(v[d] ^ v[a], 8)\n  v[c] = v[c] + v[d]\n  v[b] = ROTR32(v[b] ^ v[c], 7)\n}\n\n// 32-bit right rotation\n// x should be a uint32\n// y must be between 1 and 31, inclusive\nfunction ROTR32 (x, y) {\n  return (x >>> y) ^ (x << (32 - y))\n}\n\n// Initialization Vector.\nconst BLAKE2S_IV = new Uint32Array([\n  0x6a09e667,\n  0xbb67ae85,\n  0x3c6ef372,\n  0xa54ff53a,\n  0x510e527f,\n  0x9b05688c,\n  0x1f83d9ab,\n  0x5be0cd19\n])\n\nconst SIGMA = new Uint8Array([\n  0,\n  1,\n  2,\n  3,\n  4,\n  5,\n  6,\n  7,\n  8,\n  9,\n  10,\n  11,\n  12,\n  13,\n  14,\n  15,\n  14,\n  10,\n  4,\n  8,\n  9,\n  15,\n  13,\n  6,\n  1,\n  12,\n  0,\n  2,\n  11,\n  7,\n  5,\n  3,\n  11,\n  8,\n  12,\n  0,\n  5,\n  2,\n  15,\n  13,\n  10,\n  14,\n  3,\n  6,\n  7,\n  1,\n  9,\n  4,\n  7,\n  9,\n  3,\n  1,\n  13,\n  12,\n  11,\n  14,\n  2,\n  6,\n  5,\n  10,\n  4,\n  0,\n  15,\n  8,\n  9,\n  0,\n  5,\n  7,\n  2,\n  4,\n  10,\n  15,\n  14,\n  1,\n  11,\n  12,\n  6,\n  8,\n  3,\n  13,\n  2,\n  12,\n  6,\n  10,\n  0,\n  11,\n  8,\n  3,\n  4,\n  13,\n  7,\n  5,\n  15,\n  14,\n  1,\n  9,\n  12,\n  5,\n  1,\n  15,\n  14,\n  13,\n  4,\n  10,\n  0,\n  7,\n  6,\n  3,\n  9,\n  2,\n  8,\n  11,\n  13,\n  11,\n  7,\n  14,\n  12,\n  1,\n  3,\n  9,\n  5,\n  0,\n  15,\n  4,\n  8,\n  6,\n  2,\n  10,\n  6,\n  15,\n  14,\n  9,\n  11,\n  3,\n  0,\n  8,\n  12,\n  2,\n  13,\n  7,\n  1,\n  4,\n  10,\n  5,\n  10,\n  2,\n  8,\n  4,\n  7,\n  6,\n  1,\n  5,\n  15,\n  11,\n  9,\n  14,\n  3,\n  12,\n  13,\n  0\n])\n\n// Compression function. \"last\" flag indicates last block\nconst v = new Uint32Array(16)\nconst m = new Uint32Array(16)\nfunction blake2sCompress (ctx, last) {\n  let i = 0\n  for (i = 0; i < 8; i++) {\n    // init work variables\n    v[i] = ctx.h[i]\n    v[i + 8] = BLAKE2S_IV[i]\n  }\n\n  v[12] ^= ctx.t // low 32 bits of offset\n  v[13] ^= ctx.t / 0x100000000 // high 32 bits\n  if (last) {\n    // last block flag set ?\n    v[14] = ~v[14]\n  }\n\n  for (i = 0; i < 16; i++) {\n    // get little-endian words\n    m[i] = B2S_GET32(ctx.b, 4 * i)\n  }\n\n  // ten rounds of mixing\n  // uncomment the DebugPrint calls to log the computation\n  // and match the RFC sample documentation\n  // util.debugPrint('          m[16]', m, 32)\n  for (i = 0; i < 10; i++) {\n    // util.debugPrint('   (i=' + i + ')  v[16]', v, 32)\n    B2S_G(0, 4, 8, 12, m[SIGMA[i * 16 + 0]], m[SIGMA[i * 16 + 1]])\n    B2S_G(1, 5, 9, 13, m[SIGMA[i * 16 + 2]], m[SIGMA[i * 16 + 3]])\n    B2S_G(2, 6, 10, 14, m[SIGMA[i * 16 + 4]], m[SIGMA[i * 16 + 5]])\n    B2S_G(3, 7, 11, 15, m[SIGMA[i * 16 + 6]], m[SIGMA[i * 16 + 7]])\n    B2S_G(0, 5, 10, 15, m[SIGMA[i * 16 + 8]], m[SIGMA[i * 16 + 9]])\n    B2S_G(1, 6, 11, 12, m[SIGMA[i * 16 + 10]], m[SIGMA[i * 16 + 11]])\n    B2S_G(2, 7, 8, 13, m[SIGMA[i * 16 + 12]], m[SIGMA[i * 16 + 13]])\n    B2S_G(3, 4, 9, 14, m[SIGMA[i * 16 + 14]], m[SIGMA[i * 16 + 15]])\n  }\n  // util.debugPrint('   (i=10) v[16]', v, 32)\n\n  for (i = 0; i < 8; i++) {\n    ctx.h[i] ^= v[i] ^ v[i + 8]\n  }\n  // util.debugPrint('h[8]', ctx.h, 32)\n}\n\n// Creates a BLAKE2s hashing context\n// Requires an output length between 1 and 32 bytes\n// Takes an optional Uint8Array key\nfunction blake2sInit (outlen, key) {\n  if (!(outlen > 0 && outlen <= 32)) {\n    throw new Error('Incorrect output length, should be in [1, 32]')\n  }\n  const keylen = key ? key.length : 0\n  if (key && !(keylen > 0 && keylen <= 32)) {\n    throw new Error('Incorrect key length, should be in [1, 32]')\n  }\n\n  const ctx = {\n    h: new Uint32Array(BLAKE2S_IV), // hash state\n    b: new Uint8Array(64), // input block\n    c: 0, // pointer within block\n    t: 0, // input count\n    outlen: outlen // output length in bytes\n  }\n  ctx.h[0] ^= 0x01010000 ^ (keylen << 8) ^ outlen\n\n  if (keylen > 0) {\n    blake2sUpdate(ctx, key)\n    ctx.c = 64 // at the end\n  }\n\n  return ctx\n}\n\n// Updates a BLAKE2s streaming hash\n// Requires hash context and Uint8Array (byte array)\nfunction blake2sUpdate (ctx, input) {\n  for (let i = 0; i < input.length; i++) {\n    if (ctx.c === 64) {\n      // buffer full ?\n      ctx.t += ctx.c // add counters\n      blake2sCompress(ctx, false) // compress (not last)\n      ctx.c = 0 // counter to zero\n    }\n    ctx.b[ctx.c++] = input[i]\n  }\n}\n\n// Completes a BLAKE2s streaming hash\n// Returns a Uint8Array containing the message digest\nfunction blake2sFinal (ctx) {\n  ctx.t += ctx.c // mark last block offset\n  while (ctx.c < 64) {\n    // fill up with zeros\n    ctx.b[ctx.c++] = 0\n  }\n  blake2sCompress(ctx, true) // final block flag = 1\n\n  // little endian convert and store\n  const out = new Uint8Array(ctx.outlen)\n  for (let i = 0; i < ctx.outlen; i++) {\n    out[i] = (ctx.h[i >> 2] >> (8 * (i & 3))) & 0xff\n  }\n  return out\n}\n\n// Computes the BLAKE2S hash of a string or byte array, and returns a Uint8Array\n//\n// Returns a n-byte Uint8Array\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2s (input, key, outlen) {\n  // preprocess inputs\n  outlen = outlen || 32\n  input = util.normalizeInput(input)\n\n  // do the math\n  const ctx = blake2sInit(outlen, key)\n  blake2sUpdate(ctx, input)\n  return blake2sFinal(ctx)\n}\n\n// Computes the BLAKE2S hash of a string or byte array\n//\n// Returns an n-byte hash in hex, all lowercase\n//\n// Parameters:\n// - input - the input bytes, as a string, Buffer, or Uint8Array\n// - key - optional key Uint8Array, up to 32 bytes\n// - outlen - optional output length in bytes, default 64\nfunction blake2sHex (input, key, outlen) {\n  const output = blake2s(input, key, outlen)\n  return util.toHex(output)\n}\n\nmodule.exports = {\n  blake2s: blake2s,\n  blake2sHex: blake2sHex,\n  blake2sInit: blake2sInit,\n  blake2sUpdate: blake2sUpdate,\n  blake2sFinal: blake2sFinal\n}\n","'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nfunction equals(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (a.byteLength !== b.byteLength) {\n    return false;\n  }\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false;\n    }\n  }\n  return true;\n}\n\nexports.equals = equals;\n","'use strict'\n\nconst dirBuilder = require('./dir')\nconst fileBuilder = require('./file')\nconst errCode = require('err-code')\n\n/**\n * @typedef {import('../types').File} File\n * @typedef {import('../types').Directory} Directory\n * @typedef {import('../types').DAGBuilder} DAGBuilder\n * @typedef {import('../types').Chunker} Chunker\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @param {any} thing\n * @returns {thing is Iterable<any>}\n */\nfunction isIterable (thing) {\n  return Symbol.iterator in thing\n}\n\n/**\n * @param {any} thing\n * @returns {thing is AsyncIterable<any>}\n */\nfunction isAsyncIterable (thing) {\n  return Symbol.asyncIterator in thing\n}\n\n/**\n * @param {Uint8Array | AsyncIterable<Uint8Array> | Iterable<Uint8Array>} content\n * @returns {AsyncIterable<Uint8Array>}\n */\nfunction contentAsAsyncIterable (content) {\n  try {\n    if (content instanceof Uint8Array) {\n      return (async function * () {\n        yield content\n      }())\n    } else if (isIterable(content)) {\n      return (async function * () {\n        yield * content\n      }())\n    } else if (isAsyncIterable(content)) {\n      return content\n    }\n  } catch {\n    throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n  }\n\n  throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n}\n\n/**\n * @type {DAGBuilder}\n */\nasync function * dagBuilder (source, block, options) {\n  for await (const entry of source) {\n    if (entry.path) {\n      if (entry.path.substring(0, 2) === './') {\n        options.wrapWithDirectory = true\n      }\n\n      entry.path = entry.path\n        .split('/')\n        .filter(path => path && path !== '.')\n        .join('/')\n    }\n\n    if (entry.content) {\n      /**\n       * @type {Chunker}\n       */\n      let chunker\n\n      if (typeof options.chunker === 'function') {\n        chunker = options.chunker\n      } else if (options.chunker === 'rabin') {\n        chunker = require('../chunker/rabin')\n      } else {\n        chunker = require('../chunker/fixed-size')\n      }\n\n      /**\n       * @type {ChunkValidator}\n       */\n      let chunkValidator\n\n      if (typeof options.chunkValidator === 'function') {\n        chunkValidator = options.chunkValidator\n      } else {\n        chunkValidator = require('./validate-chunks')\n      }\n\n      /** @type {File} */\n      const file = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode,\n        content: chunker(chunkValidator(contentAsAsyncIterable(entry.content), options), options)\n      }\n\n      yield () => fileBuilder(file, block, options)\n    } else if (entry.path) {\n      /** @type {Directory} */\n      const dir = {\n        path: entry.path,\n        mtime: entry.mtime,\n        mode: entry.mode\n      }\n\n      yield () => dirBuilder(dir, block, options)\n    } else {\n      throw new Error('Import candidate must have content or path or both')\n    }\n  }\n}\n\nmodule.exports = dagBuilder\n","'use strict'\n\nconst { UnixFS } = require('ipfs-unixfs')\nconst persist = require('../utils/persist')\nconst {\n  DAGNode\n} = require('ipld-dag-pb')\n\n/**\n * @typedef {import('../types').Directory} Directory\n */\n\n/**\n * @type {import('../types').UnixFSV1DagBuilder<Directory>}\n */\nconst dirBuilder = async (item, block, options) => {\n  const unixfs = new UnixFS({\n    type: 'directory',\n    mtime: item.mtime,\n    mode: item.mode\n  })\n\n  const buffer = new DAGNode(unixfs.marshal()).serialize()\n  const cid = await persist(buffer, block, options)\n  const path = item.path\n\n  return {\n    cid,\n    path,\n    unixfs,\n    size: buffer.length\n  }\n}\n\nmodule.exports = dirBuilder\n","/*eslint-disable*/\n\"use strict\";\n\nvar $protobuf = require(\"protobufjs/minimal\");\n\n// Common aliases\nvar $Reader = $protobuf.Reader, $Writer = $protobuf.Writer, $util = $protobuf.util;\n\n// Exported root namespace\nvar $root = $protobuf.roots[\"ipfs-unixfs\"] || ($protobuf.roots[\"ipfs-unixfs\"] = {});\n\n$root.Data = (function() {\n\n    /**\n     * Properties of a Data.\n     * @exports IData\n     * @interface IData\n     * @property {Data.DataType} Type Data Type\n     * @property {Uint8Array|null} [Data] Data Data\n     * @property {number|null} [filesize] Data filesize\n     * @property {Array.<number>|null} [blocksizes] Data blocksizes\n     * @property {number|null} [hashType] Data hashType\n     * @property {number|null} [fanout] Data fanout\n     * @property {number|null} [mode] Data mode\n     * @property {IUnixTime|null} [mtime] Data mtime\n     */\n\n    /**\n     * Constructs a new Data.\n     * @exports Data\n     * @classdesc Represents a Data.\n     * @implements IData\n     * @constructor\n     * @param {IData=} [p] Properties to set\n     */\n    function Data(p) {\n        this.blocksizes = [];\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Data Type.\n     * @member {Data.DataType} Type\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Type = 0;\n\n    /**\n     * Data Data.\n     * @member {Uint8Array} Data\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.Data = $util.newBuffer([]);\n\n    /**\n     * Data filesize.\n     * @member {number} filesize\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.filesize = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data blocksizes.\n     * @member {Array.<number>} blocksizes\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.blocksizes = $util.emptyArray;\n\n    /**\n     * Data hashType.\n     * @member {number} hashType\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.hashType = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data fanout.\n     * @member {number} fanout\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.fanout = $util.Long ? $util.Long.fromBits(0,0,true) : 0;\n\n    /**\n     * Data mode.\n     * @member {number} mode\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mode = 0;\n\n    /**\n     * Data mtime.\n     * @member {IUnixTime|null|undefined} mtime\n     * @memberof Data\n     * @instance\n     */\n    Data.prototype.mtime = null;\n\n    /**\n     * Encodes the specified Data message. Does not implicitly {@link Data.verify|verify} messages.\n     * @function encode\n     * @memberof Data\n     * @static\n     * @param {IData} m Data message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Data.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int32(m.Type);\n        if (m.Data != null && Object.hasOwnProperty.call(m, \"Data\"))\n            w.uint32(18).bytes(m.Data);\n        if (m.filesize != null && Object.hasOwnProperty.call(m, \"filesize\"))\n            w.uint32(24).uint64(m.filesize);\n        if (m.blocksizes != null && m.blocksizes.length) {\n            for (var i = 0; i < m.blocksizes.length; ++i)\n                w.uint32(32).uint64(m.blocksizes[i]);\n        }\n        if (m.hashType != null && Object.hasOwnProperty.call(m, \"hashType\"))\n            w.uint32(40).uint64(m.hashType);\n        if (m.fanout != null && Object.hasOwnProperty.call(m, \"fanout\"))\n            w.uint32(48).uint64(m.fanout);\n        if (m.mode != null && Object.hasOwnProperty.call(m, \"mode\"))\n            w.uint32(56).uint32(m.mode);\n        if (m.mtime != null && Object.hasOwnProperty.call(m, \"mtime\"))\n            $root.UnixTime.encode(m.mtime, w.uint32(66).fork()).ldelim();\n        return w;\n    };\n\n    /**\n     * Decodes a Data message from the specified reader or buffer.\n     * @function decode\n     * @memberof Data\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Data} Data\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Data.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Data();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Type = r.int32();\n                break;\n            case 2:\n                m.Data = r.bytes();\n                break;\n            case 3:\n                m.filesize = r.uint64();\n                break;\n            case 4:\n                if (!(m.blocksizes && m.blocksizes.length))\n                    m.blocksizes = [];\n                if ((t & 7) === 2) {\n                    var c2 = r.uint32() + r.pos;\n                    while (r.pos < c2)\n                        m.blocksizes.push(r.uint64());\n                } else\n                    m.blocksizes.push(r.uint64());\n                break;\n            case 5:\n                m.hashType = r.uint64();\n                break;\n            case 6:\n                m.fanout = r.uint64();\n                break;\n            case 7:\n                m.mode = r.uint32();\n                break;\n            case 8:\n                m.mtime = $root.UnixTime.decode(r, r.uint32());\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Type\"))\n            throw $util.ProtocolError(\"missing required 'Type'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates a Data message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Data\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Data} Data\n     */\n    Data.fromObject = function fromObject(d) {\n        if (d instanceof $root.Data)\n            return d;\n        var m = new $root.Data();\n        switch (d.Type) {\n        case \"Raw\":\n        case 0:\n            m.Type = 0;\n            break;\n        case \"Directory\":\n        case 1:\n            m.Type = 1;\n            break;\n        case \"File\":\n        case 2:\n            m.Type = 2;\n            break;\n        case \"Metadata\":\n        case 3:\n            m.Type = 3;\n            break;\n        case \"Symlink\":\n        case 4:\n            m.Type = 4;\n            break;\n        case \"HAMTShard\":\n        case 5:\n            m.Type = 5;\n            break;\n        }\n        if (d.Data != null) {\n            if (typeof d.Data === \"string\")\n                $util.base64.decode(d.Data, m.Data = $util.newBuffer($util.base64.length(d.Data)), 0);\n            else if (d.Data.length)\n                m.Data = d.Data;\n        }\n        if (d.filesize != null) {\n            if ($util.Long)\n                (m.filesize = $util.Long.fromValue(d.filesize)).unsigned = true;\n            else if (typeof d.filesize === \"string\")\n                m.filesize = parseInt(d.filesize, 10);\n            else if (typeof d.filesize === \"number\")\n                m.filesize = d.filesize;\n            else if (typeof d.filesize === \"object\")\n                m.filesize = new $util.LongBits(d.filesize.low >>> 0, d.filesize.high >>> 0).toNumber(true);\n        }\n        if (d.blocksizes) {\n            if (!Array.isArray(d.blocksizes))\n                throw TypeError(\".Data.blocksizes: array expected\");\n            m.blocksizes = [];\n            for (var i = 0; i < d.blocksizes.length; ++i) {\n                if ($util.Long)\n                    (m.blocksizes[i] = $util.Long.fromValue(d.blocksizes[i])).unsigned = true;\n                else if (typeof d.blocksizes[i] === \"string\")\n                    m.blocksizes[i] = parseInt(d.blocksizes[i], 10);\n                else if (typeof d.blocksizes[i] === \"number\")\n                    m.blocksizes[i] = d.blocksizes[i];\n                else if (typeof d.blocksizes[i] === \"object\")\n                    m.blocksizes[i] = new $util.LongBits(d.blocksizes[i].low >>> 0, d.blocksizes[i].high >>> 0).toNumber(true);\n            }\n        }\n        if (d.hashType != null) {\n            if ($util.Long)\n                (m.hashType = $util.Long.fromValue(d.hashType)).unsigned = true;\n            else if (typeof d.hashType === \"string\")\n                m.hashType = parseInt(d.hashType, 10);\n            else if (typeof d.hashType === \"number\")\n                m.hashType = d.hashType;\n            else if (typeof d.hashType === \"object\")\n                m.hashType = new $util.LongBits(d.hashType.low >>> 0, d.hashType.high >>> 0).toNumber(true);\n        }\n        if (d.fanout != null) {\n            if ($util.Long)\n                (m.fanout = $util.Long.fromValue(d.fanout)).unsigned = true;\n            else if (typeof d.fanout === \"string\")\n                m.fanout = parseInt(d.fanout, 10);\n            else if (typeof d.fanout === \"number\")\n                m.fanout = d.fanout;\n            else if (typeof d.fanout === \"object\")\n                m.fanout = new $util.LongBits(d.fanout.low >>> 0, d.fanout.high >>> 0).toNumber(true);\n        }\n        if (d.mode != null) {\n            m.mode = d.mode >>> 0;\n        }\n        if (d.mtime != null) {\n            if (typeof d.mtime !== \"object\")\n                throw TypeError(\".Data.mtime: object expected\");\n            m.mtime = $root.UnixTime.fromObject(d.mtime);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Data message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Data\n     * @static\n     * @param {Data} m Data\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Data.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.arrays || o.defaults) {\n            d.blocksizes = [];\n        }\n        if (o.defaults) {\n            d.Type = o.enums === String ? \"Raw\" : 0;\n            if (o.bytes === String)\n                d.Data = \"\";\n            else {\n                d.Data = [];\n                if (o.bytes !== Array)\n                    d.Data = $util.newBuffer(d.Data);\n            }\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.filesize = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.filesize = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.hashType = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.hashType = o.longs === String ? \"0\" : 0;\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, true);\n                d.fanout = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.fanout = o.longs === String ? \"0\" : 0;\n            d.mode = 0;\n            d.mtime = null;\n        }\n        if (m.Type != null && m.hasOwnProperty(\"Type\")) {\n            d.Type = o.enums === String ? $root.Data.DataType[m.Type] : m.Type;\n        }\n        if (m.Data != null && m.hasOwnProperty(\"Data\")) {\n            d.Data = o.bytes === String ? $util.base64.encode(m.Data, 0, m.Data.length) : o.bytes === Array ? Array.prototype.slice.call(m.Data) : m.Data;\n        }\n        if (m.filesize != null && m.hasOwnProperty(\"filesize\")) {\n            if (typeof m.filesize === \"number\")\n                d.filesize = o.longs === String ? String(m.filesize) : m.filesize;\n            else\n                d.filesize = o.longs === String ? $util.Long.prototype.toString.call(m.filesize) : o.longs === Number ? new $util.LongBits(m.filesize.low >>> 0, m.filesize.high >>> 0).toNumber(true) : m.filesize;\n        }\n        if (m.blocksizes && m.blocksizes.length) {\n            d.blocksizes = [];\n            for (var j = 0; j < m.blocksizes.length; ++j) {\n                if (typeof m.blocksizes[j] === \"number\")\n                    d.blocksizes[j] = o.longs === String ? String(m.blocksizes[j]) : m.blocksizes[j];\n                else\n                    d.blocksizes[j] = o.longs === String ? $util.Long.prototype.toString.call(m.blocksizes[j]) : o.longs === Number ? new $util.LongBits(m.blocksizes[j].low >>> 0, m.blocksizes[j].high >>> 0).toNumber(true) : m.blocksizes[j];\n            }\n        }\n        if (m.hashType != null && m.hasOwnProperty(\"hashType\")) {\n            if (typeof m.hashType === \"number\")\n                d.hashType = o.longs === String ? String(m.hashType) : m.hashType;\n            else\n                d.hashType = o.longs === String ? $util.Long.prototype.toString.call(m.hashType) : o.longs === Number ? new $util.LongBits(m.hashType.low >>> 0, m.hashType.high >>> 0).toNumber(true) : m.hashType;\n        }\n        if (m.fanout != null && m.hasOwnProperty(\"fanout\")) {\n            if (typeof m.fanout === \"number\")\n                d.fanout = o.longs === String ? String(m.fanout) : m.fanout;\n            else\n                d.fanout = o.longs === String ? $util.Long.prototype.toString.call(m.fanout) : o.longs === Number ? new $util.LongBits(m.fanout.low >>> 0, m.fanout.high >>> 0).toNumber(true) : m.fanout;\n        }\n        if (m.mode != null && m.hasOwnProperty(\"mode\")) {\n            d.mode = m.mode;\n        }\n        if (m.mtime != null && m.hasOwnProperty(\"mtime\")) {\n            d.mtime = $root.UnixTime.toObject(m.mtime, o);\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Data to JSON.\n     * @function toJSON\n     * @memberof Data\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Data.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    /**\n     * DataType enum.\n     * @name Data.DataType\n     * @enum {number}\n     * @property {number} Raw=0 Raw value\n     * @property {number} Directory=1 Directory value\n     * @property {number} File=2 File value\n     * @property {number} Metadata=3 Metadata value\n     * @property {number} Symlink=4 Symlink value\n     * @property {number} HAMTShard=5 HAMTShard value\n     */\n    Data.DataType = (function() {\n        var valuesById = {}, values = Object.create(valuesById);\n        values[valuesById[0] = \"Raw\"] = 0;\n        values[valuesById[1] = \"Directory\"] = 1;\n        values[valuesById[2] = \"File\"] = 2;\n        values[valuesById[3] = \"Metadata\"] = 3;\n        values[valuesById[4] = \"Symlink\"] = 4;\n        values[valuesById[5] = \"HAMTShard\"] = 5;\n        return values;\n    })();\n\n    return Data;\n})();\n\n$root.UnixTime = (function() {\n\n    /**\n     * Properties of an UnixTime.\n     * @exports IUnixTime\n     * @interface IUnixTime\n     * @property {number} Seconds UnixTime Seconds\n     * @property {number|null} [FractionalNanoseconds] UnixTime FractionalNanoseconds\n     */\n\n    /**\n     * Constructs a new UnixTime.\n     * @exports UnixTime\n     * @classdesc Represents an UnixTime.\n     * @implements IUnixTime\n     * @constructor\n     * @param {IUnixTime=} [p] Properties to set\n     */\n    function UnixTime(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * UnixTime Seconds.\n     * @member {number} Seconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.Seconds = $util.Long ? $util.Long.fromBits(0,0,false) : 0;\n\n    /**\n     * UnixTime FractionalNanoseconds.\n     * @member {number} FractionalNanoseconds\n     * @memberof UnixTime\n     * @instance\n     */\n    UnixTime.prototype.FractionalNanoseconds = 0;\n\n    /**\n     * Encodes the specified UnixTime message. Does not implicitly {@link UnixTime.verify|verify} messages.\n     * @function encode\n     * @memberof UnixTime\n     * @static\n     * @param {IUnixTime} m UnixTime message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    UnixTime.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        w.uint32(8).int64(m.Seconds);\n        if (m.FractionalNanoseconds != null && Object.hasOwnProperty.call(m, \"FractionalNanoseconds\"))\n            w.uint32(21).fixed32(m.FractionalNanoseconds);\n        return w;\n    };\n\n    /**\n     * Decodes an UnixTime message from the specified reader or buffer.\n     * @function decode\n     * @memberof UnixTime\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {UnixTime} UnixTime\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    UnixTime.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.UnixTime();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.Seconds = r.int64();\n                break;\n            case 2:\n                m.FractionalNanoseconds = r.fixed32();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        if (!m.hasOwnProperty(\"Seconds\"))\n            throw $util.ProtocolError(\"missing required 'Seconds'\", { instance: m });\n        return m;\n    };\n\n    /**\n     * Creates an UnixTime message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof UnixTime\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {UnixTime} UnixTime\n     */\n    UnixTime.fromObject = function fromObject(d) {\n        if (d instanceof $root.UnixTime)\n            return d;\n        var m = new $root.UnixTime();\n        if (d.Seconds != null) {\n            if ($util.Long)\n                (m.Seconds = $util.Long.fromValue(d.Seconds)).unsigned = false;\n            else if (typeof d.Seconds === \"string\")\n                m.Seconds = parseInt(d.Seconds, 10);\n            else if (typeof d.Seconds === \"number\")\n                m.Seconds = d.Seconds;\n            else if (typeof d.Seconds === \"object\")\n                m.Seconds = new $util.LongBits(d.Seconds.low >>> 0, d.Seconds.high >>> 0).toNumber();\n        }\n        if (d.FractionalNanoseconds != null) {\n            m.FractionalNanoseconds = d.FractionalNanoseconds >>> 0;\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from an UnixTime message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof UnixTime\n     * @static\n     * @param {UnixTime} m UnixTime\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    UnixTime.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            if ($util.Long) {\n                var n = new $util.Long(0, 0, false);\n                d.Seconds = o.longs === String ? n.toString() : o.longs === Number ? n.toNumber() : n;\n            } else\n                d.Seconds = o.longs === String ? \"0\" : 0;\n            d.FractionalNanoseconds = 0;\n        }\n        if (m.Seconds != null && m.hasOwnProperty(\"Seconds\")) {\n            if (typeof m.Seconds === \"number\")\n                d.Seconds = o.longs === String ? String(m.Seconds) : m.Seconds;\n            else\n                d.Seconds = o.longs === String ? $util.Long.prototype.toString.call(m.Seconds) : o.longs === Number ? new $util.LongBits(m.Seconds.low >>> 0, m.Seconds.high >>> 0).toNumber() : m.Seconds;\n        }\n        if (m.FractionalNanoseconds != null && m.hasOwnProperty(\"FractionalNanoseconds\")) {\n            d.FractionalNanoseconds = m.FractionalNanoseconds;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this UnixTime to JSON.\n     * @function toJSON\n     * @memberof UnixTime\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    UnixTime.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return UnixTime;\n})();\n\n$root.Metadata = (function() {\n\n    /**\n     * Properties of a Metadata.\n     * @exports IMetadata\n     * @interface IMetadata\n     * @property {string|null} [MimeType] Metadata MimeType\n     */\n\n    /**\n     * Constructs a new Metadata.\n     * @exports Metadata\n     * @classdesc Represents a Metadata.\n     * @implements IMetadata\n     * @constructor\n     * @param {IMetadata=} [p] Properties to set\n     */\n    function Metadata(p) {\n        if (p)\n            for (var ks = Object.keys(p), i = 0; i < ks.length; ++i)\n                if (p[ks[i]] != null)\n                    this[ks[i]] = p[ks[i]];\n    }\n\n    /**\n     * Metadata MimeType.\n     * @member {string} MimeType\n     * @memberof Metadata\n     * @instance\n     */\n    Metadata.prototype.MimeType = \"\";\n\n    /**\n     * Encodes the specified Metadata message. Does not implicitly {@link Metadata.verify|verify} messages.\n     * @function encode\n     * @memberof Metadata\n     * @static\n     * @param {IMetadata} m Metadata message or plain object to encode\n     * @param {$protobuf.Writer} [w] Writer to encode to\n     * @returns {$protobuf.Writer} Writer\n     */\n    Metadata.encode = function encode(m, w) {\n        if (!w)\n            w = $Writer.create();\n        if (m.MimeType != null && Object.hasOwnProperty.call(m, \"MimeType\"))\n            w.uint32(10).string(m.MimeType);\n        return w;\n    };\n\n    /**\n     * Decodes a Metadata message from the specified reader or buffer.\n     * @function decode\n     * @memberof Metadata\n     * @static\n     * @param {$protobuf.Reader|Uint8Array} r Reader or buffer to decode from\n     * @param {number} [l] Message length if known beforehand\n     * @returns {Metadata} Metadata\n     * @throws {Error} If the payload is not a reader or valid buffer\n     * @throws {$protobuf.util.ProtocolError} If required fields are missing\n     */\n    Metadata.decode = function decode(r, l) {\n        if (!(r instanceof $Reader))\n            r = $Reader.create(r);\n        var c = l === undefined ? r.len : r.pos + l, m = new $root.Metadata();\n        while (r.pos < c) {\n            var t = r.uint32();\n            switch (t >>> 3) {\n            case 1:\n                m.MimeType = r.string();\n                break;\n            default:\n                r.skipType(t & 7);\n                break;\n            }\n        }\n        return m;\n    };\n\n    /**\n     * Creates a Metadata message from a plain object. Also converts values to their respective internal types.\n     * @function fromObject\n     * @memberof Metadata\n     * @static\n     * @param {Object.<string,*>} d Plain object\n     * @returns {Metadata} Metadata\n     */\n    Metadata.fromObject = function fromObject(d) {\n        if (d instanceof $root.Metadata)\n            return d;\n        var m = new $root.Metadata();\n        if (d.MimeType != null) {\n            m.MimeType = String(d.MimeType);\n        }\n        return m;\n    };\n\n    /**\n     * Creates a plain object from a Metadata message. Also converts values to other types if specified.\n     * @function toObject\n     * @memberof Metadata\n     * @static\n     * @param {Metadata} m Metadata\n     * @param {$protobuf.IConversionOptions} [o] Conversion options\n     * @returns {Object.<string,*>} Plain object\n     */\n    Metadata.toObject = function toObject(m, o) {\n        if (!o)\n            o = {};\n        var d = {};\n        if (o.defaults) {\n            d.MimeType = \"\";\n        }\n        if (m.MimeType != null && m.hasOwnProperty(\"MimeType\")) {\n            d.MimeType = m.MimeType;\n        }\n        return d;\n    };\n\n    /**\n     * Converts this Metadata to JSON.\n     * @function toJSON\n     * @memberof Metadata\n     * @instance\n     * @returns {Object.<string,*>} JSON object\n     */\n    Metadata.prototype.toJSON = function toJSON() {\n        return this.constructor.toObject(this, $protobuf.util.toJSONOptions);\n    };\n\n    return Metadata;\n})();\n\nmodule.exports = $root;\n","\"use strict\";\nvar protobuf = exports;\n\n/**\n * Build type, one of `\"full\"`, `\"light\"` or `\"minimal\"`.\n * @name build\n * @type {string}\n * @const\n */\nprotobuf.build = \"minimal\";\n\n// Serialization\nprotobuf.Writer       = require(\"./writer\");\nprotobuf.BufferWriter = require(\"./writer_buffer\");\nprotobuf.Reader       = require(\"./reader\");\nprotobuf.BufferReader = require(\"./reader_buffer\");\n\n// Utility\nprotobuf.util         = require(\"./util/minimal\");\nprotobuf.rpc          = require(\"./rpc\");\nprotobuf.roots        = require(\"./roots\");\nprotobuf.configure    = configure;\n\n/* istanbul ignore next */\n/**\n * Reconfigures the library according to the environment.\n * @returns {undefined}\n */\nfunction configure() {\n    protobuf.util._configure();\n    protobuf.Writer._configure(protobuf.BufferWriter);\n    protobuf.Reader._configure(protobuf.BufferReader);\n}\n\n// Set up buffer utility according to the environment\nconfigure();\n","\"use strict\";\r\nmodule.exports = asPromise;\r\n\r\n/**\r\n * Callback as used by {@link util.asPromise}.\r\n * @typedef asPromiseCallback\r\n * @type {function}\r\n * @param {Error|null} error Error, if any\r\n * @param {...*} params Additional arguments\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Returns a promise from a node-style callback function.\r\n * @memberof util\r\n * @param {asPromiseCallback} fn Function to call\r\n * @param {*} ctx Function context\r\n * @param {...*} params Function arguments\r\n * @returns {Promise<*>} Promisified function\r\n */\r\nfunction asPromise(fn, ctx/*, varargs */) {\r\n    var params  = new Array(arguments.length - 1),\r\n        offset  = 0,\r\n        index   = 2,\r\n        pending = true;\r\n    while (index < arguments.length)\r\n        params[offset++] = arguments[index++];\r\n    return new Promise(function executor(resolve, reject) {\r\n        params[offset] = function callback(err/*, varargs */) {\r\n            if (pending) {\r\n                pending = false;\r\n                if (err)\r\n                    reject(err);\r\n                else {\r\n                    var params = new Array(arguments.length - 1),\r\n                        offset = 0;\r\n                    while (offset < params.length)\r\n                        params[offset++] = arguments[offset];\r\n                    resolve.apply(null, params);\r\n                }\r\n            }\r\n        };\r\n        try {\r\n            fn.apply(ctx || null, params);\r\n        } catch (err) {\r\n            if (pending) {\r\n                pending = false;\r\n                reject(err);\r\n            }\r\n        }\r\n    });\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal base64 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar base64 = exports;\r\n\r\n/**\r\n * Calculates the byte length of a base64 encoded string.\r\n * @param {string} string Base64 encoded string\r\n * @returns {number} Byte length\r\n */\r\nbase64.length = function length(string) {\r\n    var p = string.length;\r\n    if (!p)\r\n        return 0;\r\n    var n = 0;\r\n    while (--p % 4 > 1 && string.charAt(p) === \"=\")\r\n        ++n;\r\n    return Math.ceil(string.length * 3) / 4 - n;\r\n};\r\n\r\n// Base64 encoding table\r\nvar b64 = new Array(64);\r\n\r\n// Base64 decoding table\r\nvar s64 = new Array(123);\r\n\r\n// 65..90, 97..122, 48..57, 43, 47\r\nfor (var i = 0; i < 64;)\r\n    s64[b64[i] = i < 26 ? i + 65 : i < 52 ? i + 71 : i < 62 ? i - 4 : i - 59 | 43] = i++;\r\n\r\n/**\r\n * Encodes a buffer to a base64 encoded string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} Base64 encoded string\r\n */\r\nbase64.encode = function encode(buffer, start, end) {\r\n    var parts = null,\r\n        chunk = [];\r\n    var i = 0, // output index\r\n        j = 0, // goto index\r\n        t;     // temporary\r\n    while (start < end) {\r\n        var b = buffer[start++];\r\n        switch (j) {\r\n            case 0:\r\n                chunk[i++] = b64[b >> 2];\r\n                t = (b & 3) << 4;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                chunk[i++] = b64[t | b >> 4];\r\n                t = (b & 15) << 2;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                chunk[i++] = b64[t | b >> 6];\r\n                chunk[i++] = b64[b & 63];\r\n                j = 0;\r\n                break;\r\n        }\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (j) {\r\n        chunk[i++] = b64[t];\r\n        chunk[i++] = 61;\r\n        if (j === 1)\r\n            chunk[i++] = 61;\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\nvar invalidEncoding = \"invalid encoding\";\r\n\r\n/**\r\n * Decodes a base64 encoded string to a buffer.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Number of bytes written\r\n * @throws {Error} If encoding is invalid\r\n */\r\nbase64.decode = function decode(string, buffer, offset) {\r\n    var start = offset;\r\n    var j = 0, // goto index\r\n        t;     // temporary\r\n    for (var i = 0; i < string.length;) {\r\n        var c = string.charCodeAt(i++);\r\n        if (c === 61 && j > 1)\r\n            break;\r\n        if ((c = s64[c]) === undefined)\r\n            throw Error(invalidEncoding);\r\n        switch (j) {\r\n            case 0:\r\n                t = c;\r\n                j = 1;\r\n                break;\r\n            case 1:\r\n                buffer[offset++] = t << 2 | (c & 48) >> 4;\r\n                t = c;\r\n                j = 2;\r\n                break;\r\n            case 2:\r\n                buffer[offset++] = (t & 15) << 4 | (c & 60) >> 2;\r\n                t = c;\r\n                j = 3;\r\n                break;\r\n            case 3:\r\n                buffer[offset++] = (t & 3) << 6 | c;\r\n                j = 0;\r\n                break;\r\n        }\r\n    }\r\n    if (j === 1)\r\n        throw Error(invalidEncoding);\r\n    return offset - start;\r\n};\r\n\r\n/**\r\n * Tests if the specified string appears to be base64 encoded.\r\n * @param {string} string String to test\r\n * @returns {boolean} `true` if probably base64 encoded, otherwise false\r\n */\r\nbase64.test = function test(string) {\r\n    return /^(?:[A-Za-z0-9+/]{4})*(?:[A-Za-z0-9+/]{2}==|[A-Za-z0-9+/]{3}=)?$/.test(string);\r\n};\r\n","\"use strict\";\r\nmodule.exports = EventEmitter;\r\n\r\n/**\r\n * Constructs a new event emitter instance.\r\n * @classdesc A minimal event emitter.\r\n * @memberof util\r\n * @constructor\r\n */\r\nfunction EventEmitter() {\r\n\r\n    /**\r\n     * Registered listeners.\r\n     * @type {Object.<string,*>}\r\n     * @private\r\n     */\r\n    this._listeners = {};\r\n}\r\n\r\n/**\r\n * Registers an event listener.\r\n * @param {string} evt Event name\r\n * @param {function} fn Listener\r\n * @param {*} [ctx] Listener context\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.on = function on(evt, fn, ctx) {\r\n    (this._listeners[evt] || (this._listeners[evt] = [])).push({\r\n        fn  : fn,\r\n        ctx : ctx || this\r\n    });\r\n    return this;\r\n};\r\n\r\n/**\r\n * Removes an event listener or any matching listeners if arguments are omitted.\r\n * @param {string} [evt] Event name. Removes all listeners if omitted.\r\n * @param {function} [fn] Listener to remove. Removes all listeners of `evt` if omitted.\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.off = function off(evt, fn) {\r\n    if (evt === undefined)\r\n        this._listeners = {};\r\n    else {\r\n        if (fn === undefined)\r\n            this._listeners[evt] = [];\r\n        else {\r\n            var listeners = this._listeners[evt];\r\n            for (var i = 0; i < listeners.length;)\r\n                if (listeners[i].fn === fn)\r\n                    listeners.splice(i, 1);\r\n                else\r\n                    ++i;\r\n        }\r\n    }\r\n    return this;\r\n};\r\n\r\n/**\r\n * Emits an event by calling its listeners with the specified arguments.\r\n * @param {string} evt Event name\r\n * @param {...*} args Arguments\r\n * @returns {util.EventEmitter} `this`\r\n */\r\nEventEmitter.prototype.emit = function emit(evt) {\r\n    var listeners = this._listeners[evt];\r\n    if (listeners) {\r\n        var args = [],\r\n            i = 1;\r\n        for (; i < arguments.length;)\r\n            args.push(arguments[i++]);\r\n        for (i = 0; i < listeners.length;)\r\n            listeners[i].fn.apply(listeners[i++].ctx, args);\r\n    }\r\n    return this;\r\n};\r\n","\"use strict\";\r\n\r\nmodule.exports = factory(factory);\r\n\r\n/**\r\n * Reads / writes floats / doubles from / to buffers.\r\n * @name util.float\r\n * @namespace\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using little endian byte order.\r\n * @name util.float.writeFloatLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 32 bit float to a buffer using big endian byte order.\r\n * @name util.float.writeFloatBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using little endian byte order.\r\n * @name util.float.readFloatLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 32 bit float from a buffer using big endian byte order.\r\n * @name util.float.readFloatBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using little endian byte order.\r\n * @name util.float.writeDoubleLE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Writes a 64 bit double to a buffer using big endian byte order.\r\n * @name util.float.writeDoubleBE\r\n * @function\r\n * @param {number} val Value to write\r\n * @param {Uint8Array} buf Target buffer\r\n * @param {number} pos Target buffer offset\r\n * @returns {undefined}\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using little endian byte order.\r\n * @name util.float.readDoubleLE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n/**\r\n * Reads a 64 bit double from a buffer using big endian byte order.\r\n * @name util.float.readDoubleBE\r\n * @function\r\n * @param {Uint8Array} buf Source buffer\r\n * @param {number} pos Source buffer offset\r\n * @returns {number} Value read\r\n */\r\n\r\n// Factory function for the purpose of node-based testing in modified global environments\r\nfunction factory(exports) {\r\n\r\n    // float: typed array\r\n    if (typeof Float32Array !== \"undefined\") (function() {\r\n\r\n        var f32 = new Float32Array([ -0 ]),\r\n            f8b = new Uint8Array(f32.buffer),\r\n            le  = f8b[3] === 128;\r\n\r\n        function writeFloat_f32_cpy(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n        }\r\n\r\n        function writeFloat_f32_rev(val, buf, pos) {\r\n            f32[0] = val;\r\n            buf[pos    ] = f8b[3];\r\n            buf[pos + 1] = f8b[2];\r\n            buf[pos + 2] = f8b[1];\r\n            buf[pos + 3] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeFloatLE = le ? writeFloat_f32_cpy : writeFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeFloatBE = le ? writeFloat_f32_rev : writeFloat_f32_cpy;\r\n\r\n        function readFloat_f32_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        function readFloat_f32_rev(buf, pos) {\r\n            f8b[3] = buf[pos    ];\r\n            f8b[2] = buf[pos + 1];\r\n            f8b[1] = buf[pos + 2];\r\n            f8b[0] = buf[pos + 3];\r\n            return f32[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readFloatLE = le ? readFloat_f32_cpy : readFloat_f32_rev;\r\n        /* istanbul ignore next */\r\n        exports.readFloatBE = le ? readFloat_f32_rev : readFloat_f32_cpy;\r\n\r\n    // float: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeFloat_ieee754(writeUint, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0)\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos);\r\n            else if (isNaN(val))\r\n                writeUint(2143289344, buf, pos);\r\n            else if (val > 3.4028234663852886e+38) // +-Infinity\r\n                writeUint((sign << 31 | 2139095040) >>> 0, buf, pos);\r\n            else if (val < 1.1754943508222875e-38) // denormal\r\n                writeUint((sign << 31 | Math.round(val / 1.401298464324817e-45)) >>> 0, buf, pos);\r\n            else {\r\n                var exponent = Math.floor(Math.log(val) / Math.LN2),\r\n                    mantissa = Math.round(val * Math.pow(2, -exponent) * 8388608) & 8388607;\r\n                writeUint((sign << 31 | exponent + 127 << 23 | mantissa) >>> 0, buf, pos);\r\n            }\r\n        }\r\n\r\n        exports.writeFloatLE = writeFloat_ieee754.bind(null, writeUintLE);\r\n        exports.writeFloatBE = writeFloat_ieee754.bind(null, writeUintBE);\r\n\r\n        function readFloat_ieee754(readUint, buf, pos) {\r\n            var uint = readUint(buf, pos),\r\n                sign = (uint >> 31) * 2 + 1,\r\n                exponent = uint >>> 23 & 255,\r\n                mantissa = uint & 8388607;\r\n            return exponent === 255\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 1.401298464324817e-45 * mantissa\r\n                : sign * Math.pow(2, exponent - 150) * (mantissa + 8388608);\r\n        }\r\n\r\n        exports.readFloatLE = readFloat_ieee754.bind(null, readUintLE);\r\n        exports.readFloatBE = readFloat_ieee754.bind(null, readUintBE);\r\n\r\n    })();\r\n\r\n    // double: typed array\r\n    if (typeof Float64Array !== \"undefined\") (function() {\r\n\r\n        var f64 = new Float64Array([-0]),\r\n            f8b = new Uint8Array(f64.buffer),\r\n            le  = f8b[7] === 128;\r\n\r\n        function writeDouble_f64_cpy(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[0];\r\n            buf[pos + 1] = f8b[1];\r\n            buf[pos + 2] = f8b[2];\r\n            buf[pos + 3] = f8b[3];\r\n            buf[pos + 4] = f8b[4];\r\n            buf[pos + 5] = f8b[5];\r\n            buf[pos + 6] = f8b[6];\r\n            buf[pos + 7] = f8b[7];\r\n        }\r\n\r\n        function writeDouble_f64_rev(val, buf, pos) {\r\n            f64[0] = val;\r\n            buf[pos    ] = f8b[7];\r\n            buf[pos + 1] = f8b[6];\r\n            buf[pos + 2] = f8b[5];\r\n            buf[pos + 3] = f8b[4];\r\n            buf[pos + 4] = f8b[3];\r\n            buf[pos + 5] = f8b[2];\r\n            buf[pos + 6] = f8b[1];\r\n            buf[pos + 7] = f8b[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleLE = le ? writeDouble_f64_cpy : writeDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.writeDoubleBE = le ? writeDouble_f64_rev : writeDouble_f64_cpy;\r\n\r\n        function readDouble_f64_cpy(buf, pos) {\r\n            f8b[0] = buf[pos    ];\r\n            f8b[1] = buf[pos + 1];\r\n            f8b[2] = buf[pos + 2];\r\n            f8b[3] = buf[pos + 3];\r\n            f8b[4] = buf[pos + 4];\r\n            f8b[5] = buf[pos + 5];\r\n            f8b[6] = buf[pos + 6];\r\n            f8b[7] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        function readDouble_f64_rev(buf, pos) {\r\n            f8b[7] = buf[pos    ];\r\n            f8b[6] = buf[pos + 1];\r\n            f8b[5] = buf[pos + 2];\r\n            f8b[4] = buf[pos + 3];\r\n            f8b[3] = buf[pos + 4];\r\n            f8b[2] = buf[pos + 5];\r\n            f8b[1] = buf[pos + 6];\r\n            f8b[0] = buf[pos + 7];\r\n            return f64[0];\r\n        }\r\n\r\n        /* istanbul ignore next */\r\n        exports.readDoubleLE = le ? readDouble_f64_cpy : readDouble_f64_rev;\r\n        /* istanbul ignore next */\r\n        exports.readDoubleBE = le ? readDouble_f64_rev : readDouble_f64_cpy;\r\n\r\n    // double: ieee754\r\n    })(); else (function() {\r\n\r\n        function writeDouble_ieee754(writeUint, off0, off1, val, buf, pos) {\r\n            var sign = val < 0 ? 1 : 0;\r\n            if (sign)\r\n                val = -val;\r\n            if (val === 0) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(1 / val > 0 ? /* positive */ 0 : /* negative 0 */ 2147483648, buf, pos + off1);\r\n            } else if (isNaN(val)) {\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint(2146959360, buf, pos + off1);\r\n            } else if (val > 1.7976931348623157e+308) { // +-Infinity\r\n                writeUint(0, buf, pos + off0);\r\n                writeUint((sign << 31 | 2146435072) >>> 0, buf, pos + off1);\r\n            } else {\r\n                var mantissa;\r\n                if (val < 2.2250738585072014e-308) { // denormal\r\n                    mantissa = val / 5e-324;\r\n                    writeUint(mantissa >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | mantissa / 4294967296) >>> 0, buf, pos + off1);\r\n                } else {\r\n                    var exponent = Math.floor(Math.log(val) / Math.LN2);\r\n                    if (exponent === 1024)\r\n                        exponent = 1023;\r\n                    mantissa = val * Math.pow(2, -exponent);\r\n                    writeUint(mantissa * 4503599627370496 >>> 0, buf, pos + off0);\r\n                    writeUint((sign << 31 | exponent + 1023 << 20 | mantissa * 1048576 & 1048575) >>> 0, buf, pos + off1);\r\n                }\r\n            }\r\n        }\r\n\r\n        exports.writeDoubleLE = writeDouble_ieee754.bind(null, writeUintLE, 0, 4);\r\n        exports.writeDoubleBE = writeDouble_ieee754.bind(null, writeUintBE, 4, 0);\r\n\r\n        function readDouble_ieee754(readUint, off0, off1, buf, pos) {\r\n            var lo = readUint(buf, pos + off0),\r\n                hi = readUint(buf, pos + off1);\r\n            var sign = (hi >> 31) * 2 + 1,\r\n                exponent = hi >>> 20 & 2047,\r\n                mantissa = 4294967296 * (hi & 1048575) + lo;\r\n            return exponent === 2047\r\n                ? mantissa\r\n                ? NaN\r\n                : sign * Infinity\r\n                : exponent === 0 // denormal\r\n                ? sign * 5e-324 * mantissa\r\n                : sign * Math.pow(2, exponent - 1075) * (mantissa + 4503599627370496);\r\n        }\r\n\r\n        exports.readDoubleLE = readDouble_ieee754.bind(null, readUintLE, 0, 4);\r\n        exports.readDoubleBE = readDouble_ieee754.bind(null, readUintBE, 4, 0);\r\n\r\n    })();\r\n\r\n    return exports;\r\n}\r\n\r\n// uint helpers\r\n\r\nfunction writeUintLE(val, buf, pos) {\r\n    buf[pos    ] =  val        & 255;\r\n    buf[pos + 1] =  val >>> 8  & 255;\r\n    buf[pos + 2] =  val >>> 16 & 255;\r\n    buf[pos + 3] =  val >>> 24;\r\n}\r\n\r\nfunction writeUintBE(val, buf, pos) {\r\n    buf[pos    ] =  val >>> 24;\r\n    buf[pos + 1] =  val >>> 16 & 255;\r\n    buf[pos + 2] =  val >>> 8  & 255;\r\n    buf[pos + 3] =  val        & 255;\r\n}\r\n\r\nfunction readUintLE(buf, pos) {\r\n    return (buf[pos    ]\r\n          | buf[pos + 1] << 8\r\n          | buf[pos + 2] << 16\r\n          | buf[pos + 3] << 24) >>> 0;\r\n}\r\n\r\nfunction readUintBE(buf, pos) {\r\n    return (buf[pos    ] << 24\r\n          | buf[pos + 1] << 16\r\n          | buf[pos + 2] << 8\r\n          | buf[pos + 3]) >>> 0;\r\n}\r\n","\"use strict\";\r\nmodule.exports = inquire;\r\n\r\n/**\r\n * Requires a module only if available.\r\n * @memberof util\r\n * @param {string} moduleName Module to require\r\n * @returns {?Object} Required module if available and not empty, otherwise `null`\r\n */\r\nfunction inquire(moduleName) {\r\n    try {\r\n        var mod = eval(\"quire\".replace(/^/,\"re\"))(moduleName); // eslint-disable-line no-eval\r\n        if (mod && (mod.length || Object.keys(mod).length))\r\n            return mod;\r\n    } catch (e) {} // eslint-disable-line no-empty\r\n    return null;\r\n}\r\n","\"use strict\";\r\n\r\n/**\r\n * A minimal UTF8 implementation for number arrays.\r\n * @memberof util\r\n * @namespace\r\n */\r\nvar utf8 = exports;\r\n\r\n/**\r\n * Calculates the UTF8 byte length of a string.\r\n * @param {string} string String\r\n * @returns {number} Byte length\r\n */\r\nutf8.length = function utf8_length(string) {\r\n    var len = 0,\r\n        c = 0;\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c = string.charCodeAt(i);\r\n        if (c < 128)\r\n            len += 1;\r\n        else if (c < 2048)\r\n            len += 2;\r\n        else if ((c & 0xFC00) === 0xD800 && (string.charCodeAt(i + 1) & 0xFC00) === 0xDC00) {\r\n            ++i;\r\n            len += 4;\r\n        } else\r\n            len += 3;\r\n    }\r\n    return len;\r\n};\r\n\r\n/**\r\n * Reads UTF8 bytes as a string.\r\n * @param {Uint8Array} buffer Source buffer\r\n * @param {number} start Source start\r\n * @param {number} end Source end\r\n * @returns {string} String read\r\n */\r\nutf8.read = function utf8_read(buffer, start, end) {\r\n    var len = end - start;\r\n    if (len < 1)\r\n        return \"\";\r\n    var parts = null,\r\n        chunk = [],\r\n        i = 0, // char offset\r\n        t;     // temporary\r\n    while (start < end) {\r\n        t = buffer[start++];\r\n        if (t < 128)\r\n            chunk[i++] = t;\r\n        else if (t > 191 && t < 224)\r\n            chunk[i++] = (t & 31) << 6 | buffer[start++] & 63;\r\n        else if (t > 239 && t < 365) {\r\n            t = ((t & 7) << 18 | (buffer[start++] & 63) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63) - 0x10000;\r\n            chunk[i++] = 0xD800 + (t >> 10);\r\n            chunk[i++] = 0xDC00 + (t & 1023);\r\n        } else\r\n            chunk[i++] = (t & 15) << 12 | (buffer[start++] & 63) << 6 | buffer[start++] & 63;\r\n        if (i > 8191) {\r\n            (parts || (parts = [])).push(String.fromCharCode.apply(String, chunk));\r\n            i = 0;\r\n        }\r\n    }\r\n    if (parts) {\r\n        if (i)\r\n            parts.push(String.fromCharCode.apply(String, chunk.slice(0, i)));\r\n        return parts.join(\"\");\r\n    }\r\n    return String.fromCharCode.apply(String, chunk.slice(0, i));\r\n};\r\n\r\n/**\r\n * Writes a string as UTF8 bytes.\r\n * @param {string} string Source string\r\n * @param {Uint8Array} buffer Destination buffer\r\n * @param {number} offset Destination offset\r\n * @returns {number} Bytes written\r\n */\r\nutf8.write = function utf8_write(string, buffer, offset) {\r\n    var start = offset,\r\n        c1, // character 1\r\n        c2; // character 2\r\n    for (var i = 0; i < string.length; ++i) {\r\n        c1 = string.charCodeAt(i);\r\n        if (c1 < 128) {\r\n            buffer[offset++] = c1;\r\n        } else if (c1 < 2048) {\r\n            buffer[offset++] = c1 >> 6       | 192;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else if ((c1 & 0xFC00) === 0xD800 && ((c2 = string.charCodeAt(i + 1)) & 0xFC00) === 0xDC00) {\r\n            c1 = 0x10000 + ((c1 & 0x03FF) << 10) + (c2 & 0x03FF);\r\n            ++i;\r\n            buffer[offset++] = c1 >> 18      | 240;\r\n            buffer[offset++] = c1 >> 12 & 63 | 128;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        } else {\r\n            buffer[offset++] = c1 >> 12      | 224;\r\n            buffer[offset++] = c1 >> 6  & 63 | 128;\r\n            buffer[offset++] = c1       & 63 | 128;\r\n        }\r\n    }\r\n    return offset - start;\r\n};\r\n","\"use strict\";\r\nmodule.exports = pool;\r\n\r\n/**\r\n * An allocator as used by {@link util.pool}.\r\n * @typedef PoolAllocator\r\n * @type {function}\r\n * @param {number} size Buffer size\r\n * @returns {Uint8Array} Buffer\r\n */\r\n\r\n/**\r\n * A slicer as used by {@link util.pool}.\r\n * @typedef PoolSlicer\r\n * @type {function}\r\n * @param {number} start Start offset\r\n * @param {number} end End offset\r\n * @returns {Uint8Array} Buffer slice\r\n * @this {Uint8Array}\r\n */\r\n\r\n/**\r\n * A general purpose buffer pool.\r\n * @memberof util\r\n * @function\r\n * @param {PoolAllocator} alloc Allocator\r\n * @param {PoolSlicer} slice Slicer\r\n * @param {number} [size=8192] Slab size\r\n * @returns {PoolAllocator} Pooled allocator\r\n */\r\nfunction pool(alloc, slice, size) {\r\n    var SIZE   = size || 8192;\r\n    var MAX    = SIZE >>> 1;\r\n    var slab   = null;\r\n    var offset = SIZE;\r\n    return function pool_alloc(size) {\r\n        if (size < 1 || size > MAX)\r\n            return alloc(size);\r\n        if (offset + size > SIZE) {\r\n            slab = alloc(SIZE);\r\n            offset = 0;\r\n        }\r\n        var buf = slice.call(slab, offset, offset += size);\r\n        if (offset & 7) // align to 32 bit\r\n            offset = (offset | 7) + 1;\r\n        return buf;\r\n    };\r\n}\r\n","\"use strict\";\nmodule.exports = LongBits;\n\nvar util = require(\"../util/minimal\");\n\n/**\n * Constructs new long bits.\n * @classdesc Helper class for working with the low and high bits of a 64 bit value.\n * @memberof util\n * @constructor\n * @param {number} lo Low 32 bits, unsigned\n * @param {number} hi High 32 bits, unsigned\n */\nfunction LongBits(lo, hi) {\n\n    // note that the casts below are theoretically unnecessary as of today, but older statically\n    // generated converter code might still call the ctor with signed 32bits. kept for compat.\n\n    /**\n     * Low bits.\n     * @type {number}\n     */\n    this.lo = lo >>> 0;\n\n    /**\n     * High bits.\n     * @type {number}\n     */\n    this.hi = hi >>> 0;\n}\n\n/**\n * Zero bits.\n * @memberof util.LongBits\n * @type {util.LongBits}\n */\nvar zero = LongBits.zero = new LongBits(0, 0);\n\nzero.toNumber = function() { return 0; };\nzero.zzEncode = zero.zzDecode = function() { return this; };\nzero.length = function() { return 1; };\n\n/**\n * Zero hash.\n * @memberof util.LongBits\n * @type {string}\n */\nvar zeroHash = LongBits.zeroHash = \"\\0\\0\\0\\0\\0\\0\\0\\0\";\n\n/**\n * Constructs new long bits from the specified number.\n * @param {number} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.fromNumber = function fromNumber(value) {\n    if (value === 0)\n        return zero;\n    var sign = value < 0;\n    if (sign)\n        value = -value;\n    var lo = value >>> 0,\n        hi = (value - lo) / 4294967296 >>> 0;\n    if (sign) {\n        hi = ~hi >>> 0;\n        lo = ~lo >>> 0;\n        if (++lo > 4294967295) {\n            lo = 0;\n            if (++hi > 4294967295)\n                hi = 0;\n        }\n    }\n    return new LongBits(lo, hi);\n};\n\n/**\n * Constructs new long bits from a number, long or string.\n * @param {Long|number|string} value Value\n * @returns {util.LongBits} Instance\n */\nLongBits.from = function from(value) {\n    if (typeof value === \"number\")\n        return LongBits.fromNumber(value);\n    if (util.isString(value)) {\n        /* istanbul ignore else */\n        if (util.Long)\n            value = util.Long.fromString(value);\n        else\n            return LongBits.fromNumber(parseInt(value, 10));\n    }\n    return value.low || value.high ? new LongBits(value.low >>> 0, value.high >>> 0) : zero;\n};\n\n/**\n * Converts this long bits to a possibly unsafe JavaScript number.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {number} Possibly unsafe number\n */\nLongBits.prototype.toNumber = function toNumber(unsigned) {\n    if (!unsigned && this.hi >>> 31) {\n        var lo = ~this.lo + 1 >>> 0,\n            hi = ~this.hi     >>> 0;\n        if (!lo)\n            hi = hi + 1 >>> 0;\n        return -(lo + hi * 4294967296);\n    }\n    return this.lo + this.hi * 4294967296;\n};\n\n/**\n * Converts this long bits to a long.\n * @param {boolean} [unsigned=false] Whether unsigned or not\n * @returns {Long} Long\n */\nLongBits.prototype.toLong = function toLong(unsigned) {\n    return util.Long\n        ? new util.Long(this.lo | 0, this.hi | 0, Boolean(unsigned))\n        /* istanbul ignore next */\n        : { low: this.lo | 0, high: this.hi | 0, unsigned: Boolean(unsigned) };\n};\n\nvar charCodeAt = String.prototype.charCodeAt;\n\n/**\n * Constructs new long bits from the specified 8 characters long hash.\n * @param {string} hash Hash\n * @returns {util.LongBits} Bits\n */\nLongBits.fromHash = function fromHash(hash) {\n    if (hash === zeroHash)\n        return zero;\n    return new LongBits(\n        ( charCodeAt.call(hash, 0)\n        | charCodeAt.call(hash, 1) << 8\n        | charCodeAt.call(hash, 2) << 16\n        | charCodeAt.call(hash, 3) << 24) >>> 0\n    ,\n        ( charCodeAt.call(hash, 4)\n        | charCodeAt.call(hash, 5) << 8\n        | charCodeAt.call(hash, 6) << 16\n        | charCodeAt.call(hash, 7) << 24) >>> 0\n    );\n};\n\n/**\n * Converts this long bits to a 8 characters long hash.\n * @returns {string} Hash\n */\nLongBits.prototype.toHash = function toHash() {\n    return String.fromCharCode(\n        this.lo        & 255,\n        this.lo >>> 8  & 255,\n        this.lo >>> 16 & 255,\n        this.lo >>> 24      ,\n        this.hi        & 255,\n        this.hi >>> 8  & 255,\n        this.hi >>> 16 & 255,\n        this.hi >>> 24\n    );\n};\n\n/**\n * Zig-zag encodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzEncode = function zzEncode() {\n    var mask =   this.hi >> 31;\n    this.hi  = ((this.hi << 1 | this.lo >>> 31) ^ mask) >>> 0;\n    this.lo  = ( this.lo << 1                   ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Zig-zag decodes this long bits.\n * @returns {util.LongBits} `this`\n */\nLongBits.prototype.zzDecode = function zzDecode() {\n    var mask = -(this.lo & 1);\n    this.lo  = ((this.lo >>> 1 | this.hi << 31) ^ mask) >>> 0;\n    this.hi  = ( this.hi >>> 1                  ^ mask) >>> 0;\n    return this;\n};\n\n/**\n * Calculates the length of this longbits when encoded as a varint.\n * @returns {number} Length\n */\nLongBits.prototype.length = function length() {\n    var part0 =  this.lo,\n        part1 = (this.lo >>> 28 | this.hi << 4) >>> 0,\n        part2 =  this.hi >>> 24;\n    return part2 === 0\n         ? part1 === 0\n           ? part0 < 16384\n             ? part0 < 128 ? 1 : 2\n             : part0 < 2097152 ? 3 : 4\n           : part1 < 16384\n             ? part1 < 128 ? 5 : 6\n             : part1 < 2097152 ? 7 : 8\n         : part2 < 128 ? 9 : 10;\n};\n","\"use strict\";\nmodule.exports = BufferWriter;\n\n// extends Writer\nvar Writer = require(\"./writer\");\n(BufferWriter.prototype = Object.create(Writer.prototype)).constructor = BufferWriter;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer writer instance.\n * @classdesc Wire format writer using node buffers.\n * @extends Writer\n * @constructor\n */\nfunction BufferWriter() {\n    Writer.call(this);\n}\n\nBufferWriter._configure = function () {\n    /**\n     * Allocates a buffer of the specified size.\n     * @function\n     * @param {number} size Buffer size\n     * @returns {Buffer} Buffer\n     */\n    BufferWriter.alloc = util._Buffer_allocUnsafe;\n\n    BufferWriter.writeBytesBuffer = util.Buffer && util.Buffer.prototype instanceof Uint8Array && util.Buffer.prototype.set.name === \"set\"\n        ? function writeBytesBuffer_set(val, buf, pos) {\n          buf.set(val, pos); // faster than copy (requires node >= 4 where Buffers extend Uint8Array and set is properly inherited)\n          // also works for plain array values\n        }\n        /* istanbul ignore next */\n        : function writeBytesBuffer_copy(val, buf, pos) {\n          if (val.copy) // Buffer values\n            val.copy(buf, pos, 0, val.length);\n          else for (var i = 0; i < val.length;) // plain array values\n            buf[pos++] = val[i++];\n        };\n};\n\n\n/**\n * @override\n */\nBufferWriter.prototype.bytes = function write_bytes_buffer(value) {\n    if (util.isString(value))\n        value = util._Buffer_from(value, \"base64\");\n    var len = value.length >>> 0;\n    this.uint32(len);\n    if (len)\n        this._push(BufferWriter.writeBytesBuffer, len, value);\n    return this;\n};\n\nfunction writeStringBuffer(val, buf, pos) {\n    if (val.length < 40) // plain js is faster for short strings (probably due to redundant assertions)\n        util.utf8.write(val, buf, pos);\n    else if (buf.utf8Write)\n        buf.utf8Write(val, pos);\n    else\n        buf.write(val, pos);\n}\n\n/**\n * @override\n */\nBufferWriter.prototype.string = function write_string_buffer(value) {\n    var len = util.Buffer.byteLength(value);\n    this.uint32(len);\n    if (len)\n        this._push(writeStringBuffer, len, value);\n    return this;\n};\n\n\n/**\n * Finishes the write operation.\n * @name BufferWriter#finish\n * @function\n * @returns {Buffer} Finished buffer\n */\n\nBufferWriter._configure();\n","\"use strict\";\nmodule.exports = BufferReader;\n\n// extends Reader\nvar Reader = require(\"./reader\");\n(BufferReader.prototype = Object.create(Reader.prototype)).constructor = BufferReader;\n\nvar util = require(\"./util/minimal\");\n\n/**\n * Constructs a new buffer reader instance.\n * @classdesc Wire format reader using node buffers.\n * @extends Reader\n * @constructor\n * @param {Buffer} buffer Buffer to read from\n */\nfunction BufferReader(buffer) {\n    Reader.call(this, buffer);\n\n    /**\n     * Read buffer.\n     * @name BufferReader#buf\n     * @type {Buffer}\n     */\n}\n\nBufferReader._configure = function () {\n    /* istanbul ignore else */\n    if (util.Buffer)\n        BufferReader.prototype._slice = util.Buffer.prototype.slice;\n};\n\n\n/**\n * @override\n */\nBufferReader.prototype.string = function read_string_buffer() {\n    var len = this.uint32(); // modifies pos\n    return this.buf.utf8Slice\n        ? this.buf.utf8Slice(this.pos, this.pos = Math.min(this.pos + len, this.len))\n        : this.buf.toString(\"utf-8\", this.pos, this.pos = Math.min(this.pos + len, this.len));\n};\n\n/**\n * Reads a sequence of bytes preceeded by its length as a varint.\n * @name BufferReader#bytes\n * @function\n * @returns {Buffer} Value read\n */\n\nBufferReader._configure();\n","\"use strict\";\n\n/**\n * Streaming RPC helpers.\n * @namespace\n */\nvar rpc = exports;\n\n/**\n * RPC implementation passed to {@link Service#create} performing a service request on network level, i.e. by utilizing http requests or websockets.\n * @typedef RPCImpl\n * @type {function}\n * @param {Method|rpc.ServiceMethod<Message<{}>,Message<{}>>} method Reflected or static method being called\n * @param {Uint8Array} requestData Request data\n * @param {RPCImplCallback} callback Callback function\n * @returns {undefined}\n * @example\n * function rpcImpl(method, requestData, callback) {\n *     if (protobuf.util.lcFirst(method.name) !== \"myMethod\") // compatible with static code\n *         throw Error(\"no such method\");\n *     asynchronouslyObtainAResponse(requestData, function(err, responseData) {\n *         callback(err, responseData);\n *     });\n * }\n */\n\n/**\n * Node-style callback as used by {@link RPCImpl}.\n * @typedef RPCImplCallback\n * @type {function}\n * @param {Error|null} error Error, if any, otherwise `null`\n * @param {Uint8Array|null} [response] Response data or `null` to signal end of stream, if there hasn't been an error\n * @returns {undefined}\n */\n\nrpc.Service = require(\"./rpc/service\");\n","\"use strict\";\nmodule.exports = Service;\n\nvar util = require(\"../util/minimal\");\n\n// Extends EventEmitter\n(Service.prototype = Object.create(util.EventEmitter.prototype)).constructor = Service;\n\n/**\n * A service method callback as used by {@link rpc.ServiceMethod|ServiceMethod}.\n *\n * Differs from {@link RPCImplCallback} in that it is an actual callback of a service method which may not return `response = null`.\n * @typedef rpc.ServiceMethodCallback\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {Error|null} error Error, if any\n * @param {TRes} [response] Response message\n * @returns {undefined}\n */\n\n/**\n * A service method part of a {@link rpc.Service} as created by {@link Service.create}.\n * @typedef rpc.ServiceMethod\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n * @type {function}\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} [callback] Node-style callback called with the error, if any, and the response message\n * @returns {Promise<Message<TRes>>} Promise if `callback` has been omitted, otherwise `undefined`\n */\n\n/**\n * Constructs a new RPC service instance.\n * @classdesc An RPC service as returned by {@link Service#create}.\n * @exports rpc.Service\n * @extends util.EventEmitter\n * @constructor\n * @param {RPCImpl} rpcImpl RPC implementation\n * @param {boolean} [requestDelimited=false] Whether requests are length-delimited\n * @param {boolean} [responseDelimited=false] Whether responses are length-delimited\n */\nfunction Service(rpcImpl, requestDelimited, responseDelimited) {\n\n    if (typeof rpcImpl !== \"function\")\n        throw TypeError(\"rpcImpl must be a function\");\n\n    util.EventEmitter.call(this);\n\n    /**\n     * RPC implementation. Becomes `null` once the service is ended.\n     * @type {RPCImpl|null}\n     */\n    this.rpcImpl = rpcImpl;\n\n    /**\n     * Whether requests are length-delimited.\n     * @type {boolean}\n     */\n    this.requestDelimited = Boolean(requestDelimited);\n\n    /**\n     * Whether responses are length-delimited.\n     * @type {boolean}\n     */\n    this.responseDelimited = Boolean(responseDelimited);\n}\n\n/**\n * Calls a service method through {@link rpc.Service#rpcImpl|rpcImpl}.\n * @param {Method|rpc.ServiceMethod<TReq,TRes>} method Reflected or static method\n * @param {Constructor<TReq>} requestCtor Request constructor\n * @param {Constructor<TRes>} responseCtor Response constructor\n * @param {TReq|Properties<TReq>} request Request message or plain object\n * @param {rpc.ServiceMethodCallback<TRes>} callback Service callback\n * @returns {undefined}\n * @template TReq extends Message<TReq>\n * @template TRes extends Message<TRes>\n */\nService.prototype.rpcCall = function rpcCall(method, requestCtor, responseCtor, request, callback) {\n\n    if (!request)\n        throw TypeError(\"request must be specified\");\n\n    var self = this;\n    if (!callback)\n        return util.asPromise(rpcCall, self, method, requestCtor, responseCtor, request);\n\n    if (!self.rpcImpl) {\n        setTimeout(function() { callback(Error(\"already ended\")); }, 0);\n        return undefined;\n    }\n\n    try {\n        return self.rpcImpl(\n            method,\n            requestCtor[self.requestDelimited ? \"encodeDelimited\" : \"encode\"](request).finish(),\n            function rpcCallback(err, response) {\n\n                if (err) {\n                    self.emit(\"error\", err, method);\n                    return callback(err);\n                }\n\n                if (response === null) {\n                    self.end(/* endedByRPC */ true);\n                    return undefined;\n                }\n\n                if (!(response instanceof responseCtor)) {\n                    try {\n                        response = responseCtor[self.responseDelimited ? \"decodeDelimited\" : \"decode\"](response);\n                    } catch (err) {\n                        self.emit(\"error\", err, method);\n                        return callback(err);\n                    }\n                }\n\n                self.emit(\"data\", response, method);\n                return callback(null, response);\n            }\n        );\n    } catch (err) {\n        self.emit(\"error\", err, method);\n        setTimeout(function() { callback(err); }, 0);\n        return undefined;\n    }\n};\n\n/**\n * Ends this service and emits the `end` event.\n * @param {boolean} [endedByRPC=false] Whether the service has been ended by the RPC implementation.\n * @returns {rpc.Service} `this`\n */\nService.prototype.end = function end(endedByRPC) {\n    if (this.rpcImpl) {\n        if (!endedByRPC) // signal end to rpcImpl\n            this.rpcImpl(null, null, null);\n        this.rpcImpl = null;\n        this.emit(\"end\").off();\n    }\n    return this;\n};\n","\"use strict\";\nmodule.exports = {};\n\n/**\n * Named roots.\n * This is where pbjs stores generated structures (the option `-r, --root` specifies a name).\n * Can also be used manually to make roots available accross modules.\n * @name roots\n * @type {Object.<string,Root>}\n * @example\n * // pbjs -r myroot -o compiled.js ...\n *\n * // in another module:\n * require(\"./compiled.js\");\n *\n * // in any subsequent module:\n * var root = protobuf.roots[\"myroot\"];\n */\n","'use strict'\n\nconst CID = require('cids')\n\nconst util = require('./util')\n\n/**\n * Resolves a path within a PB block.\n *\n * If the path resolves half-way to a link, then the `remainderPath` is the part\n * after the link that can be used for further resolving\n *\n * Returns the value or a link and the partial missing path. This way the\n * IPLD Resolver can fetch the link and continue to resolve.\n *\n * @param {Uint8Array} binaryBlob - Binary representation of a PB block\n * @param {string} [path='/'] - Path that should be resolved\n */\nexports.resolve = (binaryBlob, path = '/') => {\n  let node = util.deserialize(binaryBlob)\n\n  const parts = path.split('/').filter(Boolean)\n  while (parts.length) {\n    const key = parts.shift()\n    // @ts-ignore\n    if (node[key] === undefined) {\n      // There might be a matching named link\n      for (const link of node.Links) {\n        if (link.Name === key) {\n          return {\n            value: link.Hash,\n            remainderPath: parts.join('/')\n          }\n        }\n      }\n\n      // There wasn't even a matching named link\n      throw new Error(`Object has no property '${key}'`)\n    }\n\n    // @ts-ignore\n    node = node[key]\n    if (CID.isCID(node)) {\n      return {\n        value: node,\n        remainderPath: parts.join('/')\n      }\n    }\n  }\n\n  return {\n    value: node,\n    remainderPath: ''\n  }\n}\n\n/**\n * Return all available paths of a block.\n *\n * @generator\n * @param {Uint8Array} binaryBlob - Binary representation of a PB block\n * @yields {string} - A single path\n */\nexports.tree = function * (binaryBlob) {\n  const node = util.deserialize(binaryBlob)\n\n  // There is always a `Data` and `Links` property\n  yield 'Data'\n  yield 'Links'\n  for (let ii = 0; ii < node.Links.length; ii++) {\n    yield `Links/${ii}`\n    yield `Links/${ii}/Name`\n    yield `Links/${ii}/Tsize`\n    yield `Links/${ii}/Hash`\n  }\n}\n","//! stable.js 0.1.8, https://github.com/Two-Screen/stable\n//! © 2018 Angry Bytes and contributors. MIT licensed.\n\n(function (global, factory) {\n  typeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n  typeof define === 'function' && define.amd ? define(factory) :\n  (global.stable = factory());\n}(this, (function () { 'use strict';\n\n  // A stable array sort, because `Array#sort()` is not guaranteed stable.\n  // This is an implementation of merge sort, without recursion.\n\n  var stable = function (arr, comp) {\n    return exec(arr.slice(), comp)\n  };\n\n  stable.inplace = function (arr, comp) {\n    var result = exec(arr, comp);\n\n    // This simply copies back if the result isn't in the original array,\n    // which happens on an odd number of passes.\n    if (result !== arr) {\n      pass(result, null, arr.length, arr);\n    }\n\n    return arr\n  };\n\n  // Execute the sort using the input array and a second buffer as work space.\n  // Returns one of those two, containing the final result.\n  function exec(arr, comp) {\n    if (typeof(comp) !== 'function') {\n      comp = function (a, b) {\n        return String(a).localeCompare(b)\n      };\n    }\n\n    // Short-circuit when there's nothing to sort.\n    var len = arr.length;\n    if (len <= 1) {\n      return arr\n    }\n\n    // Rather than dividing input, simply iterate chunks of 1, 2, 4, 8, etc.\n    // Chunks are the size of the left or right hand in merge sort.\n    // Stop when the left-hand covers all of the array.\n    var buffer = new Array(len);\n    for (var chk = 1; chk < len; chk *= 2) {\n      pass(arr, comp, chk, buffer);\n\n      var tmp = arr;\n      arr = buffer;\n      buffer = tmp;\n    }\n\n    return arr\n  }\n\n  // Run a single pass with the given chunk size.\n  var pass = function (arr, comp, chk, result) {\n    var len = arr.length;\n    var i = 0;\n    // Step size / double chunk size.\n    var dbl = chk * 2;\n    // Bounds of the left and right chunks.\n    var l, r, e;\n    // Iterators over the left and right chunk.\n    var li, ri;\n\n    // Iterate over pairs of chunks.\n    for (l = 0; l < len; l += dbl) {\n      r = l + chk;\n      e = r + chk;\n      if (r > len) r = len;\n      if (e > len) e = len;\n\n      // Iterate both chunks in parallel.\n      li = l;\n      ri = r;\n      while (true) {\n        // Compare the chunks.\n        if (li < r && ri < e) {\n          // This works for a regular `sort()` compatible comparator,\n          // but also for a simple comparator like: `a > b`\n          if (comp(arr[li], arr[ri]) <= 0) {\n            result[i++] = arr[li++];\n          }\n          else {\n            result[i++] = arr[ri++];\n          }\n        }\n        // Nothing to compare, just flush what's left.\n        else if (li < r) {\n          result[i++] = arr[li++];\n        }\n        else if (ri < e) {\n          result[i++] = arr[ri++];\n        }\n        // Both iterators are at the chunk ends.\n        else {\n          break\n        }\n      }\n    }\n  };\n\n  return stable;\n\n})));\n","'use strict'\n\n/**\n * Can be used with Array.sort to sort and array with Uint8Array entries\n *\n * @param {Uint8Array} a\n * @param {Uint8Array} b\n */\nfunction compare (a, b) {\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] < b[i]) {\n      return -1\n    }\n\n    if (a[i] > b[i]) {\n      return 1\n    }\n  }\n\n  if (a.byteLength > b.byteLength) {\n    return 1\n  }\n\n  if (a.byteLength < b.byteLength) {\n    return -1\n  }\n\n  return 0\n}\n\nmodule.exports = compare\n","'use strict'\n\nconst DAGLink = require('../dag-link/dagLink')\nconst genCid = require('../genCid')\n\n/**\n * toDAGLink converts a DAGNode to a DAGLink\n *\n * @typedef {import('../genCid').GenCIDOptions} GenCIDOptions\n *\n * @typedef {object} ToDagLinkExtraOptions\n * @property {string} [name]\n *\n * @typedef {GenCIDOptions & ToDagLinkExtraOptions} ToDagLinkOptions\n *\n * @param {import('./dagNode')} node\n * @param {ToDagLinkOptions} options\n */\nconst toDAGLink = async (node, options = {}) => {\n  const buf = node.serialize()\n  const nodeCid = await genCid.cid(buf, options)\n  return new DAGLink(options.name || '', node.size, nodeCid)\n}\n\nmodule.exports = toDAGLink\n","'use strict'\n\nconst sortLinks = require('./sortLinks')\nconst DAGLink = require('../dag-link/dagLink')\n\n/**\n * @typedef {import('./dagNode')} DAGNode\n * @typedef {import('../types')} DAGLinkLike\n */\n\n/**\n * @param {*} link\n * @returns {DAGLink}\n */\nconst asDAGLink = (link) => {\n  if (link instanceof DAGLink) {\n    // It's a DAGLink instance\n    // no need to do anything\n    return link\n  }\n\n  // DAGNode.isDagNode() would be more appropriate here, but it can't be used\n  // as it would lead to circular dependencies as `addLink` is called from\n  // within the DAGNode object.\n  if (!('cid' in link ||\n        'hash' in link ||\n        'Hash' in link ||\n        'multihash' in link)) {\n    throw new Error('Link must be a DAGLink or DAGLink-like. Convert the DAGNode into a DAGLink via `node.toDAGLink()`.')\n  }\n\n  // It's a Object with name, multihash/hash/cid and size\n  // @ts-ignore\n  return new DAGLink(link.Name || link.name, link.Tsize || link.size, link.Hash || link.multihash || link.hash || link.cid)\n}\n\n/**\n * @param {DAGNode} node\n * @param {DAGLink | DAGLinkLike} link\n */\nconst addLink = (node, link) => {\n  const dagLink = asDAGLink(link)\n  node.Links.push(dagLink)\n  sortLinks(node.Links)\n}\n\nmodule.exports = addLink\n","'use strict'\n\nconst CID = require('cids')\nconst uint8ArrayEquals = require('uint8arrays/equals')\n\n/**\n * @typedef {import('../dag-link/dagLink')} DAGLink\n */\n\n/**\n *\n * @param {import('./dagNode')} dagNode\n * @param {string | CID | Uint8Array | DAGLink} nameOrCid\n */\nconst rmLink = (dagNode, nameOrCid) => {\n  let predicate = null\n\n  // It's a name\n  if (typeof nameOrCid === 'string') {\n    predicate = (/** @type {DAGLink} */ link) => link.Name === nameOrCid\n  } else if (nameOrCid instanceof Uint8Array) {\n    predicate = (/** @type {DAGLink} */ link) => uint8ArrayEquals(link.Hash.bytes, nameOrCid)\n  } else if (CID.isCID(nameOrCid)) {\n    predicate = (/** @type {DAGLink} */ link) => uint8ArrayEquals(link.Hash.bytes, nameOrCid.bytes)\n  }\n\n  if (predicate) {\n    const links = dagNode.Links\n    let index = 0\n    while (index < links.length) {\n      const link = links[index]\n      if (predicate(link)) {\n        links.splice(index, 1)\n      } else {\n        index++\n      }\n    }\n  } else {\n    throw new Error('second arg needs to be a name or CID')\n  }\n}\n\nmodule.exports = rmLink\n","'use strict'\n\n/**\n * Returns true if the two passed Uint8Arrays have the same content\n *\n * @param {Uint8Array} a\n * @param {Uint8Array} b\n */\nfunction equals (a, b) {\n  if (a === b) {\n    return true\n  }\n\n  if (a.byteLength !== b.byteLength) {\n    return false\n  }\n\n  for (let i = 0; i < a.byteLength; i++) {\n    if (a[i] !== b[i]) {\n      return false\n    }\n  }\n\n  return true\n}\n\nmodule.exports = equals\n","'use strict'\n\nconst bases = require('./util/bases')\n\n/**\n * @typedef {import('./util/bases').SupportedEncodings} SupportedEncodings\n */\n\n/**\n * Turns a `Uint8Array` into a string.\n *\n * Supports `utf8`, `utf-8` and any encoding supported by the multibase module.\n *\n * Also `ascii` which is similar to node's 'binary' encoding.\n *\n * @param {Uint8Array} array - The array to turn into a string\n * @param {SupportedEncodings} [encoding=utf8] - The encoding to use\n * @returns {string}\n */\nfunction toString (array, encoding = 'utf8') {\n  const base = bases[encoding]\n\n  if (!base) {\n    throw new Error(`Unsupported encoding \"${encoding}\"`)\n  }\n\n  // strip multibase prefix\n  return base.encoder.encode(array).substring(1)\n}\n\nmodule.exports = toString\n","'use strict'\n\nconst errCode = require('err-code')\nconst { UnixFS } = require('ipfs-unixfs')\nconst persist = require('../../utils/persist')\nconst {\n  DAGNode,\n  DAGLink\n} = require('ipld-dag-pb')\nconst parallelBatch = require('it-parallel-batch')\nconst mh = require('multihashing-async').multihash\n\n/**\n * @typedef {import('../../types').BlockAPI} BlockAPI\n * @typedef {import('../../types').File} File\n * @typedef {import('../../types').ImporterOptions} ImporterOptions\n * @typedef {import('../../types').Reducer} Reducer\n * @typedef {import('../../types').DAGBuilder} DAGBuilder\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {{ [key: string]: FileDAGBuilder}}\n */\nconst dagBuilders = {\n  flat: require('./flat'),\n  balanced: require('./balanced'),\n  trickle: require('./trickle')\n}\n\n/**\n * @param {File} file\n * @param {BlockAPI} block\n * @param {ImporterOptions} options\n */\nasync function * buildFileBatch (file, block, options) {\n  let count = -1\n  let previous\n  let bufferImporter\n\n  if (typeof options.bufferImporter === 'function') {\n    bufferImporter = options.bufferImporter\n  } else {\n    bufferImporter = require('./buffer-importer')\n  }\n\n  for await (const entry of parallelBatch(bufferImporter(file, block, options), options.blockWriteConcurrency)) {\n    count++\n\n    if (count === 0) {\n      previous = entry\n      continue\n    } else if (count === 1 && previous) {\n      yield previous\n      previous = null\n    }\n\n    yield entry\n  }\n\n  if (previous) {\n    previous.single = true\n    yield previous\n  }\n}\n\n/**\n * @param {File} file\n * @param {BlockAPI} block\n * @param {ImporterOptions} options\n */\nconst reduce = (file, block, options) => {\n  /**\n   * @type {Reducer}\n   */\n  async function reducer (leaves) {\n    if (leaves.length === 1 && leaves[0].single && options.reduceSingleLeafToSelf) {\n      const leaf = leaves[0]\n\n      if (leaf.cid.codec === 'raw' && (file.mtime !== undefined || file.mode !== undefined)) {\n        // only one leaf node which is a buffer - we have metadata so convert it into a\n        // UnixFS entry otherwise we'll have nowhere to store the metadata\n        let { data: buffer } = await block.get(leaf.cid, options)\n\n        leaf.unixfs = new UnixFS({\n          type: 'file',\n          mtime: file.mtime,\n          mode: file.mode,\n          data: buffer\n        })\n\n        const multihash = mh.decode(leaf.cid.multihash)\n        buffer = new DAGNode(leaf.unixfs.marshal()).serialize()\n\n        leaf.cid = await persist(buffer, block, {\n          ...options,\n          codec: 'dag-pb',\n          hashAlg: multihash.name,\n          cidVersion: options.cidVersion\n        })\n        leaf.size = buffer.length\n      }\n\n      return {\n        cid: leaf.cid,\n        path: file.path,\n        unixfs: leaf.unixfs,\n        size: leaf.size\n      }\n    }\n\n    // create a parent node and add all the leaves\n    const f = new UnixFS({\n      type: 'file',\n      mtime: file.mtime,\n      mode: file.mode\n    })\n\n    const links = leaves\n      .filter(leaf => {\n        if (leaf.cid.codec === 'raw' && leaf.size) {\n          return true\n        }\n\n        if (leaf.unixfs && !leaf.unixfs.data && leaf.unixfs.fileSize()) {\n          return true\n        }\n\n        return Boolean(leaf.unixfs && leaf.unixfs.data && leaf.unixfs.data.length)\n      })\n      .map((leaf) => {\n        if (leaf.cid.codec === 'raw') {\n          // node is a leaf buffer\n          f.addBlockSize(leaf.size)\n\n          return new DAGLink('', leaf.size, leaf.cid)\n        }\n\n        if (!leaf.unixfs || !leaf.unixfs.data) {\n          // node is an intermediate node\n          f.addBlockSize((leaf.unixfs && leaf.unixfs.fileSize()) || 0)\n        } else {\n          // node is a unixfs 'file' leaf node\n          f.addBlockSize(leaf.unixfs.data.length)\n        }\n\n        return new DAGLink('', leaf.size, leaf.cid)\n      })\n\n    const node = new DAGNode(f.marshal(), links)\n    const buffer = node.serialize()\n    const cid = await persist(buffer, block, options)\n\n    return {\n      cid,\n      path: file.path,\n      unixfs: f,\n      size: buffer.length + node.Links.reduce((acc, curr) => acc + curr.Tsize, 0)\n    }\n  }\n\n  return reducer\n}\n\n/**\n * @type {import('../../types').UnixFSV1DagBuilder<File>}\n */\nfunction fileBuilder (file, block, options) {\n  const dagBuilder = dagBuilders[options.strategy]\n\n  if (!dagBuilder) {\n    throw errCode(new Error(`Unknown importer build strategy name: ${options.strategy}`), 'ERR_BAD_STRATEGY')\n  }\n\n  return dagBuilder(buildFileBatch(file, block, options), reduce(file, block, options), options)\n}\n\nmodule.exports = fileBuilder\n","'use strict'\n\nconst all = require('it-all')\n\n/**\n * @type {import('../../types').FileDAGBuilder}\n */\nmodule.exports = async function (source, reduce) {\n  return reduce(await all(source))\n}\n","'use strict'\n\n/**\n * Collects all values from an (async) iterable into an array and returns it.\n *\n * @template T\n * @param {AsyncIterable<T>|Iterable<T>} source\n */\nconst all = async (source) => {\n  const arr = []\n\n  for await (const entry of source) {\n    arr.push(entry)\n  }\n\n  return arr\n}\n\nmodule.exports = all\n","'use strict'\n\nconst batch = require('it-batch')\n\n/**\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {FileDAGBuilder}\n */\nfunction balanced (source, reduce, options) {\n  return reduceToParents(source, reduce, options)\n}\n\n/**\n * @type {FileDAGBuilder}\n */\nasync function reduceToParents (source, reduce, options) {\n  const roots = []\n\n  for await (const chunked of batch(source, options.maxChildrenPerNode)) {\n    roots.push(await reduce(chunked))\n  }\n\n  if (roots.length > 1) {\n    return reduceToParents(roots, reduce, options)\n  }\n\n  return roots[0]\n}\n\nmodule.exports = balanced\n","'use strict'\n\nconst batch = require('it-batch')\n\n/**\n * @typedef {import('cids')} CID\n * @typedef {import('ipfs-unixfs').UnixFS} UnixFS\n * @typedef {import('../../types').ImporterOptions} ImporterOptions\n * @typedef {import('../../types').InProgressImportResult} InProgressImportResult\n * @typedef {import('../../types').TrickleDagNode} TrickleDagNode\n * @typedef {import('../../types').Reducer} Reducer\n * @typedef {import('../../types').FileDAGBuilder} FileDAGBuilder\n */\n\n/**\n * @type {FileDAGBuilder}\n */\nmodule.exports = async function trickleStream (source, reduce, options) {\n  const root = new Root(options.layerRepeat)\n  let iteration = 0\n  let maxDepth = 1\n\n  /** @type {SubTree} */\n  let subTree = root\n\n  for await (const layer of batch(source, options.maxChildrenPerNode)) {\n    if (subTree.isFull()) {\n      if (subTree !== root) {\n        root.addChild(await subTree.reduce(reduce))\n      }\n\n      if (iteration && iteration % options.layerRepeat === 0) {\n        maxDepth++\n      }\n\n      subTree = new SubTree(maxDepth, options.layerRepeat, iteration)\n\n      iteration++\n    }\n\n    subTree.append(layer)\n  }\n\n  if (subTree && subTree !== root) {\n    root.addChild(await subTree.reduce(reduce))\n  }\n\n  return root.reduce(reduce)\n}\n\nclass SubTree {\n  /**\n   * @param {number} maxDepth\n   * @param {number} layerRepeat\n   * @param {number} [iteration=0]\n   */\n  constructor (maxDepth, layerRepeat, iteration = 0) {\n    this.maxDepth = maxDepth\n    this.layerRepeat = layerRepeat\n    this.currentDepth = 1\n    this.iteration = iteration\n\n    /** @type {TrickleDagNode} */\n    this.root = this.node = this.parent = {\n      children: [],\n      depth: this.currentDepth,\n      maxDepth,\n      maxChildren: (this.maxDepth - this.currentDepth) * this.layerRepeat\n    }\n  }\n\n  isFull () {\n    if (!this.root.data) {\n      return false\n    }\n\n    if (this.currentDepth < this.maxDepth && this.node.maxChildren) {\n      // can descend\n      this._addNextNodeToParent(this.node)\n\n      return false\n    }\n\n    // try to find new node from node.parent\n    const distantRelative = this._findParent(this.node, this.currentDepth)\n\n    if (distantRelative) {\n      this._addNextNodeToParent(distantRelative)\n\n      return false\n    }\n\n    return true\n  }\n\n  /**\n   * @param {TrickleDagNode} parent\n   */\n  _addNextNodeToParent (parent) {\n    this.parent = parent\n\n    // find site for new node\n    const nextNode = {\n      children: [],\n      depth: parent.depth + 1,\n      parent,\n      maxDepth: this.maxDepth,\n      maxChildren: Math.floor(parent.children.length / this.layerRepeat) * this.layerRepeat\n    }\n\n    // @ts-ignore\n    parent.children.push(nextNode)\n\n    this.currentDepth = nextNode.depth\n    this.node = nextNode\n  }\n\n  /**\n   *\n   * @param {InProgressImportResult[]} layer\n   */\n  append (layer) {\n    this.node.data = layer\n  }\n\n  /**\n   * @param {Reducer} reduce\n   */\n  reduce (reduce) {\n    return this._reduce(this.root, reduce)\n  }\n\n  /**\n   * @param {TrickleDagNode} node\n   * @param {Reducer} reduce\n   * @returns {Promise<InProgressImportResult>}\n   */\n  async _reduce (node, reduce) {\n    /** @type {InProgressImportResult[]} */\n    let children = []\n\n    if (node.children.length) {\n      children = await Promise.all(\n        node.children\n          // @ts-ignore\n          .filter(child => child.data)\n          // @ts-ignore\n          .map(child => this._reduce(child, reduce))\n      )\n    }\n\n    return reduce((node.data || []).concat(children))\n  }\n\n  /**\n   * @param {TrickleDagNode} node\n   * @param {number} depth\n   * @returns {TrickleDagNode | undefined}\n   */\n  _findParent (node, depth) {\n    const parent = node.parent\n\n    if (!parent || parent.depth === 0) {\n      return\n    }\n\n    if (parent.children.length === parent.maxChildren || !parent.maxChildren) {\n      // this layer is full, may be able to traverse to a different branch\n      return this._findParent(parent, depth)\n    }\n\n    return parent\n  }\n}\n\nclass Root extends SubTree {\n  /**\n   * @param {number} layerRepeat\n   */\n  constructor (layerRepeat) {\n    super(0, layerRepeat)\n\n    this.root.depth = 0\n    this.currentDepth = 1\n  }\n\n  /**\n   * @param {InProgressImportResult} child\n   */\n  addChild (child) {\n    this.root.children.push(child)\n  }\n\n  /**\n   * @param {Reducer} reduce\n   */\n  reduce (reduce) {\n    return reduce((this.root.data || []).concat(this.root.children))\n  }\n}\n","'use strict'\n\nconst { UnixFS } = require('ipfs-unixfs')\nconst persist = require('../../utils/persist')\nconst {\n  DAGNode\n} = require('ipld-dag-pb')\n\n/**\n * @typedef {import('../../types').BufferImporter} BufferImporter\n */\n\n/**\n * @type {BufferImporter}\n */\nasync function * bufferImporter (file, block, options) {\n  for await (let buffer of file.content) {\n    yield async () => {\n      options.progress(buffer.length, file.path)\n      let unixfs\n\n      /** @type {import('../../types').PersistOptions} */\n      const opts = {\n        codec: 'dag-pb',\n        cidVersion: options.cidVersion,\n        hashAlg: options.hashAlg,\n        onlyHash: options.onlyHash\n      }\n\n      if (options.rawLeaves) {\n        opts.codec = 'raw'\n        opts.cidVersion = 1\n      } else {\n        unixfs = new UnixFS({\n          type: options.leafType,\n          data: buffer,\n          mtime: file.mtime,\n          mode: file.mode\n        })\n\n        buffer = new DAGNode(unixfs.marshal()).serialize()\n      }\n\n      return {\n        cid: await persist(buffer, block, opts),\n        unixfs,\n        size: buffer.length\n      }\n    }\n  }\n}\n\nmodule.exports = bufferImporter\n","'use strict'\n\n// @ts-ignore\nconst BufferList = require('bl/BufferList')\n// @ts-ignore\nconst { create } = require('rabin-wasm')\nconst errcode = require('err-code')\n\n/**\n * @typedef {object} RabinOptions\n * @property {number} min\n * @property {number} max\n * @property {number} bits\n * @property {number} window\n * @property {number} polynomial\n */\n\n/**\n * @type {import('../types').Chunker}\n */\nmodule.exports = async function * rabinChunker (source, options) {\n  let min, max, avg\n\n  if (options.minChunkSize && options.maxChunkSize && options.avgChunkSize) {\n    avg = options.avgChunkSize\n    min = options.minChunkSize\n    max = options.maxChunkSize\n  } else if (!options.avgChunkSize) {\n    throw errcode(new Error('please specify an average chunk size'), 'ERR_INVALID_AVG_CHUNK_SIZE')\n  } else {\n    avg = options.avgChunkSize\n    min = avg / 3\n    max = avg + (avg / 2)\n  }\n\n  // validate min/max/avg in the same way as go\n  if (min < 16) {\n    throw errcode(new Error('rabin min must be greater than 16'), 'ERR_INVALID_MIN_CHUNK_SIZE')\n  }\n\n  if (max < min) {\n    max = min\n  }\n\n  if (avg < min) {\n    avg = min\n  }\n\n  const sizepow = Math.floor(Math.log2(avg))\n\n  for await (const chunk of rabin(source, {\n    min: min,\n    max: max,\n    bits: sizepow,\n    window: options.window,\n    polynomial: options.polynomial\n  })) {\n    yield chunk\n  }\n}\n\n/**\n * @param {AsyncIterable<Uint8Array>} source\n * @param {RabinOptions} options\n */\nasync function * rabin (source, options) {\n  const r = await create(options.bits, options.min, options.max, options.window)\n  const buffers = new BufferList()\n\n  for await (const chunk of source) {\n    buffers.append(chunk)\n\n    const sizes = r.fingerprint(chunk)\n\n    for (let i = 0; i < sizes.length; i++) {\n      const size = sizes[i]\n      const buf = buffers.slice(0, size)\n      buffers.consume(size)\n\n      yield buf\n    }\n  }\n\n  if (buffers.length) {\n    yield buffers.slice(0)\n  }\n}\n","const Rabin = require('./rabin')\nconst getRabin = require('../dist/rabin-wasm.node.js')\n\nconst create = async (avg, min, max, windowSize, polynomial) => {\n    const compiled = await getRabin()\n    return new Rabin(compiled, avg, min, max, windowSize, polynomial)\n}\n\nmodule.exports = {\n    Rabin,\n    create\n}\n","/**\n * Rabin fingerprinting\n *\n * @class Rabin\n */\nclass Rabin {\n    /**\n     * Creates an instance of Rabin.\n     * @param { import(\"./../dist/rabin-wasm\") } asModule\n     * @param {number} [bits=12]\n     * @param {number} [min=8 * 1024]\n     * @param {number} [max=32 * 1024]\n     * @param {number} polynomial\n     * @memberof Rabin\n     */\n    constructor(asModule, bits = 12, min = 8 * 1024, max = 32 * 1024, windowSize = 64, polynomial) {\n        this.bits = bits\n        this.min = min\n        this.max = max\n        this.asModule = asModule\n        this.rabin = new asModule.Rabin(bits, min, max, windowSize, polynomial)\n        this.polynomial = polynomial\n    }\n\n    /**\n     * Fingerprints the buffer\n     *\n     * @param {Uint8Array} buf\n     * @returns {Array<number>}\n     * @memberof Rabin\n     */\n    fingerprint(buf) {\n        const {\n            __retain,\n            __release,\n            __allocArray,\n            __getInt32Array,\n            Int32Array_ID,\n            Uint8Array_ID\n        } = this.asModule\n\n        const lengths = new Int32Array(Math.ceil(buf.length/this.min))\n        const lengthsPtr = __retain(__allocArray(Int32Array_ID, lengths))\n        const pointer = __retain(__allocArray(Uint8Array_ID, buf))\n\n        const out = this.rabin.fingerprint(pointer, lengthsPtr)\n        const processed = __getInt32Array(out)\n\n        __release(pointer)\n        __release(lengthsPtr)\n\n        const end = processed.indexOf(0);\n        return end >= 0 ? processed.subarray(0, end) : processed;\n    }\n}\n\nmodule.exports = Rabin","\nconst { instantiate } = require(\"@assemblyscript/loader\");\n\nloadWebAssembly.supported = typeof WebAssembly !== 'undefined'\n\nfunction loadWebAssembly (imp = {}) {\n  if (!loadWebAssembly.supported) return null\n  \n  var wasm = new Uint8Array([0,97,115,109,1,0,0,0,1,78,14,96,2,127,126,0,96,1,127,1,126,96,2,127,127,0,96,1,127,1,127,96,1,127,0,96,2,127,127,1,127,96,3,127,127,127,1,127,96,0,0,96,3,127,127,127,0,96,0,1,127,96,4,127,127,127,127,0,96,5,127,127,127,127,127,1,127,96,1,126,1,127,96,2,126,126,1,126,2,13,1,3,101,110,118,5,97,98,111,114,116,0,10,3,54,53,2,2,8,9,3,5,2,8,6,5,3,4,2,6,9,12,13,2,5,11,3,2,3,2,3,2,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,1,0,6,7,7,4,4,5,3,1,0,1,6,47,9,127,1,65,0,11,127,1,65,0,11,127,0,65,3,11,127,0,65,4,11,127,1,65,0,11,127,1,65,0,11,127,1,65,0,11,127,0,65,240,2,11,127,0,65,6,11,7,240,5,41,6,109,101,109,111,114,121,2,0,7,95,95,97,108,108,111,99,0,10,8,95,95,114,101,116,97,105,110,0,11,9,95,95,114,101,108,101,97,115,101,0,12,9,95,95,99,111,108,108,101,99,116,0,51,11,95,95,114,116,116,105,95,98,97,115,101,3,7,13,73,110,116,51,50,65,114,114,97,121,95,73,68,3,2,13,85,105,110,116,56,65,114,114,97,121,95,73,68,3,3,6,100,101,103,114,101,101,0,16,3,109,111,100,0,17,5,82,97,98,105,110,3,8,16,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,0,21,16,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,0,22,21,82,97,98,105,110,35,103,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,23,21,82,97,98,105,110,35,115,101,116,58,119,105,110,100,111,119,95,115,105,122,101,0,24,14,82,97,98,105,110,35,103,101,116,58,119,112,111,115,0,25,14,82,97,98,105,110,35,115,101,116,58,119,112,111,115,0,26,15,82,97,98,105,110,35,103,101,116,58,99,111,117,110,116,0,27,15,82,97,98,105,110,35,115,101,116,58,99,111,117,110,116,0,28,13,82,97,98,105,110,35,103,101,116,58,112,111,115,0,29,13,82,97,98,105,110,35,115,101,116,58,112,111,115,0,30,15,82,97,98,105,110,35,103,101,116,58,115,116,97,114,116,0,31,15,82,97,98,105,110,35,115,101,116,58,115,116,97,114,116,0,32,16,82,97,98,105,110,35,103,101,116,58,100,105,103,101,115,116,0,33,16,82,97,98,105,110,35,115,101,116,58,100,105,103,101,115,116,0,34,21,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,35,21,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,115,116,97,114,116,0,36,22,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,37,22,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,108,101,110,103,116,104,0,38,31,82,97,98,105,110,35,103,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,39,31,82,97,98,105,110,35,115,101,116,58,99,104,117,110,107,95,99,117,116,95,102,105,110,103,101,114,112,114,105,110,116,0,40,20,82,97,98,105,110,35,103,101,116,58,112,111,108,121,110,111,109,105,97,108,0,41,20,82,97,98,105,110,35,115,101,116,58,112,111,108,121,110,111,109,105,97,108,0,42,17,82,97,98,105,110,35,103,101,116,58,109,105,110,115,105,122,101,0,43,17,82,97,98,105,110,35,115,101,116,58,109,105,110,115,105,122,101,0,44,17,82,97,98,105,110,35,103,101,116,58,109,97,120,115,105,122,101,0,45,17,82,97,98,105,110,35,115,101,116,58,109,97,120,115,105,122,101,0,46,14,82,97,98,105,110,35,103,101,116,58,109,97,115,107,0,47,14,82,97,98,105,110,35,115,101,116,58,109,97,115,107,0,48,17,82,97,98,105,110,35,99,111,110,115,116,114,117,99,116,111,114,0,20,17,82,97,98,105,110,35,102,105,110,103,101,114,112,114,105,110,116,0,49,8,1,50,10,165,31,53,199,1,1,4,127,32,1,40,2,0,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,3,65,4,107,118,65,16,115,33,4,32,3,65,7,107,11,33,3,32,1,40,2,20,33,2,32,1,40,2,16,34,5,4,64,32,5,32,2,54,2,20,11,32,2,4,64,32,2,32,5,54,2,16,11,32,1,32,0,32,4,32,3,65,4,116,106,65,2,116,106,40,2,96,70,4,64,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,2,54,2,96,32,2,69,4,64,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,65,127,115,113,34,1,54,2,4,32,1,69,4,64,32,0,32,0,40,2,0,65,1,32,3,116,65,127,115,113,54,2,0,11,11,11,11,226,2,1,6,127,32,1,40,2,0,33,3,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,34,5,65,1,113,4,64,32,3,65,124,113,65,16,106,32,5,65,124,113,106,34,2,65,240,255,255,255,3,73,4,64,32,0,32,4,16,1,32,1,32,2,32,3,65,3,113,114,34,3,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,34,4,40,2,0,33,5,11,11,32,3,65,2,113,4,64,32,1,65,4,107,40,2,0,34,2,40,2,0,34,6,65,124,113,65,16,106,32,3,65,124,113,106,34,7,65,240,255,255,255,3,73,4,64,32,0,32,2,16,1,32,2,32,7,32,6,65,3,113,114,34,3,54,2,0,32,2,33,1,11,11,32,4,32,5,65,2,114,54,2,0,32,4,65,4,107,32,1,54,2,0,32,0,32,3,65,124,113,34,2,65,128,2,73,4,127,32,2,65,4,118,33,4,65,0,5,32,2,65,31,32,2,103,107,34,2,65,4,107,118,65,16,115,33,4,32,2,65,7,107,11,34,3,65,4,116,32,4,106,65,2,116,106,40,2,96,33,2,32,1,65,0,54,2,16,32,1,32,2,54,2,20,32,2,4,64,32,2,32,1,54,2,16,11,32,0,32,4,32,3,65,4,116,106,65,2,116,106,32,1,54,2,96,32,0,32,0,40,2,0,65,1,32,3,116,114,54,2,0,32,0,32,3,65,2,116,106,32,0,32,3,65,2,116,106,40,2,4,65,1,32,4,116,114,54,2,4,11,119,1,1,127,32,2,2,127,32,0,40,2,160,12,34,2,4,64,32,2,32,1,65,16,107,70,4,64,32,2,40,2,0,33,3,32,1,65,16,107,33,1,11,11,32,1,11,107,34,2,65,48,73,4,64,15,11,32,1,32,3,65,2,113,32,2,65,32,107,65,1,114,114,54,2,0,32,1,65,0,54,2,16,32,1,65,0,54,2,20,32,1,32,2,106,65,16,107,34,2,65,2,54,2,0,32,0,32,2,54,2,160,12,32,0,32,1,16,2,11,155,1,1,3,127,35,0,34,0,69,4,64,65,1,63,0,34,0,74,4,127,65,1,32,0,107,64,0,65,0,72,5,65,0,11,4,64,0,11,65,176,3,34,0,65,0,54,2,0,65,208,15,65,0,54,2,0,3,64,32,1,65,23,73,4,64,32,1,65,2,116,65,176,3,106,65,0,54,2,4,65,0,33,2,3,64,32,2,65,16,73,4,64,32,1,65,4,116,32,2,106,65,2,116,65,176,3,106,65,0,54,2,96,32,2,65,1,106,33,2,12,1,11,11,32,1,65,1,106,33,1,12,1,11,11,65,176,3,65,224,15,63,0,65,16,116,16,3,65,176,3,36,0,11,32,0,11,45,0,32,0,65,240,255,255,255,3,79,4,64,65,32,65,224,0,65,201,3,65,29,16,0,0,11,32,0,65,15,106,65,112,113,34,0,65,16,32,0,65,16,75,27,11,169,1,1,1,127,32,0,32,1,65,128,2,73,4,127,32,1,65,4,118,33,1,65,0,5,32,1,65,248,255,255,255,1,73,4,64,32,1,65,1,65,27,32,1,103,107,116,106,65,1,107,33,1,11,32,1,65,31,32,1,103,107,34,2,65,4,107,118,65,16,115,33,1,32,2,65,7,107,11,34,2,65,2,116,106,40,2,4,65,127,32,1,116,113,34,1,4,127,32,0,32,1,104,32,2,65,4,116,106,65,2,116,106,40,2,96,5,32,0,40,2,0,65,127,32,2,65,1,106,116,113,34,1,4,127,32,0,32,0,32,1,104,34,0,65,2,116,106,40,2,4,104,32,0,65,4,116,106,65,2,116,106,40,2,96,5,65,0,11,11,11,111,1,1,127,63,0,34,2,32,1,65,248,255,255,255,1,73,4,127,32,1,65,1,65,27,32,1,103,107,116,65,1,107,106,5,32,1,11,65,16,32,0,40,2,160,12,32,2,65,16,116,65,16,107,71,116,106,65,255,255,3,106,65,128,128,124,113,65,16,118,34,1,32,2,32,1,74,27,64,0,65,0,72,4,64,32,1,64,0,65,0,72,4,64,0,11,11,32,0,32,2,65,16,116,63,0,65,16,116,16,3,11,113,1,2,127,32,1,40,2,0,34,3,65,124,113,32,2,107,34,4,65,32,79,4,64,32,1,32,2,32,3,65,2,113,114,54,2,0,32,2,32,1,65,16,106,106,34,1,32,4,65,16,107,65,1,114,54,2,0,32,0,32,1,16,2,5,32,1,32,3,65,126,113,54,2,0,32,1,65,16,106,32,1,40,2,0,65,124,113,106,32,1,65,16,106,32,1,40,2,0,65,124,113,106,40,2,0,65,125,113,54,2,0,11,11,91,1,2,127,32,0,32,1,16,5,34,4,16,6,34,3,69,4,64,65,1,36,1,65,0,36,1,32,0,32,4,16,6,34,3,69,4,64,32,0,32,4,16,7,32,0,32,4,16,6,33,3,11,11,32,3,65,0,54,2,4,32,3,32,2,54,2,8,32,3,32,1,54,2,12,32,0,32,3,16,1,32,0,32,3,32,4,16,8,32,3,11,13,0,16,4,32,0,32,1,16,9,65,16,106,11,33,1,1,127,32,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,18,0,32,0,65,172,3,75,4,64,32,0,65,16,107,16,52,11,11,140,3,1,1,127,2,64,32,1,69,13,0,32,0,65,0,58,0,0,32,0,32,1,106,65,1,107,65,0,58,0,0,32,1,65,2,77,13,0,32,0,65,1,106,65,0,58,0,0,32,0,65,2,106,65,0,58,0,0,32,0,32,1,106,34,2,65,2,107,65,0,58,0,0,32,2,65,3,107,65,0,58,0,0,32,1,65,6,77,13,0,32,0,65,3,106,65,0,58,0,0,32,0,32,1,106,65,4,107,65,0,58,0,0,32,1,65,8,77,13,0,32,1,65,0,32,0,107,65,3,113,34,1,107,33,2,32,0,32,1,106,34,0,65,0,54,2,0,32,0,32,2,65,124,113,34,1,106,65,4,107,65,0,54,2,0,32,1,65,8,77,13,0,32,0,65,4,106,65,0,54,2,0,32,0,65,8,106,65,0,54,2,0,32,0,32,1,106,34,2,65,12,107,65,0,54,2,0,32,2,65,8,107,65,0,54,2,0,32,1,65,24,77,13,0,32,0,65,12,106,65,0,54,2,0,32,0,65,16,106,65,0,54,2,0,32,0,65,20,106,65,0,54,2,0,32,0,65,24,106,65,0,54,2,0,32,0,32,1,106,34,2,65,28,107,65,0,54,2,0,32,2,65,24,107,65,0,54,2,0,32,2,65,20,107,65,0,54,2,0,32,2,65,16,107,65,0,54,2,0,32,0,32,0,65,4,113,65,24,106,34,2,106,33,0,32,1,32,2,107,33,1,3,64,32,1,65,32,79,4,64,32,0,66,0,55,3,0,32,0,65,8,106,66,0,55,3,0,32,0,65,16,106,66,0,55,3,0,32,0,65,24,106,66,0,55,3,0,32,1,65,32,107,33,1,32,0,65,32,106,33,0,12,1,11,11,11,11,178,1,1,3,127,32,1,65,240,255,255,255,3,32,2,118,75,4,64,65,144,1,65,192,1,65,23,65,56,16,0,0,11,32,1,32,2,116,34,3,65,0,16,10,34,2,32,3,16,13,32,0,69,4,64,65,12,65,2,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,2,34,1,32,0,40,2,0,34,4,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,32,4,16,12,11,32,0,32,1,54,2,0,32,0,32,2,54,2,4,32,0,32,3,54,2,8,32,0,11,46,1,2,127,65,12,65,5,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,65,128,2,65,3,16,14,11,9,0,65,63,32,0,121,167,107,11,49,1,2,127,65,63,32,1,121,167,107,33,2,3,64,65,63,32,0,121,167,107,32,2,107,34,3,65,0,78,4,64,32,0,32,1,32,3,172,134,133,33,0,12,1,11,11,32,0,11,40,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,163,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,65,0,58,0,0,11,38,0,32,1,32,0,40,2,8,79,4,64,65,128,2,65,192,2,65,152,1,65,44,16,0,0,11,32,1,32,0,40,2,4,106,45,0,0,11,254,5,2,1,127,4,126,32,0,69,4,64,65,232,0,65,6,16,10,34,0,65,172,3,75,4,64,32,0,65,16,107,34,5,32,5,40,2,4,65,1,106,54,2,4,11,11,32,0,65,0,54,2,0,32,0,65,0,54,2,4,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,24,32,0,66,0,55,3,32,32,0,66,0,55,3,40,32,0,66,0,55,3,48,32,0,66,0,55,3,56,32,0,66,0,55,3,64,32,0,66,0,55,3,72,32,0,66,0,55,3,80,32,0,66,0,55,3,88,32,0,66,0,55,3,96,32,0,32,2,173,55,3,80,32,0,32,3,173,55,3,88,65,12,65,4,16,10,34,2,65,172,3,75,4,64,32,2,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,32,4,65,0,16,14,33,2,32,0,40,2,0,16,12,32,0,32,2,54,2,0,32,0,32,4,54,2,4,32,0,66,1,32,1,173,134,66,1,125,55,3,96,32,0,66,243,130,183,218,216,230,232,30,55,3,72,35,4,69,4,64,65,0,33,2,3,64,32,2,65,128,2,72,4,64,32,2,65,255,1,113,173,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,65,0,33,4,3,64,32,4,32,0,40,2,4,65,1,107,72,4,64,32,6,66,8,134,33,6,32,0,41,3,72,34,7,33,8,65,63,32,7,121,167,107,33,1,3,64,65,63,32,6,121,167,107,32,1,107,34,3,65,0,78,4,64,32,6,32,8,32,3,172,134,133,33,6,12,1,11,11,32,4,65,1,106,33,4,12,1,11,11,35,6,40,2,4,32,2,65,3,116,106,32,6,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,63,32,0,41,3,72,121,167,107,172,33,7,65,0,33,2,3,64,32,2,65,128,2,72,4,64,35,5,33,1,32,2,172,32,7,134,34,8,33,6,65,63,32,0,41,3,72,34,9,121,167,107,33,3,3,64,65,63,32,6,121,167,107,32,3,107,34,4,65,0,78,4,64,32,6,32,9,32,4,172,134,133,33,6,12,1,11,11,32,1,40,2,4,32,2,65,3,116,106,32,6,32,8,132,55,3,0,32,2,65,1,106,33,2,12,1,11,11,65,1,36,4,11,32,0,66,0,55,3,24,32,0,66,0,55,3,32,65,0,33,2,3,64,32,2,32,0,40,2,4,72,4,64,32,0,40,2,0,32,2,16,18,32,2,65,1,106,33,2,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,6,66,45,136,167,65,3,116,106,41,3,0,32,6,66,8,134,66,1,132,133,55,3,40,32,0,11,38,1,1,127,32,0,40,2,0,34,0,65,172,3,75,4,64,32,0,65,16,107,34,1,32,1,40,2,4,65,1,106,54,2,4,11,32,0,11,55,1,2,127,32,1,32,0,40,2,0,34,2,71,4,64,32,1,65,172,3,75,4,64,32,1,65,16,107,34,3,32,3,40,2,4,65,1,106,54,2,4,11,32,2,16,12,11,32,0,32,1,54,2,0,11,7,0,32,0,40,2,4,11,9,0,32,0,32,1,54,2,4,11,7,0,32,0,40,2,8,11,9,0,32,0,32,1,54,2,8,11,7,0,32,0,41,3,16,11,9,0,32,0,32,1,55,3,16,11,7,0,32,0,41,3,24,11,9,0,32,0,32,1,55,3,24,11,7,0,32,0,41,3,32,11,9,0,32,0,32,1,55,3,32,11,7,0,32,0,41,3,40,11,9,0,32,0,32,1,55,3,40,11,7,0,32,0,41,3,48,11,9,0,32,0,32,1,55,3,48,11,7,0,32,0,41,3,56,11,9,0,32,0,32,1,55,3,56,11,7,0,32,0,41,3,64,11,9,0,32,0,32,1,55,3,64,11,7,0,32,0,41,3,72,11,9,0,32,0,32,1,55,3,72,11,7,0,32,0,41,3,80,11,9,0,32,0,32,1,55,3,80,11,7,0,32,0,41,3,88,11,9,0,32,0,32,1,55,3,88,11,7,0,32,0,41,3,96,11,9,0,32,0,32,1,55,3,96,11,172,4,2,5,127,1,126,32,2,65,172,3,75,4,64,32,2,65,16,107,34,4,32,4,40,2,4,65,1,106,54,2,4,11,32,2,33,4,65,0,33,2,32,1,40,2,8,33,5,32,1,40,2,4,33,6,3,64,2,127,65,0,33,3,3,64,32,3,32,5,72,4,64,32,3,32,6,106,45,0,0,33,1,32,0,40,2,0,32,0,40,2,8,16,19,33,7,32,0,40,2,8,32,0,40,2,0,40,2,4,106,32,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,7,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,1,173,32,8,66,8,134,132,133,55,3,40,32,0,32,0,41,3,16,66,1,124,55,3,16,32,0,32,0,41,3,24,66,1,124,55,3,24,32,0,41,3,16,32,0,41,3,80,90,4,127,32,0,41,3,40,32,0,41,3,96,131,80,5,65,0,11,4,127,65,1,5,32,0,41,3,16,32,0,41,3,88,90,11,4,64,32,0,32,0,41,3,32,55,3,48,32,0,32,0,41,3,16,55,3,56,32,0,32,0,41,3,40,55,3,64,65,0,33,1,3,64,32,1,32,0,40,2,4,72,4,64,32,0,40,2,0,32,1,16,18,32,1,65,1,106,33,1,12,1,11,11,32,0,66,0,55,3,40,32,0,65,0,54,2,8,32,0,66,0,55,3,16,32,0,66,0,55,3,40,32,0,40,2,0,32,0,40,2,8,16,19,33,1,32,0,40,2,8,32,0,40,2,0,40,2,4,106,65,1,58,0,0,32,0,32,0,41,3,40,35,6,40,2,4,32,1,65,3,116,106,41,3,0,133,55,3,40,32,0,32,0,40,2,8,65,1,106,32,0,40,2,4,111,54,2,8,32,0,35,5,40,2,4,32,0,41,3,40,34,8,66,45,136,167,65,3,116,106,41,3,0,32,8,66,8,134,66,1,132,133,55,3,40,32,3,65,1,106,12,3,11,32,3,65,1,106,33,3,12,1,11,11,65,127,11,34,1,65,0,78,4,64,32,5,32,1,107,33,5,32,1,32,6,106,33,6,32,2,34,1,65,1,106,33,2,32,4,40,2,4,32,1,65,2,116,106,32,0,41,3,56,62,2,0,12,1,11,11,32,4,11,10,0,16,15,36,5,16,15,36,6,11,3,0,1,11,73,1,2,127,32,0,40,2,4,34,1,65,255,255,255,255,0,113,34,2,65,1,70,4,64,32,0,65,16,106,16,53,32,0,32,0,40,2,0,65,1,114,54,2,0,35,0,32,0,16,2,5,32,0,32,2,65,1,107,32,1,65,128,128,128,128,127,113,114,54,2,4,11,11,58,0,2,64,2,64,2,64,32,0,65,8,107,40,2,0,14,7,0,0,1,1,1,1,1,2,11,15,11,32,0,40,2,0,34,0,4,64,32,0,65,172,3,79,4,64,32,0,65,16,107,16,52,11,11,15,11,0,11,11,137,3,7,0,65,16,11,55,40,0,0,0,1,0,0,0,1,0,0,0,40,0,0,0,97,0,108,0,108,0,111,0,99,0,97,0,116,0,105,0,111,0,110,0,32,0,116,0,111,0,111,0,32,0,108,0,97,0,114,0,103,0,101,0,65,208,0,11,45,30,0,0,0,1,0,0,0,1,0,0,0,30,0,0,0,126,0,108,0,105,0,98,0,47,0,114,0,116,0,47,0,116,0,108,0,115,0,102,0,46,0,116,0,115,0,65,128,1,11,43,28,0,0,0,1,0,0,0,1,0,0,0,28,0,0,0,73,0,110,0,118,0,97,0,108,0,105,0,100,0,32,0,108,0,101,0,110,0,103,0,116,0,104,0,65,176,1,11,53,38,0,0,0,1,0,0,0,1,0,0,0,38,0,0,0,126,0,108,0,105,0,98,0,47,0,97,0,114,0,114,0,97,0,121,0,98,0,117,0,102,0,102,0,101,0,114,0,46,0,116,0,115,0,65,240,1,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,73,0,110,0,100,0,101,0,120,0,32,0,111,0,117,0,116,0,32,0,111,0,102,0,32,0,114,0,97,0,110,0,103,0,101,0,65,176,2,11,51,36,0,0,0,1,0,0,0,1,0,0,0,36,0,0,0,126,0,108,0,105,0,98,0,47,0,116,0,121,0,112,0,101,0,100,0,97,0,114,0,114,0,97,0,121,0,46,0,116,0,115,0,65,240,2,11,53,7,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,16,0,0,0,0,0,0,0,145,4,0,0,2,0,0,0,49,0,0,0,2,0,0,0,17,1,0,0,2,0,0,0,16,0,34,16,115,111,117,114,99,101,77,97,112,112,105,110,103,85,82,76,16,46,47,114,97,98,105,110,46,119,97,115,109,46,109,97,112])\n  // make it work async because browsers throw when a wasm module is bigger than 4kb and load sync\n  return instantiate(new Response(new Blob([wasm], {type: 'application/wasm'})), imp)\n}\nmodule.exports = loadWebAssembly\n","\"use strict\";\n\n// Runtime header offsets\nconst ID_OFFSET = -8;\nconst SIZE_OFFSET = -4;\n\n// Runtime ids\nconst ARRAYBUFFER_ID = 0;\nconst STRING_ID = 1;\nconst ARRAYBUFFERVIEW_ID = 2;\n\n// Runtime type information\nconst ARRAYBUFFERVIEW = 1 << 0;\nconst ARRAY = 1 << 1;\nconst SET = 1 << 2;\nconst MAP = 1 << 3;\nconst VAL_ALIGN_OFFSET = 5;\nconst VAL_ALIGN = 1 << VAL_ALIGN_OFFSET;\nconst VAL_SIGNED = 1 << 10;\nconst VAL_FLOAT = 1 << 11;\nconst VAL_NULLABLE = 1 << 12;\nconst VAL_MANAGED = 1 << 13;\nconst KEY_ALIGN_OFFSET = 14;\nconst KEY_ALIGN = 1 << KEY_ALIGN_OFFSET;\nconst KEY_SIGNED = 1 << 19;\nconst KEY_FLOAT = 1 << 20;\nconst KEY_NULLABLE = 1 << 21;\nconst KEY_MANAGED = 1 << 22;\n\n// Array(BufferView) layout\nconst ARRAYBUFFERVIEW_BUFFER_OFFSET = 0;\nconst ARRAYBUFFERVIEW_DATASTART_OFFSET = 4;\nconst ARRAYBUFFERVIEW_DATALENGTH_OFFSET = 8;\nconst ARRAYBUFFERVIEW_SIZE = 12;\nconst ARRAY_LENGTH_OFFSET = 12;\nconst ARRAY_SIZE = 16;\n\nconst BIGINT = typeof BigUint64Array !== \"undefined\";\nconst THIS = Symbol();\nconst CHUNKSIZE = 1024;\n\n/** Gets a string from an U32 and an U16 view on a memory. */\nfunction getStringImpl(buffer, ptr) {\n  const U32 = new Uint32Array(buffer);\n  const U16 = new Uint16Array(buffer);\n  var length = U32[(ptr + SIZE_OFFSET) >>> 2] >>> 1;\n  var offset = ptr >>> 1;\n  if (length <= CHUNKSIZE) return String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n  const parts = [];\n  do {\n    const last = U16[offset + CHUNKSIZE - 1];\n    const size = last >= 0xD800 && last < 0xDC00 ? CHUNKSIZE - 1 : CHUNKSIZE;\n    parts.push(String.fromCharCode.apply(String, U16.subarray(offset, offset += size)));\n    length -= size;\n  } while (length > CHUNKSIZE);\n  return parts.join(\"\") + String.fromCharCode.apply(String, U16.subarray(offset, offset + length));\n}\n\n/** Prepares the base module prior to instantiation. */\nfunction preInstantiate(imports) {\n  const baseModule = {};\n\n  function getString(memory, ptr) {\n    if (!memory) return \"<yet unknown>\";\n    return getStringImpl(memory.buffer, ptr);\n  }\n\n  // add common imports used by stdlib for convenience\n  const env = (imports.env = imports.env || {});\n  env.abort = env.abort || function abort(mesg, file, line, colm) {\n    const memory = baseModule.memory || env.memory; // prefer exported, otherwise try imported\n    throw Error(\"abort: \" + getString(memory, mesg) + \" at \" + getString(memory, file) + \":\" + line + \":\" + colm);\n  }\n  env.trace = env.trace || function trace(mesg, n) {\n    const memory = baseModule.memory || env.memory;\n    console.log(\"trace: \" + getString(memory, mesg) + (n ? \" \" : \"\") + Array.prototype.slice.call(arguments, 2, 2 + n).join(\", \"));\n  }\n  imports.Math = imports.Math || Math;\n  imports.Date = imports.Date || Date;\n\n  return baseModule;\n}\n\n/** Prepares the final module once instantiation is complete. */\nfunction postInstantiate(baseModule, instance) {\n  const rawExports = instance.exports;\n  const memory = rawExports.memory;\n  const table = rawExports.table;\n  const alloc = rawExports[\"__alloc\"];\n  const retain = rawExports[\"__retain\"];\n  const rttiBase = rawExports[\"__rtti_base\"] || ~0; // oob if not present\n\n  /** Gets the runtime type info for the given id. */\n  function getInfo(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2];\n  }\n\n  /** Gets the runtime base id for the given id. */\n  function getBase(id) {\n    const U32 = new Uint32Array(memory.buffer);\n    const count = U32[rttiBase >>> 2];\n    if ((id >>>= 0) >= count) throw Error(\"invalid id: \" + id);\n    return U32[(rttiBase + 4 >>> 2) + id * 2 + 1];\n  }\n\n  /** Gets the runtime alignment of a collection's values. */\n  function getValueAlign(info) {\n    return 31 - Math.clz32((info >>> VAL_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Gets the runtime alignment of a collection's keys. */\n  function getKeyAlign(info) {\n    return 31 - Math.clz32((info >>> KEY_ALIGN_OFFSET) & 31); // -1 if none\n  }\n\n  /** Allocates a new string in the module's memory and returns its retained pointer. */\n  function __allocString(str) {\n    const length = str.length;\n    const ptr = alloc(length << 1, STRING_ID);\n    const U16 = new Uint16Array(memory.buffer);\n    for (var i = 0, p = ptr >>> 1; i < length; ++i) U16[p + i] = str.charCodeAt(i);\n    return ptr;\n  }\n\n  baseModule.__allocString = __allocString;\n\n  /** Reads a string from the module's memory by its pointer. */\n  function __getString(ptr) {\n    const buffer = memory.buffer;\n    const id = new Uint32Array(buffer)[ptr + ID_OFFSET >>> 2];\n    if (id !== STRING_ID) throw Error(\"not a string: \" + ptr);\n    return getStringImpl(buffer, ptr);\n  }\n\n  baseModule.__getString = __getString;\n\n  /** Gets the view matching the specified alignment, signedness and floatness. */\n  function getView(alignLog2, signed, float) {\n    const buffer = memory.buffer;\n    if (float) {\n      switch (alignLog2) {\n        case 2: return new Float32Array(buffer);\n        case 3: return new Float64Array(buffer);\n      }\n    } else {\n      switch (alignLog2) {\n        case 0: return new (signed ? Int8Array : Uint8Array)(buffer);\n        case 1: return new (signed ? Int16Array : Uint16Array)(buffer);\n        case 2: return new (signed ? Int32Array : Uint32Array)(buffer);\n        case 3: return new (signed ? BigInt64Array : BigUint64Array)(buffer);\n      }\n    }\n    throw Error(\"unsupported align: \" + alignLog2);\n  }\n\n  /** Allocates a new array in the module's memory and returns its retained pointer. */\n  function __allocArray(id, values) {\n    const info = getInfo(id);\n    if (!(info & (ARRAYBUFFERVIEW | ARRAY))) throw Error(\"not an array: \" + id + \" @ \" + info);\n    const align = getValueAlign(info);\n    const length = values.length;\n    const buf = alloc(length << align, ARRAYBUFFER_ID);\n    const arr = alloc(info & ARRAY ? ARRAY_SIZE : ARRAYBUFFERVIEW_SIZE, id);\n    const U32 = new Uint32Array(memory.buffer);\n    U32[arr + ARRAYBUFFERVIEW_BUFFER_OFFSET >>> 2] = retain(buf);\n    U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2] = buf;\n    U32[arr + ARRAYBUFFERVIEW_DATALENGTH_OFFSET >>> 2] = length << align;\n    if (info & ARRAY) U32[arr + ARRAY_LENGTH_OFFSET >>> 2] = length;\n    const view = getView(align, info & VAL_SIGNED, info & VAL_FLOAT);\n    if (info & VAL_MANAGED) {\n      for (let i = 0; i < length; ++i) view[(buf >>> align) + i] = retain(values[i]);\n    } else {\n      view.set(values, buf >>> align);\n    }\n    return arr;\n  }\n\n  baseModule.__allocArray = __allocArray;\n\n  /** Gets a live view on an array's values in the module's memory. Infers the array type from RTTI. */\n  function __getArrayView(arr) {\n    const U32 = new Uint32Array(memory.buffer);\n    const id = U32[arr + ID_OFFSET >>> 2];\n    const info = getInfo(id);\n    if (!(info & ARRAYBUFFERVIEW)) throw Error(\"not an array: \" + id);\n    const align = getValueAlign(info);\n    var buf = U32[arr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    const length = info & ARRAY\n      ? U32[arr + ARRAY_LENGTH_OFFSET >>> 2]\n      : U32[buf + SIZE_OFFSET >>> 2] >>> align;\n    return getView(align, info & VAL_SIGNED, info & VAL_FLOAT)\n          .subarray(buf >>>= align, buf + length);\n  }\n\n  baseModule.__getArrayView = __getArrayView;\n\n  /** Copies an array's values from the module's memory. Infers the array type from RTTI. */\n  function __getArray(arr) {\n    const input = __getArrayView(arr);\n    const len = input.length;\n    const out = new Array(len);\n    for (let i = 0; i < len; i++) out[i] = input[i];\n    return out;\n  }\n\n  baseModule.__getArray = __getArray;\n\n  /** Copies an ArrayBuffer's value from the module's memory. */\n  function __getArrayBuffer(ptr) {\n    const buffer = memory.buffer;\n    const length = new Uint32Array(buffer)[ptr + SIZE_OFFSET >>> 2];\n    return buffer.slice(ptr, ptr + length);\n  }\n\n  baseModule.__getArrayBuffer = __getArrayBuffer;\n\n  /** Copies a typed array's values from the module's memory. */\n  function getTypedArray(Type, alignLog2, ptr) {\n    return new Type(getTypedArrayView(Type, alignLog2, ptr));\n  }\n\n  /** Gets a live view on a typed array's values in the module's memory. */\n  function getTypedArrayView(Type, alignLog2, ptr) {\n    const buffer = memory.buffer;\n    const U32 = new Uint32Array(buffer);\n    const bufPtr = U32[ptr + ARRAYBUFFERVIEW_DATASTART_OFFSET >>> 2];\n    return new Type(buffer, bufPtr, U32[bufPtr + SIZE_OFFSET >>> 2] >>> alignLog2);\n  }\n\n  baseModule.__getInt8Array = getTypedArray.bind(null, Int8Array, 0);\n  baseModule.__getInt8ArrayView = getTypedArrayView.bind(null, Int8Array, 0);\n  baseModule.__getUint8Array = getTypedArray.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ArrayView = getTypedArrayView.bind(null, Uint8Array, 0);\n  baseModule.__getUint8ClampedArray = getTypedArray.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getUint8ClampedArrayView = getTypedArrayView.bind(null, Uint8ClampedArray, 0);\n  baseModule.__getInt16Array = getTypedArray.bind(null, Int16Array, 1);\n  baseModule.__getInt16ArrayView = getTypedArrayView.bind(null, Int16Array, 1);\n  baseModule.__getUint16Array = getTypedArray.bind(null, Uint16Array, 1);\n  baseModule.__getUint16ArrayView = getTypedArrayView.bind(null, Uint16Array, 1);\n  baseModule.__getInt32Array = getTypedArray.bind(null, Int32Array, 2);\n  baseModule.__getInt32ArrayView = getTypedArrayView.bind(null, Int32Array, 2);\n  baseModule.__getUint32Array = getTypedArray.bind(null, Uint32Array, 2);\n  baseModule.__getUint32ArrayView = getTypedArrayView.bind(null, Uint32Array, 2);\n  if (BIGINT) {\n    baseModule.__getInt64Array = getTypedArray.bind(null, BigInt64Array, 3);\n    baseModule.__getInt64ArrayView = getTypedArrayView.bind(null, BigInt64Array, 3);\n    baseModule.__getUint64Array = getTypedArray.bind(null, BigUint64Array, 3);\n    baseModule.__getUint64ArrayView = getTypedArrayView.bind(null, BigUint64Array, 3);\n  }\n  baseModule.__getFloat32Array = getTypedArray.bind(null, Float32Array, 2);\n  baseModule.__getFloat32ArrayView = getTypedArrayView.bind(null, Float32Array, 2);\n  baseModule.__getFloat64Array = getTypedArray.bind(null, Float64Array, 3);\n  baseModule.__getFloat64ArrayView = getTypedArrayView.bind(null, Float64Array, 3);\n\n  /** Tests whether an object is an instance of the class represented by the specified base id. */\n  function __instanceof(ptr, baseId) {\n    const U32 = new Uint32Array(memory.buffer);\n    var id = U32[(ptr + ID_OFFSET) >>> 2];\n    if (id <= U32[rttiBase >>> 2]) {\n      do if (id == baseId) return true;\n      while (id = getBase(id));\n    }\n    return false;\n  }\n\n  baseModule.__instanceof = __instanceof;\n\n  // Pull basic exports to baseModule so code in preInstantiate can use them\n  baseModule.memory = baseModule.memory || memory;\n  baseModule.table  = baseModule.table  || table;\n\n  // Demangle exports and provide the usual utility on the prototype\n  return demangle(rawExports, baseModule);\n}\n\nfunction isResponse(o) {\n  return typeof Response !== \"undefined\" && o instanceof Response;\n}\n\n/** Asynchronously instantiates an AssemblyScript module from anything that can be instantiated. */\nasync function instantiate(source, imports) {\n  if (isResponse(source = await source)) return instantiateStreaming(source, imports);\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    await WebAssembly.instantiate(\n      source instanceof WebAssembly.Module\n        ? source\n        : await WebAssembly.compile(source),\n      imports\n    )\n  );\n}\n\nexports.instantiate = instantiate;\n\n/** Synchronously instantiates an AssemblyScript module from a WebAssembly.Module or binary buffer. */\nfunction instantiateSync(source, imports) {\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    new WebAssembly.Instance(\n      source instanceof WebAssembly.Module\n        ? source\n        : new WebAssembly.Module(source),\n      imports\n    )\n  )\n}\n\nexports.instantiateSync = instantiateSync;\n\n/** Asynchronously instantiates an AssemblyScript module from a response, i.e. as obtained by `fetch`. */\nasync function instantiateStreaming(source, imports) {\n  if (!WebAssembly.instantiateStreaming) {\n    return instantiate(\n      isResponse(source = await source)\n        ? source.arrayBuffer()\n        : source,\n      imports\n    );\n  }\n  return postInstantiate(\n    preInstantiate(imports || (imports = {})),\n    (await WebAssembly.instantiateStreaming(source, imports)).instance\n  );\n}\n\nexports.instantiateStreaming = instantiateStreaming;\n\n/** Demangles an AssemblyScript module's exports to a friendly object structure. */\nfunction demangle(exports, baseModule) {\n  var module = baseModule ? Object.create(baseModule) : {};\n  var setArgumentsLength = exports[\"__argumentsLength\"]\n    ? function(length) { exports[\"__argumentsLength\"].value = length; }\n    : exports[\"__setArgumentsLength\"] || exports[\"__setargc\"] || function() {};\n  for (let internalName in exports) {\n    if (!Object.prototype.hasOwnProperty.call(exports, internalName)) continue;\n    const elem = exports[internalName];\n    let parts = internalName.split(\".\");\n    let curr = module;\n    while (parts.length > 1) {\n      let part = parts.shift();\n      if (!Object.prototype.hasOwnProperty.call(curr, part)) curr[part] = {};\n      curr = curr[part];\n    }\n    let name = parts[0];\n    let hash = name.indexOf(\"#\");\n    if (hash >= 0) {\n      let className = name.substring(0, hash);\n      let classElem = curr[className];\n      if (typeof classElem === \"undefined\" || !classElem.prototype) {\n        let ctor = function(...args) {\n          return ctor.wrap(ctor.prototype.constructor(0, ...args));\n        };\n        ctor.prototype = {\n          valueOf: function valueOf() {\n            return this[THIS];\n          }\n        };\n        ctor.wrap = function(thisValue) {\n          return Object.create(ctor.prototype, { [THIS]: { value: thisValue, writable: false } });\n        };\n        if (classElem) Object.getOwnPropertyNames(classElem).forEach(name =>\n          Object.defineProperty(ctor, name, Object.getOwnPropertyDescriptor(classElem, name))\n        );\n        curr[className] = ctor;\n      }\n      name = name.substring(hash + 1);\n      curr = curr[className].prototype;\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          let getter = exports[internalName.replace(\"set:\", \"get:\")];\n          let setter = exports[internalName.replace(\"get:\", \"set:\")];\n          Object.defineProperty(curr, name, {\n            get: function() { return getter(this[THIS]); },\n            set: function(value) { setter(this[THIS], value); },\n            enumerable: true\n          });\n        }\n      } else {\n        if (name === 'constructor') {\n          (curr[name] = (...args) => {\n            setArgumentsLength(args.length);\n            return elem(...args);\n          }).original = elem;\n        } else { // instance method\n          (curr[name] = function(...args) { // !\n            setArgumentsLength(args.length);\n            return elem(this[THIS], ...args);\n          }).original = elem;\n        }\n      }\n    } else {\n      if (/^(get|set):/.test(name)) {\n        if (!Object.prototype.hasOwnProperty.call(curr, name = name.substring(4))) {\n          Object.defineProperty(curr, name, {\n            get: exports[internalName.replace(\"set:\", \"get:\")],\n            set: exports[internalName.replace(\"get:\", \"set:\")],\n            enumerable: true\n          });\n        }\n      } else if (typeof elem === \"function\" && elem !== setArgumentsLength) {\n        (curr[name] = (...args) => {\n          setArgumentsLength(args.length);\n          return elem(...args);\n        }).original = elem;\n      } else {\n        curr[name] = elem;\n      }\n    }\n  }\n  return module;\n}\n\nexports.demangle = demangle;\n","'use strict'\n\n// @ts-ignore\nconst BufferList = require('bl/BufferList')\n\n/**\n * @type {import('../types').Chunker}\n */\nmodule.exports = async function * fixedSizeChunker (source, options) {\n  let bl = new BufferList()\n  let currentLength = 0\n  let emitted = false\n  const maxChunkSize = options.maxChunkSize\n\n  for await (const buffer of source) {\n    bl.append(buffer)\n\n    currentLength += buffer.length\n\n    while (currentLength >= maxChunkSize) {\n      yield bl.slice(0, maxChunkSize)\n      emitted = true\n\n      // throw away consumed bytes\n      if (maxChunkSize === bl.length) {\n        bl = new BufferList()\n        currentLength = 0\n      } else {\n        const newBl = new BufferList()\n        newBl.append(bl.shallowSlice(maxChunkSize))\n        bl = newBl\n\n        // update our offset\n        currentLength -= maxChunkSize\n      }\n    }\n  }\n\n  if (!emitted || currentLength) {\n    // return any remaining bytes or an empty buffer\n    yield bl.slice(0, currentLength)\n  }\n}\n","'use strict'\n\nconst errCode = require('err-code')\nconst uint8ArrayFromString = require('uint8arrays/from-string')\n\n/**\n * @typedef {import('../types').ChunkValidator} ChunkValidator\n */\n\n/**\n * @type {ChunkValidator}\n */\nasync function * validateChunks (source) {\n  for await (const content of source) {\n    if (content.length === undefined) {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n    }\n\n    if (typeof content === 'string' || content instanceof String) {\n      yield uint8ArrayFromString(content.toString())\n    } else if (Array.isArray(content)) {\n      yield Uint8Array.from(content)\n    } else if (content instanceof Uint8Array) {\n      yield content\n    } else {\n      throw errCode(new Error('Content was invalid'), 'ERR_INVALID_CONTENT')\n    }\n  }\n}\n\nmodule.exports = validateChunks\n","'use strict'\n\nconst DirFlat = require('./dir-flat')\nconst flatToShard = require('./flat-to-shard')\nconst Dir = require('./dir')\nconst toPathComponents = require('./utils/to-path-components')\n\n/**\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').BlockAPI} BlockAPI\n * @typedef {(source: AsyncIterable<InProgressImportResult>, block: BlockAPI, options: ImporterOptions) => AsyncIterable<ImportResult>} TreeBuilder\n */\n\n/**\n * @param {InProgressImportResult} elem\n * @param {Dir} tree\n * @param {ImporterOptions} options\n */\nasync function addToTree (elem, tree, options) {\n  const pathElems = toPathComponents(elem.path || '')\n  const lastIndex = pathElems.length - 1\n  let parent = tree\n  let currentPath = ''\n\n  for (let i = 0; i < pathElems.length; i++) {\n    const pathElem = pathElems[i]\n\n    currentPath += `${currentPath ? '/' : ''}${pathElem}`\n\n    const last = (i === lastIndex)\n    parent.dirty = true\n    parent.cid = undefined\n    parent.size = undefined\n\n    if (last) {\n      await parent.put(pathElem, elem)\n      tree = await flatToShard(null, parent, options.shardSplitThreshold, options)\n    } else {\n      let dir = await parent.get(pathElem)\n\n      if (!dir || !(dir instanceof Dir)) {\n        dir = new DirFlat({\n          root: false,\n          dir: true,\n          parent: parent,\n          parentKey: pathElem,\n          path: currentPath,\n          dirty: true,\n          flat: true,\n          mtime: dir && dir.unixfs && dir.unixfs.mtime,\n          mode: dir && dir.unixfs && dir.unixfs.mode\n        }, options)\n      }\n\n      await parent.put(pathElem, dir)\n\n      parent = dir\n    }\n  }\n\n  return tree\n}\n\n/**\n * @param {Dir | InProgressImportResult} tree\n * @param {BlockAPI} block\n */\nasync function * flushAndYield (tree, block) {\n  if (!(tree instanceof Dir)) {\n    if (tree && tree.unixfs && tree.unixfs.isDirectory()) {\n      yield tree\n    }\n\n    return\n  }\n\n  yield * tree.flush(block)\n}\n\n/**\n * @type {TreeBuilder}\n */\nasync function * treeBuilder (source, block, options) {\n  /** @type {Dir} */\n  let tree = new DirFlat({\n    root: true,\n    dir: true,\n    path: '',\n    dirty: true,\n    flat: true\n  }, options)\n\n  for await (const entry of source) {\n    if (!entry) {\n      continue\n    }\n\n    tree = await addToTree(entry, tree, options)\n\n    if (!entry.unixfs || !entry.unixfs.isDirectory()) {\n      yield entry\n    }\n  }\n\n  if (options.wrapWithDirectory) {\n    yield * flushAndYield(tree, block)\n  } else {\n    for await (const unwrapped of tree.eachChildSeries()) {\n      if (!unwrapped) {\n        continue\n      }\n\n      yield * flushAndYield(unwrapped.child, block)\n    }\n  }\n}\n\nmodule.exports = treeBuilder\n","'use strict'\n\nconst DirSharded = require('./dir-sharded')\nconst DirFlat = require('./dir-flat')\n\n/**\n * @typedef {import('./dir')} Dir\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n */\n\n/**\n * @param {Dir | null} child\n * @param {Dir} dir\n * @param {number} threshold\n * @param {ImporterOptions} options\n * @returns {Promise<DirSharded>}\n */\nmodule.exports = async function flatToShard (child, dir, threshold, options) {\n  let newDir = dir\n\n  if (dir instanceof DirFlat && dir.directChildrenCount() >= threshold) {\n    newDir = await convertToShard(dir, options)\n  }\n\n  const parent = newDir.parent\n\n  if (parent) {\n    if (newDir !== dir) {\n      if (child) {\n        child.parent = newDir\n      }\n\n      if (!newDir.parentKey) {\n        throw new Error('No parent key found')\n      }\n\n      await parent.put(newDir.parentKey, newDir)\n    }\n\n    return flatToShard(newDir, parent, threshold, options)\n  }\n\n  // @ts-ignore\n  return newDir\n}\n\n/**\n * @param {DirFlat} oldDir\n * @param {ImporterOptions} options\n */\nasync function convertToShard (oldDir, options) {\n  const newDir = new DirSharded({\n    root: oldDir.root,\n    dir: true,\n    parent: oldDir.parent,\n    parentKey: oldDir.parentKey,\n    path: oldDir.path,\n    dirty: oldDir.dirty,\n    flat: false,\n    mtime: oldDir.mtime,\n    mode: oldDir.mode\n  }, options)\n\n  for await (const { key, child } of oldDir.eachChildSeries()) {\n    await newDir.put(key, child)\n  }\n\n  return newDir\n}\n","'use strict'\n\nconst {\n  DAGLink,\n  DAGNode\n} = require('ipld-dag-pb')\nconst { UnixFS } = require('ipfs-unixfs')\nconst Dir = require('./dir')\nconst persist = require('./utils/persist')\nconst { createHAMT, Bucket } = require('hamt-sharding')\n\n/**\n * @typedef {import('./types').ImporterOptions} ImporterOptions\n * @typedef {import('./types').ImportResult} ImportResult\n * @typedef {import('./types').InProgressImportResult} InProgressImportResult\n * @typedef {import('./types').BlockAPI} BlockAPI\n */\n\n/**\n * @typedef {import('./dir').DirProps} DirProps\n */\n\nclass DirSharded extends Dir {\n  /**\n   * @param {DirProps} props\n   * @param {ImporterOptions} options\n   */\n  constructor (props, options) {\n    super(props, options)\n\n    /** @type {Bucket<InProgressImportResult | Dir>} */\n    this._bucket = createHAMT({\n      hashFn: options.hamtHashFn,\n      bits: options.hamtBucketBits\n    })\n  }\n\n  /**\n   * @param {string} name\n   * @param {InProgressImportResult | Dir} value\n   */\n  async put (name, value) {\n    await this._bucket.put(name, value)\n  }\n\n  /**\n   * @param {string} name\n   */\n  get (name) {\n    return this._bucket.get(name)\n  }\n\n  childCount () {\n    return this._bucket.leafCount()\n  }\n\n  directChildrenCount () {\n    return this._bucket.childrenCount()\n  }\n\n  onlyChild () {\n    return this._bucket.onlyChild()\n  }\n\n  async * eachChildSeries () {\n    for await (const { key, value } of this._bucket.eachLeafSeries()) {\n      yield {\n        key,\n        child: value\n      }\n    }\n  }\n\n  /**\n   * @param {BlockAPI} block\n   * @returns {AsyncIterable<ImportResult>}\n   */\n  async * flush (block) {\n    for await (const entry of flush(this._bucket, block, this, this.options)) {\n      yield {\n        ...entry,\n        path: this.path\n      }\n    }\n  }\n}\n\nmodule.exports = DirSharded\n\n/**\n * @param {Bucket<?>} bucket\n * @param {BlockAPI} block\n * @param {*} shardRoot\n * @param {ImporterOptions} options\n * @returns {AsyncIterable<ImportResult>}\n */\nasync function * flush (bucket, block, shardRoot, options) {\n  const children = bucket._children\n  const links = []\n  let childrenSize = 0\n\n  for (let i = 0; i < children.length; i++) {\n    const child = children.get(i)\n\n    if (!child) {\n      continue\n    }\n\n    const labelPrefix = i.toString(16).toUpperCase().padStart(2, '0')\n\n    if (child instanceof Bucket) {\n      let shard\n\n      for await (const subShard of await flush(child, block, null, options)) {\n        shard = subShard\n      }\n\n      if (!shard) {\n        throw new Error('Could not flush sharded directory, no subshard found')\n      }\n\n      links.push(new DAGLink(labelPrefix, shard.size, shard.cid))\n      childrenSize += shard.size\n    } else if (typeof child.value.flush === 'function') {\n      const dir = child.value\n      let flushedDir\n\n      for await (const entry of dir.flush(block)) {\n        flushedDir = entry\n\n        yield flushedDir\n      }\n\n      const label = labelPrefix + child.key\n      links.push(new DAGLink(label, flushedDir.size, flushedDir.cid))\n\n      childrenSize += flushedDir.size\n    } else {\n      const value = child.value\n\n      if (!value.cid) {\n        continue\n      }\n\n      const label = labelPrefix + child.key\n      const size = value.size\n\n      links.push(new DAGLink(label, size, value.cid))\n      childrenSize += size\n    }\n  }\n\n  // go-ipfs uses little endian, that's why we have to\n  // reverse the bit field before storing it\n  const data = Uint8Array.from(children.bitField().reverse())\n  const dir = new UnixFS({\n    type: 'hamt-sharded-directory',\n    data,\n    fanout: bucket.tableSize(),\n    hashType: options.hamtHashCode,\n    mtime: shardRoot && shardRoot.mtime,\n    mode: shardRoot && shardRoot.mode\n  })\n\n  const node = new DAGNode(dir.marshal(), links)\n  const buffer = node.serialize()\n  const cid = await persist(buffer, block, options)\n  const size = buffer.length + childrenSize\n\n  yield {\n    cid,\n    unixfs: dir,\n    size\n  }\n}\n","'use strict'\n\nconst Bucket = require('./bucket')\nconst wrapHash = require('./consumable-hash')\n\n/**\n * @typedef {object} UserBucketOptions\n * @property {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n * @property {number} [bits=8]\n */\n\n/**\n * @param {UserBucketOptions} options\n */\nfunction createHAMT (options) {\n  if (!options || !options.hashFn) {\n    throw new Error('please define an options.hashFn')\n  }\n\n  const bucketOptions = {\n    bits: options.bits || 8,\n    hash: wrapHash(options.hashFn)\n  }\n\n  return new Bucket(bucketOptions)\n}\n\nmodule.exports = {\n  createHAMT,\n  Bucket\n}\n","'use strict'\n\n// @ts-ignore\nconst SparseArray = require('sparse-array')\nconst { fromString: uint8ArrayFromString } = require('uint8arrays/from-string')\n\n/**\n * @typedef {import('./consumable-hash').InfiniteHash} InfiniteHash\n * @typedef {import('../').UserBucketOptions} UserBucketOptions\n */\n\n/**\n * @template V\n * @typedef {object} BucketChild<V>\n * @property {string} key\n * @property {V} value\n * @property {InfiniteHash} hash\n */\n\n/**\n * @template B\n *\n * @typedef {object} SA<B>\n * @property {number} length\n * @property {() => B[]} compactArray\n * @property {(i: number) => B} get\n * @property {(i: number, value: B) => void} set\n * @property {<A> (fn: (acc: A, curr: B, index: number) => A, initial: A) => B} reduce\n * @property {(fn: (item: B) => boolean) => B | undefined} find\n * @property {() => number[]} bitField\n * @property {(i: number) => void} unset\n */\n\n/**\n * @template T\n *\n * @typedef {object} BucketPosition<T>\n * @property {Bucket<T>} bucket\n * @property {number} pos\n * @property {InfiniteHash} hash\n * @property {BucketChild<T>} [existingChild]\n */\n\n/**\n * @typedef {object} BucketOptions\n * @property {number} bits\n * @property {(value: Uint8Array | InfiniteHash) => InfiniteHash} hash\n */\n\n/**\n * @template T\n */\nclass Bucket {\n  /**\n   * @param {BucketOptions} options\n   * @param {Bucket<T>} [parent]\n   * @param {number} [posAtParent=0]\n   */\n  constructor (options, parent, posAtParent = 0) {\n    this._options = options\n    this._popCount = 0\n    this._parent = parent\n    this._posAtParent = posAtParent\n\n    /** @type {SA<Bucket<T> | BucketChild<T>>} */\n    this._children = new SparseArray()\n\n    /** @type {string | null} */\n    this.key = null\n  }\n\n  /**\n   * @param {string} key\n   * @param {T} value\n   */\n  async put (key, value) {\n    const place = await this._findNewBucketAndPos(key)\n\n    await place.bucket._putAt(place, key, value)\n  }\n\n  /**\n   * @param {string} key\n   */\n  async get (key) {\n    const child = await this._findChild(key)\n\n    if (child) {\n      return child.value\n    }\n  }\n\n  /**\n   * @param {string} key\n   */\n  async del (key) {\n    const place = await this._findPlace(key)\n    const child = place.bucket._at(place.pos)\n\n    if (child && child.key === key) {\n      place.bucket._delAt(place.pos)\n    }\n  }\n\n  /**\n   * @returns {number}\n   */\n  leafCount () {\n    const children = this._children.compactArray()\n\n    return children.reduce((acc, child) => {\n      if (child instanceof Bucket) {\n        return acc + child.leafCount()\n      }\n\n      return acc + 1\n    }, 0)\n  }\n\n  childrenCount () {\n    return this._children.length\n  }\n\n  onlyChild () {\n    return this._children.get(0)\n  }\n\n  /**\n   * @returns {Iterable<BucketChild<T>>}\n   */\n  * eachLeafSeries () {\n    const children = this._children.compactArray()\n\n    for (const child of children) {\n      if (child instanceof Bucket) {\n        yield * child.eachLeafSeries()\n      } else {\n        yield child\n      }\n    }\n\n    // this is necessary because tsc requires a @return annotation as it\n    // can't derive a return type due to the recursion, and eslint requires\n    // a return statement when there is a @return annotation\n    return []\n  }\n\n  /**\n   * @param {(value: BucketChild<T>, index: number) => T} map\n   * @param {(reduced: any) => any} reduce\n   */\n  serialize (map, reduce) {\n    /** @type {T[]} */\n    const acc = []\n    // serialize to a custom non-sparse representation\n    return reduce(this._children.reduce((acc, child, index) => {\n      if (child) {\n        if (child instanceof Bucket) {\n          acc.push(child.serialize(map, reduce))\n        } else {\n          acc.push(map(child, index))\n        }\n      }\n      return acc\n    }, acc))\n  }\n\n  /**\n   * @param {(value: BucketChild<T>) => Promise<T[]>} asyncMap\n   * @param {(reduced: any) => Promise<any>} asyncReduce\n   */\n  asyncTransform (asyncMap, asyncReduce) {\n    return asyncTransformBucket(this, asyncMap, asyncReduce)\n  }\n\n  toJSON () {\n    return this.serialize(mapNode, reduceNodes)\n  }\n\n  prettyPrint () {\n    return JSON.stringify(this.toJSON(), null, '  ')\n  }\n\n  tableSize () {\n    return Math.pow(2, this._options.bits)\n  }\n\n  /**\n   * @param {string} key\n   * @returns {Promise<BucketChild<T> | undefined>}\n   */\n  async _findChild (key) {\n    const result = await this._findPlace(key)\n    const child = result.bucket._at(result.pos)\n\n    if (child instanceof Bucket) {\n      // should not be possible, this._findPlace should always\n      // return a location for a child, not a bucket\n      return undefined\n    }\n\n    if (child && child.key === key) {\n      return child\n    }\n  }\n\n  /**\n   * @param {string | InfiniteHash} key\n   * @returns {Promise<BucketPosition<T>>}\n   */\n  async _findPlace (key) {\n    const hashValue = this._options.hash(typeof key === 'string' ? uint8ArrayFromString(key) : key)\n    const index = await hashValue.take(this._options.bits)\n\n    const child = this._children.get(index)\n\n    if (child instanceof Bucket) {\n      return child._findPlace(hashValue)\n    }\n\n    return {\n      bucket: this,\n      pos: index,\n      hash: hashValue,\n      existingChild: child\n    }\n  }\n\n  /**\n   * @param {string | InfiniteHash} key\n   * @returns {Promise<BucketPosition<T>>}\n   */\n  async _findNewBucketAndPos (key) {\n    const place = await this._findPlace(key)\n\n    if (place.existingChild && place.existingChild.key !== key) {\n      // conflict\n      const bucket = new Bucket(this._options, place.bucket, place.pos)\n      place.bucket._putObjectAt(place.pos, bucket)\n\n      // put the previous value\n      const newPlace = await bucket._findPlace(place.existingChild.hash)\n      newPlace.bucket._putAt(newPlace, place.existingChild.key, place.existingChild.value)\n\n      return bucket._findNewBucketAndPos(place.hash)\n    }\n\n    // no conflict, we found the place\n    return place\n  }\n\n  /**\n   * @param {BucketPosition<T>} place\n   * @param {string} key\n   * @param {T} value\n   */\n  _putAt (place, key, value) {\n    this._putObjectAt(place.pos, {\n      key: key,\n      value: value,\n      hash: place.hash\n    })\n  }\n\n  /**\n   * @param {number} pos\n   * @param {Bucket<T> | BucketChild<T>} object\n   */\n  _putObjectAt (pos, object) {\n    if (!this._children.get(pos)) {\n      this._popCount++\n    }\n    this._children.set(pos, object)\n  }\n\n  /**\n   * @param {number} pos\n   */\n  _delAt (pos) {\n    if (pos === -1) {\n      throw new Error('Invalid position')\n    }\n\n    if (this._children.get(pos)) {\n      this._popCount--\n    }\n    this._children.unset(pos)\n    this._level()\n  }\n\n  _level () {\n    if (this._parent && this._popCount <= 1) {\n      if (this._popCount === 1) {\n        // remove myself from parent, replacing me with my only child\n        const onlyChild = this._children.find(exists)\n\n        if (onlyChild && !(onlyChild instanceof Bucket)) {\n          const hash = onlyChild.hash\n          hash.untake(this._options.bits)\n          const place = {\n            pos: this._posAtParent,\n            hash: hash,\n            bucket: this._parent\n          }\n          this._parent._putAt(place, onlyChild.key, onlyChild.value)\n        }\n      } else {\n        this._parent._delAt(this._posAtParent)\n      }\n    }\n  }\n\n  /**\n   * @param {number} index\n   * @returns {BucketChild<T> | Bucket<T> | undefined}\n   */\n  _at (index) {\n    return this._children.get(index)\n  }\n}\n\n/**\n * @param {any} o\n */\nfunction exists (o) {\n  return Boolean(o)\n}\n\n/**\n *\n * @param {*} node\n * @param {number} index\n */\nfunction mapNode (node, index) {\n  return node.key\n}\n\n/**\n * @param {*} nodes\n */\nfunction reduceNodes (nodes) {\n  return nodes\n}\n\n/**\n * @template T\n *\n * @param {Bucket<T>} bucket\n * @param {(value: BucketChild<T>) => Promise<T[]>} asyncMap\n * @param {(reduced: any) => Promise<any>} asyncReduce\n */\nasync function asyncTransformBucket (bucket, asyncMap, asyncReduce) {\n  const output = []\n\n  for (const child of bucket._children.compactArray()) {\n    if (child instanceof Bucket) {\n      await asyncTransformBucket(child, asyncMap, asyncReduce)\n    } else {\n      const mappedChildren = await asyncMap(child)\n\n      output.push({\n        bitField: bucket._children.bitField(),\n        children: mappedChildren\n      })\n    }\n  }\n\n  return asyncReduce(output)\n}\n\nmodule.exports = Bucket\n","'use strict'\n\n// JS treats subjects of bitwise operators as SIGNED 32 bit numbers,\n// which means the maximum amount of bits we can store inside each byte\n// is 7..\nconst BITS_PER_BYTE = 7\n\nmodule.exports = class SparseArray {\n  constructor () {\n    this._bitArrays = []\n    this._data = []\n    this._length = 0\n    this._changedLength = false\n    this._changedData = false\n  }\n\n  set (index, value) {\n    let pos = this._internalPositionFor(index, false)\n    if (value === undefined) {\n      // unsetting\n      if (pos !== -1) {\n        // remove item from bit array and array itself\n        this._unsetInternalPos(pos)\n        this._unsetBit(index)\n        this._changedLength = true\n        this._changedData = true\n      }\n    } else {\n      let needsSort = false\n      if (pos === -1) {\n        pos = this._data.length\n        this._setBit(index)\n        this._changedData = true\n      } else {\n        needsSort = true\n      }\n      this._setInternalPos(pos, index, value, needsSort)\n      this._changedLength = true\n    }\n  }\n\n  unset (index) {\n    this.set(index, undefined)\n  }\n\n  get (index) {\n    this._sortData()\n    const pos = this._internalPositionFor(index, true)\n    if (pos === -1) {\n      return undefined\n    }\n    return this._data[pos][1]\n  }\n\n  push (value) {\n    this.set(this.length, value)\n    return this.length\n  }\n\n  get length () {\n    this._sortData()\n    if (this._changedLength) {\n      const last = this._data[this._data.length - 1]\n      this._length = last ? last[0] + 1 : 0\n      this._changedLength = false\n    }\n    return this._length\n  }\n\n  forEach (iterator) {\n    let i = 0\n    while(i < this.length) {\n      iterator(this.get(i), i, this)\n      i++\n    }\n  }\n\n  map (iterator) {\n    let i = 0\n    let mapped = new Array(this.length)\n    while(i < this.length) {\n      mapped[i] = iterator(this.get(i), i, this)\n      i++\n    }\n    return mapped\n  }\n\n  reduce (reducer, initialValue) {\n    let i = 0\n    let acc = initialValue\n    while(i < this.length) {\n      const value = this.get(i)\n      acc = reducer(acc, value, i)\n      i++\n    }\n    return acc\n  }\n\n  find (finder) {\n    let i = 0, found, last\n    while ((i < this.length) && !found) {\n      last = this.get(i)\n      found = finder(last)\n      i++\n    }\n    return found ? last : undefined\n  }\n\n  _internalPositionFor (index, noCreate) {\n    const bytePos = this._bytePosFor(index, noCreate)\n    if (bytePos >= this._bitArrays.length) {\n      return -1\n    }\n    const byte = this._bitArrays[bytePos]\n    const bitPos = index - bytePos * BITS_PER_BYTE\n    const exists = (byte & (1 << bitPos)) > 0\n    if (!exists) {\n      return -1\n    }\n    const previousPopCount = this._bitArrays.slice(0, bytePos).reduce(popCountReduce, 0)\n\n    const mask = ~(0xffffffff << (bitPos + 1))\n    const bytePopCount = popCount(byte & mask)\n    const arrayPos = previousPopCount + bytePopCount - 1\n    return arrayPos\n  }\n\n  _bytePosFor (index, noCreate) {\n    const bytePos = Math.floor(index / BITS_PER_BYTE)\n    const targetLength = bytePos + 1\n    while (!noCreate && this._bitArrays.length < targetLength) {\n      this._bitArrays.push(0)\n    }\n    return bytePos\n  }\n\n  _setBit (index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] |= (1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _unsetBit(index) {\n    const bytePos = this._bytePosFor(index, false)\n    this._bitArrays[bytePos] &= ~(1 << (index - (bytePos * BITS_PER_BYTE)))\n  }\n\n  _setInternalPos(pos, index, value, needsSort) {\n    const data =this._data\n    const elem = [index, value]\n    if (needsSort) {\n      this._sortData()\n      data[pos] = elem\n    } else {\n      // new element. just shove it into the array\n      // but be nice about where we shove it\n      // in order to make sorting it later easier\n      if (data.length) {\n        if (data[data.length - 1][0] >= index) {\n          data.push(elem)\n        } else if (data[0][0] <= index) {\n          data.unshift(elem)\n        } else {\n          const randomIndex = Math.round(data.length / 2)\n          this._data = data.slice(0, randomIndex).concat(elem).concat(data.slice(randomIndex))\n        }\n      } else {\n        this._data.push(elem)\n      }\n      this._changedData = true\n      this._changedLength = true\n    }\n  }\n\n  _unsetInternalPos (pos) {\n    this._data.splice(pos, 1)\n  }\n\n  _sortData () {\n    if (this._changedData) {\n      this._data.sort(sortInternal)\n    }\n\n    this._changedData = false\n  }\n\n  bitField () {\n    const bytes = []\n    let pendingBitsForResultingByte = 8\n    let pendingBitsForNewByte = 0\n    let resultingByte = 0\n    let newByte\n    const pending = this._bitArrays.slice()\n    while (pending.length || pendingBitsForNewByte) {\n      if (pendingBitsForNewByte === 0) {\n        newByte = pending.shift()\n        pendingBitsForNewByte = 7\n      }\n\n      const usingBits = Math.min(pendingBitsForNewByte, pendingBitsForResultingByte)\n      const mask = ~(0b11111111 << usingBits)\n      const masked = newByte & mask\n      resultingByte |= masked << (8 - pendingBitsForResultingByte)\n      newByte = newByte >>> usingBits\n      pendingBitsForNewByte -= usingBits\n      pendingBitsForResultingByte -= usingBits\n\n      if (!pendingBitsForResultingByte || (!pendingBitsForNewByte && !pending.length)) {\n        bytes.push(resultingByte)\n        resultingByte = 0\n        pendingBitsForResultingByte = 8\n      }\n    }\n\n    // remove trailing zeroes\n    for(var i = bytes.length - 1; i > 0; i--) {\n      const value = bytes[i]\n      if (value === 0) {\n        bytes.pop()\n      } else {\n        break\n      }\n    }\n\n    return bytes\n  }\n\n  compactArray () {\n    this._sortData()\n    return this._data.map(valueOnly)\n  }\n}\n\nfunction popCountReduce (count, byte) {\n  return count + popCount(byte)\n}\n\nfunction popCount(_v) {\n  let v = _v\n  v = v - ((v >> 1) & 0x55555555)                    // reuse input as temporary\n  v = (v & 0x33333333) + ((v >> 2) & 0x33333333)     // temp\n  return ((v + (v >> 4) & 0xF0F0F0F) * 0x1010101) >> 24\n}\n\nfunction sortInternal (a, b) {\n  return a[0] - b[0]\n}\n\nfunction valueOnly (elem) {\n  return elem[1]\n}","'use strict'\n\nconst ConsumableBuffer = require('./consumable-buffer')\nconst { concat: uint8ArrayConcat } = require('uint8arrays/concat')\n\n/**\n * @param {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n */\nfunction wrapHash (hashFn) {\n  /**\n   * @param {InfiniteHash | Uint8Array} value\n   */\n  function hashing (value) {\n    if (value instanceof InfiniteHash) {\n      // already a hash. return it\n      return value\n    } else {\n      return new InfiniteHash(value, hashFn)\n    }\n  }\n\n  return hashing\n}\n\nclass InfiniteHash {\n  /**\n   *\n   * @param {Uint8Array} value\n   * @param {(value: Uint8Array) => Promise<Uint8Array>} hashFn\n   */\n  constructor (value, hashFn) {\n    if (!(value instanceof Uint8Array)) {\n      throw new Error('can only hash Uint8Arrays')\n    }\n\n    this._value = value\n    this._hashFn = hashFn\n    this._depth = -1\n    this._availableBits = 0\n    this._currentBufferIndex = 0\n\n    /** @type {ConsumableBuffer[]} */\n    this._buffers = []\n  }\n\n  /**\n   * @param {number} bits\n   */\n  async take (bits) {\n    let pendingBits = bits\n\n    while (this._availableBits < pendingBits) {\n      await this._produceMoreBits()\n    }\n\n    let result = 0\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const available = Math.min(hash.availableBits(), pendingBits)\n      const took = hash.take(available)\n      result = (result << available) + took\n      pendingBits -= available\n      this._availableBits -= available\n\n      if (hash.availableBits() === 0) {\n        this._currentBufferIndex++\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    let pendingBits = bits\n\n    while (pendingBits > 0) {\n      const hash = this._buffers[this._currentBufferIndex]\n      const availableForUntake = Math.min(hash.totalBits() - hash.availableBits(), pendingBits)\n      hash.untake(availableForUntake)\n      pendingBits -= availableForUntake\n      this._availableBits += availableForUntake\n\n      if (this._currentBufferIndex > 0 && hash.totalBits() === hash.availableBits()) {\n        this._depth--\n        this._currentBufferIndex--\n      }\n    }\n  }\n\n  async _produceMoreBits () {\n    this._depth++\n\n    const value = this._depth ? uint8ArrayConcat([this._value, Uint8Array.from([this._depth])]) : this._value\n    const hashValue = await this._hashFn(value)\n    const buffer = new ConsumableBuffer(hashValue)\n\n    this._buffers.push(buffer)\n    this._availableBits += buffer.availableBits()\n  }\n}\n\nmodule.exports = wrapHash\nmodule.exports.InfiniteHash = InfiniteHash\n","'use strict'\n\nconst START_MASKS = [\n  0b11111111,\n  0b11111110,\n  0b11111100,\n  0b11111000,\n  0b11110000,\n  0b11100000,\n  0b11000000,\n  0b10000000\n]\n\nconst STOP_MASKS = [\n  0b00000001,\n  0b00000011,\n  0b00000111,\n  0b00001111,\n  0b00011111,\n  0b00111111,\n  0b01111111,\n  0b11111111\n]\n\nmodule.exports = class ConsumableBuffer {\n  /**\n   * @param {Uint8Array} value\n   */\n  constructor (value) {\n    this._value = value\n    this._currentBytePos = value.length - 1\n    this._currentBitPos = 7\n  }\n\n  availableBits () {\n    return this._currentBitPos + 1 + this._currentBytePos * 8\n  }\n\n  totalBits () {\n    return this._value.length * 8\n  }\n\n  /**\n   * @param {number} bits\n   */\n  take (bits) {\n    let pendingBits = bits\n    let result = 0\n    while (pendingBits && this._haveBits()) {\n      const byte = this._value[this._currentBytePos]\n      const availableBits = this._currentBitPos + 1\n      const taking = Math.min(availableBits, pendingBits)\n      const value = byteBitsToInt(byte, availableBits - taking, taking)\n      result = (result << taking) + value\n\n      pendingBits -= taking\n\n      this._currentBitPos -= taking\n      if (this._currentBitPos < 0) {\n        this._currentBitPos = 7\n        this._currentBytePos--\n      }\n    }\n\n    return result\n  }\n\n  /**\n   * @param {number} bits\n   */\n  untake (bits) {\n    this._currentBitPos += bits\n    while (this._currentBitPos > 7) {\n      this._currentBitPos -= 8\n      this._currentBytePos += 1\n    }\n  }\n\n  _haveBits () {\n    return this._currentBytePos >= 0\n  }\n}\n\n/**\n * @param {number} byte\n * @param {number} start\n * @param {number} length\n */\nfunction byteBitsToInt (byte, start, length) {\n  const mask = maskFor(start, length)\n  return (byte & mask) >>> start\n}\n\n/**\n * @param {number} start\n * @param {number} length\n */\nfunction maskFor (start, length) {\n  return START_MASKS[start] & STOP_MASKS[Math.min(length + start - 1, 7)]\n}\n","'use strict'\n\nconst toPathComponents = (path = '') => {\n  // split on / unless escaped with \\\n  return (path\n    .trim()\n    .match(/([^\\\\^/]|\\\\\\/)+/g) || [])\n    .filter(Boolean)\n}\n\nmodule.exports = toPathComponents\n"],"sourceRoot":""}