#######################################
# RPC Endpoints
#######################################
# You should set your own RPC endpoints.
#   - One simple way to do this, is by defining your own `REACT_APP_INFURA_KEY` environment var.
#   - Alternatively you can define the RPC URLs directly with the following environment variables:

# RPC Nodes
# REACT_APP_NETWORK_URL_1=http://your-rpc-url
# REACT_APP_NETWORK_URL_11155111=https://rpc2.sepolia.org
# REACT_APP_NETWORK_URL_100=https://rpc.gnosischain.com

# INFURA KEY
# REACT_APP_INFURA_KEY=your-infura-key



#######################################
# 3rd Party Services
#######################################

# Analytics
#REACT_APP_GOOGLE_ANALYTICS_ID=

# BLOCKNATIVE KEY
# if you need that locally, get the key from blocknative. Access details in shared team vault
#REACT_APP_BLOCKNATIVE_API_KEY=

# Sentry
#REACT_APP_SENTRY_DSN='https://<url>'
#REACT_APP_SENTRY_TRACES_SAMPLE_RATE="1.0"

# IPFS uploading
#REACT_APP_PINATA_API_KEY=
#REACT_APP_PINATA_SECRET_API_KEY=

# Appzi NPS feedback
#REACT_APP_FEEDBACK_ENABLED_DEV=false
#REACT_APP_APPZI_FEEDBACK_KEY=
#REACT_APP_APPZI_NPS_KEY=

# Launch darkly
#REACT_APP_LAUNCH_DARKLY_KEY=your-launch-darkly-key



#######################################
# App Data
#######################################
# The app will attach some metadata to all orders.
#
# This metadata will be sent to the smart contract as a hexadecimal value in an order field called `AppData`.
# This value comes from hashing the content of a metadata JSON containing some information about the trade (using `keccak256` on the `UTF-8` bytes).
# The format of the JSON follows the format defined in https://github.com/cowprotocol/app-data
#
# To set your own `AppData`, change `REACT_APP_FULL_APP_DATA_<environment>`

# AppData, build yours at https://explorer.cow.fi/appdata
REACT_APP_FULL_APP_DATA_PRODUCTION='{"version":"1.1.0","appCode":"CoW Swap","environment":"production","metadata":{}}'
REACT_APP_FULL_APP_DATA_ENS='{"version":"1.1.0","appCode":"CoW Swap","environment":"ens","metadata":{}}'
REACT_APP_FULL_APP_DATA_BARN='{"version":"1.1.0","appCode":"CoW Swap","environment":"barn","metadata":{}}'
REACT_APP_FULL_APP_DATA_STAGING='{"version":"1.1.0","appCode":"CoW Swap","environment":"staging","metadata":{}}'
REACT_APP_FULL_APP_DATA_PR='{"version":"1.1.0","appCode":"CoW Swap","environment":"pr","metadata":{}}'
REACT_APP_FULL_APP_DATA_DEVELOPMENT='{"version":"1.1.0","appCode":"CoW Swap","environment":"development","metadata":{}}'
REACT_APP_FULL_APP_DATA_LOCAL='{"version":"1.1.0","appCode":"CoW Swap","environment":"local","metadata":{}}'



#######################################
# Order Book
#######################################
# Fee quote requests and posting orders are sent to the Orderbook API
# This API has the responsibility of collecting orders and handing them to the solvers.
#
# The reference implementation of the API is [CoW Protocol Services](https://github.com/cowprotocol/services).
# Most likely you leave its default and not set this config.

# Order book API urls
#REACT_APP_ORDER_BOOK_URLS='{"1":"https://YOUR_HOST","100":"https://YOUR_HOST","5":"https://YOUR_HOST"}'



#######################################
# End To End Test
#######################################
# ⚠️ Required for E2E tests to run

# Cypress Integration Tests
INTEGRATION_TEST_PRIVATE_KEY=
INTEGRATION_TESTS_INFURA_KEY=



#######################################
# Explorer Base Url
#######################################

# Explorer Base Urls
#REACT_APP_EXPLORER_URL_DEV=
#REACT_APP_EXPLORER_URL_STAGING=
#REACT_APP_EXPLORER_URL_PROD=
#REACT_APP_EXPLORER_URL_BARN=



#######################################
# Development
#######################################

# Enables mock mode (default = false)
REACT_APP_MOCK=true



#######################################
# Price estimations
#######################################

# Price estimations (only when Legacy API Estimation is enabled)
# REACT_APP_PRICE_FEED_1INCH_ENABLED=true
# REACT_APP_PRICE_FEED_0X_ENABLED=true



#######################################
# Environment detection (based on domain URLs)
#######################################

# Domain regex (to detect environment)
# REACT_APP_DOMAIN_REGEX_LOCAL="^(:?localhost:\d{2,5}|(?:127|192)(?:\.[0-9]{1,3}){3})"
# REACT_APP_DOMAIN_REGEX_PR="^pr\d+--cowswap\.review|^(swap-dev-git-[\w\d-]+|swap-\w{9}-)cowswap\.vercel\.app"
# REACT_APP_DOMAIN_REGEX_DEVELOPMENT="^(dev\.swap\.cow\.fi|swap-develop\.vercel\.app)"
# REACT_APP_DOMAIN_REGEX_STAGING="^(staging\.swap\.cow\.fi|swap-staging\.vercel\.app)"
# REACT_APP_DOMAIN_REGEX_PRODUCTION="^(swap\.cow\.fi|swap-prod\.vercel\.app)$"
# REACT_APP_DOMAIN_REGEX_BARN="^(barn\.cow\.fi|swap-barn\.vercel\.app)$"
# REACT_APP_DOMAIN_REGEX_ENS="(:?^cowswap\.eth|ipfs)"

# Path regex (to detect environment)
# REACT_APP_PATH_REGEX_ENS="/ipfs"
