/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CoWSwapEthFlow,
  CoWSwapEthFlowInterface,
} from "../CoWSwapEthFlow";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICoWSwapSettlement",
        name: "_cowSwapSettlement",
        type: "address",
      },
      {
        internalType: "contract IWrappedNativeToken",
        name: "_wrappedNativeToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EthTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectEthAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "NotAllowedToDeleteOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowedZeroSellAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "OrderIsAlreadyOwned",
    type: "error",
  },
  {
    inputs: [],
    name: "ReceiverMustBeSet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "sellToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "buyToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "validTo",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "appData",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "kind",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "partiallyFillable",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "sellTokenBalance",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "buyTokenBalance",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct GPv2Order.Data",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ICoWSwapOnchainOrders.OnchainSigningScheme",
            name: "scheme",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct ICoWSwapOnchainOrders.OnchainSignature",
        name: "signature",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "OrderPlacement",
    type: "event",
  },
  {
    inputs: [],
    name: "cowSwapSettlement",
    outputs: [
      {
        internalType: "contract ICoWSwapSettlement",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "buyToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "appData",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "validTo",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "partiallyFillable",
            type: "bool",
          },
          {
            internalType: "int64",
            name: "quoteId",
            type: "int64",
          },
        ],
        internalType: "struct EthFlowOrder.Data",
        name: "order",
        type: "tuple",
      },
    ],
    name: "createOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "buyToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "appData",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "validTo",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "partiallyFillable",
            type: "bool",
          },
          {
            internalType: "int64",
            name: "quoteId",
            type: "int64",
          },
        ],
        internalType: "struct EthFlowOrder.Data",
        name: "order",
        type: "tuple",
      },
    ],
    name: "deleteOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "buyToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "appData",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "validTo",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "partiallyFillable",
            type: "bool",
          },
          {
            internalType: "int64",
            name: "quoteId",
            type: "int64",
          },
        ],
        internalType: "struct EthFlowOrder.Data[]",
        name: "orderArray",
        type: "tuple[]",
      },
    ],
    name: "deleteOrders",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "validTo",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNativeToken",
    outputs: [
      {
        internalType: "contract IWrappedNativeToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b5060405162001a3238038062001a3283398101604081905262000034916200021e565b816200004b816200015260201b62000cc01760201c565b608052506001600160a01b0380831660a081905290821660c081905260408051634daa966160e11b81529051919263095ea7b3929091639b552cc291600480830192602092919082900301816000875af1158015620000ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d491906200025d565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af115801562000123573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000149919062000284565b505050620002a8565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf606082015246608082018190526001600160a01b03831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b6001600160a01b03811681146200021b57600080fd5b50565b600080604083850312156200023257600080fd5b82516200023f8162000205565b6020840151909250620002528162000205565b809150509250929050565b6000602082840312156200027057600080fd5b81516200027d8162000205565b9392505050565b6000602082840312156200029757600080fd5b815180151581146200027d57600080fd5b60805160a05160c0516117296200030960003960008181610129015281816105b00152818161072601528181610a8d01528181610bd20152610c4a0152600081816102ce01526109a70152600081816107cc015261101c01526117296000f3fe6080604052600436106100b55760003560e01c80639c3f1e9011610069578063de0e9a3e1161004e578063de0e9a3e1461027c578063ea598cb01461029c578063ec30bb88146102bc57600080fd5b80639c3f1e90146101c8578063b52e0d641461025c57600080fd5b8063322bba211161009a578063322bba21146101705780634b5b7141146101915780634c84c1c8146101b357600080fd5b80631626ba7e146100c157806317fcb39b1461011757600080fd5b366100bc57005b600080fd5b3480156100cd57600080fd5b506100e16100dc366004611176565b6102f0565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b34801561012357600080fd5b5061014b7f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff909116815260200161010e565b61018361017e366004611233565b6103de565b60405190815260200161010e565b34801561019d57600080fd5b506101b16101ac36600461124c565b6106d1565b005b3480156101bf57600080fd5b506101b1610714565b3480156101d457600080fd5b5061022b6101e33660046112c2565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff81169074010000000000000000000000000000000000000000900463ffffffff1682565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835263ffffffff90911660208301520161010e565b34801561026857600080fd5b506101b1610277366004611233565b61071f565b34801561028857600080fd5b506101b16102973660046112c2565b610ba3565b3480156102a857600080fd5b506101b16102b73660046112c2565b610c46565b3480156102c857600080fd5b5061014b7f000000000000000000000000000000000000000000000000000000000000000081565b60008281526020818152604080832081518083019092525473ffffffffffffffffffffffffffffffffffffffff81168083527401000000000000000000000000000000000000000090910463ffffffff1692820192909252901580159061036f5750805173ffffffffffffffffffffffffffffffffffffffff90811614155b8015610385575042816020015163ffffffff1610155b156103b357507f1626ba7e0000000000000000000000000000000000000000000000000000000090506103d8565b507fffffffff0000000000000000000000000000000000000000000000000000000090505b92915050565b60006103f260a0830135604084013561130a565b341461042a576040517f8b6ebb4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b8160400135600003610468576040517feaec5c9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080518082019091523381526000906020810161048c60e0860160c08701611336565b63ffffffff1690526040805180820190915290915060009080828152602001306040516020016104e7919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905290529050600061052d6101208601610100870161136a565b60208085015160405161057493920160c09290921b825260e01b7fffffffff00000000000000000000000000000000000000000000000000000000166008820152600c0190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905283519091506105eb906105e47f00000000000000000000000000000000000000000000000000000000000000006105de368a90038a018a6113b9565b90610d80565b8484610f4f565b60008181526020819052604090205490945073ffffffffffffffffffffffffffffffffffffffff1615610652576040517f56a1d2b2000000000000000000000000000000000000000000000000000000008152600481018590526024015b60405180910390fd5b505060008281526020818152604090912082518154929093015163ffffffff1674010000000000000000000000000000000000000000027fffffffffffffffff00000000000000000000000000000000000000000000000090921673ffffffffffffffffffffffffffffffffffffffff90931692909217179055919050565b60005b8181101561070f576106fd8383838181106106f1576106f1611453565b9050610120020161071f565b8061070781611482565b9150506106d4565b505050565b61071d47610c46565b565b60006107547f00000000000000000000000000000000000000000000000000000000000000006105de368590038501856113b9565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a082209152604080517f190100000000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600282015260228101929092526042909120600081815260208181529083902083518085019094525473ffffffffffffffffffffffffffffffffffffffff8082168086527401000000000000000000000000000000000000000090920463ffffffff16928501929092529394509092148061087b5750805173ffffffffffffffffffffffffffffffffffffffff16155b806108b2575042816020015163ffffffff16101580156108b25750805173ffffffffffffffffffffffffffffffffffffffff163314155b156108ec576040517f96d4fcee00000000000000000000000000000000000000000000000000000000815260048101839052602401610649565b60008281526020818152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff1790558051603880825260608201909252918201818036833750505060a085015190915061096790829085903090611051565b6040517f2479fb6e00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632479fb6e906109dc90859060040161151e565b6020604051808303816000875af11580156109fb573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610a1f9190611531565b90506000808660600151838860e001510281610a3d57610a3d61154a565b048760e0015103905080838860600151030191505080471015610b00576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815247820360048201819052907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b158015610ae657600080fd5b505af1158015610afa573d6000803e3d6000fd5b50505050505b835160405160009173ffffffffffffffffffffffffffffffffffffffff169083908381818185875af1925050503d8060008114610b59576040519150601f19603f3d011682016040523d82523d6000602084013e610b5e565b606091505b5050905080610b99576040517f6d963f8800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050505050565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b158015610c2b57600080fd5b505af1158015610c3f573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610c3f576040519150601f19603f3d011682016040523d82523d6000602084013e610c3f565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf6060820152466080820181905273ffffffffffffffffffffffffffffffffffffffff831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b604080516101808101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e082018190526101008201819052610120820181905261014082018190526101608201529083015173ffffffffffffffffffffffffffffffffffffffff16610e2f576040517fefc9ccdf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518061018001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015173ffffffffffffffffffffffffffffffffffffffff168152602001846040015181526020018460600151815260200163ffffffff80168152602001846080015181526020018460a0015181526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020018460e00151151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9815250905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff167fcf5f9de2984132265203b5c335b25727702ca77262ff622e136baa7362bf1da9858585604051610f9b939291906115d9565b60405180910390a25050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f190100000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006002820152602281019190915260429020919050565b60388451146110bc576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f475076323a2075696420627566666572206f766572666c6f77000000000000006044820152606401610649565b60388401526034830152602090910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff81118282101715611121576111216110ce565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff8111828210171561116e5761116e6110ce565b604052919050565b6000806040838503121561118957600080fd5b8235915060208084013567ffffffffffffffff808211156111a957600080fd5b818601915086601f8301126111bd57600080fd5b8135818111156111cf576111cf6110ce565b6111ff847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f84011601611127565b9150808252878482850101111561121557600080fd5b80848401858401376000848284010152508093505050509250929050565b6000610120828403121561124657600080fd5b50919050565b6000806020838503121561125f57600080fd5b823567ffffffffffffffff8082111561127757600080fd5b818501915085601f83011261128b57600080fd5b81358181111561129a57600080fd5b866020610120830285010111156112b057600080fd5b60209290920196919550909350505050565b6000602082840312156112d457600080fd5b5035919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b808201808211156103d8576103d86112db565b803563ffffffff8116811461133157600080fd5b919050565b60006020828403121561134857600080fd5b6113518261131d565b9392505050565b8035600781900b811461133157600080fd5b60006020828403121561137c57600080fd5b61135182611358565b803573ffffffffffffffffffffffffffffffffffffffff8116811461133157600080fd5b8035801515811461133157600080fd5b600061012082840312156113cc57600080fd5b6113d46110fd565b6113dd83611385565b81526113eb60208401611385565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261142460c0840161131d565b60c082015261143560e084016113a9565b60e0820152610100611448818501611358565b908201529392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60007fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82036114b3576114b36112db565b5060010190565b6000815180845260005b818110156114e0576020818501810151868301820152016114c4565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b60208152600061135160208301846114ba565b60006020828403121561154357600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b60008151600281106115b4577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b808452506020820151604060208501526115d160408501826114ba565b949350505050565b835173ffffffffffffffffffffffffffffffffffffffff16815260006101c0602086015161161f602085018273ffffffffffffffffffffffffffffffffffffffff169052565b506040860151611647604085018273ffffffffffffffffffffffffffffffffffffffff169052565b50606086015160608401526080860151608084015260a086015161167360a085018263ffffffff169052565b5060c086015160c084015260e086015160e0840152610100808701518185015250610120808701516116a88286018215159052565b50506101408681015190840152610160808701519084015261018083018190526116d481840186611579565b90508281036101a08401526116e981856114ba565b969550505050505056fea2646970667358221220856645f057ed8acd16a3f78b8e90957ec4e1575d4c1d1b2bdf1fd9993b180f7164736f6c63430008100033";

export class CoWSwapEthFlow__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _cowSwapSettlement: string,
    _wrappedNativeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CoWSwapEthFlow> {
    return super.deploy(
      _cowSwapSettlement,
      _wrappedNativeToken,
      overrides || {}
    ) as Promise<CoWSwapEthFlow>;
  }
  getDeployTransaction(
    _cowSwapSettlement: string,
    _wrappedNativeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cowSwapSettlement,
      _wrappedNativeToken,
      overrides || {}
    );
  }
  attach(address: string): CoWSwapEthFlow {
    return super.attach(address) as CoWSwapEthFlow;
  }
  connect(signer: Signer): CoWSwapEthFlow__factory {
    return super.connect(signer) as CoWSwapEthFlow__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoWSwapEthFlowInterface {
    return new utils.Interface(_abi) as CoWSwapEthFlowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoWSwapEthFlow {
    return new Contract(address, _abi, signerOrProvider) as CoWSwapEthFlow;
  }
}
