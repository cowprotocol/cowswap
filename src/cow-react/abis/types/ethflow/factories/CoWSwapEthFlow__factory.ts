/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type {
  CoWSwapEthFlow,
  CoWSwapEthFlowInterface,
} from "../CoWSwapEthFlow";

const _abi = [
  {
    inputs: [
      {
        internalType: "contract ICoWSwapSettlement",
        name: "_cowSwapSettlement",
        type: "address",
      },
      {
        internalType: "contract IWrappedNativeToken",
        name: "_wrappedNativeToken",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "EthTransferFailed",
    type: "error",
  },
  {
    inputs: [],
    name: "IncorrectEthAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "NotAllowedToDeleteOrder",
    type: "error",
  },
  {
    inputs: [],
    name: "NotAllowedZeroSellAmount",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    name: "OrderIsAlreadyOwned",
    type: "error",
  },
  {
    inputs: [],
    name: "ReceiverMustBeSet",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "sellToken",
            type: "address",
          },
          {
            internalType: "contract IERC20",
            name: "buyToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "validTo",
            type: "uint32",
          },
          {
            internalType: "bytes32",
            name: "appData",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "kind",
            type: "bytes32",
          },
          {
            internalType: "bool",
            name: "partiallyFillable",
            type: "bool",
          },
          {
            internalType: "bytes32",
            name: "sellTokenBalance",
            type: "bytes32",
          },
          {
            internalType: "bytes32",
            name: "buyTokenBalance",
            type: "bytes32",
          },
        ],
        indexed: false,
        internalType: "struct GPv2Order.Data",
        name: "order",
        type: "tuple",
      },
      {
        components: [
          {
            internalType: "enum ICoWSwapOnchainOrders.OnchainSigningScheme",
            name: "scheme",
            type: "uint8",
          },
          {
            internalType: "bytes",
            name: "data",
            type: "bytes",
          },
        ],
        indexed: false,
        internalType: "struct ICoWSwapOnchainOrders.OnchainSignature",
        name: "signature",
        type: "tuple",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "data",
        type: "bytes",
      },
    ],
    name: "OrderPlacement",
    type: "event",
  },
  {
    inputs: [],
    name: "cowSwapSettlement",
    outputs: [
      {
        internalType: "contract ICoWSwapSettlement",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "buyToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "appData",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "validTo",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "partiallyFillable",
            type: "bool",
          },
          {
            internalType: "int64",
            name: "quoteId",
            type: "int64",
          },
        ],
        internalType: "struct EthFlowOrder.Data",
        name: "order",
        type: "tuple",
      },
    ],
    name: "createOrder",
    outputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
    ],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "contract IERC20",
            name: "buyToken",
            type: "address",
          },
          {
            internalType: "address",
            name: "receiver",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "sellAmount",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "buyAmount",
            type: "uint256",
          },
          {
            internalType: "bytes32",
            name: "appData",
            type: "bytes32",
          },
          {
            internalType: "uint256",
            name: "feeAmount",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "validTo",
            type: "uint32",
          },
          {
            internalType: "bool",
            name: "partiallyFillable",
            type: "bool",
          },
          {
            internalType: "int64",
            name: "quoteId",
            type: "int64",
          },
        ],
        internalType: "struct EthFlowOrder.Data",
        name: "order",
        type: "tuple",
      },
    ],
    name: "deleteOrder",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "orderHash",
        type: "bytes32",
      },
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    name: "isValidSignature",
    outputs: [
      {
        internalType: "bytes4",
        name: "",
        type: "bytes4",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "orders",
    outputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint32",
        name: "validTo",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "unwrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "amount",
        type: "uint256",
      },
    ],
    name: "wrap",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrapAll",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "wrappedNativeToken",
    outputs: [
      {
        internalType: "contract IWrappedNativeToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x60e06040523480156200001157600080fd5b50604051620018cf380380620018cf83398101604081905262000034916200021e565b816200004b816200015260201b62000c421760201c565b608052506001600160a01b0380831660a081905290821660c081905260408051634daa966160e11b81529051919263095ea7b3929091639b552cc291600480830192602092919082900301816000875af1158015620000ae573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190620000d491906200025d565b6040516001600160e01b031960e084901b1681526001600160a01b03909116600482015260001960248201526044016020604051808303816000875af115801562000123573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019062000149919062000284565b505050620002a8565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf606082015246608082018190526001600160a01b03831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b6001600160a01b03811681146200021b57600080fd5b50565b600080604083850312156200023257600080fd5b82516200023f8162000205565b6020840151909250620002528162000205565b809150509250929050565b6000602082840312156200027057600080fd5b81516200027d8162000205565b9392505050565b6000602082840312156200029757600080fd5b815180151581146200027d57600080fd5b60805160a05160c0516115c6620003096000396000818161010e01528181610575015281816106a801528181610a0f01528181610b540152610bcc015260008181610293015261092901526000818161074e0152610f9e01526115c66000f3fe60806040526004361061009a5760003560e01c80639c3f1e9011610069578063de0e9a3e1161004e578063de0e9a3e14610241578063ea598cb014610261578063ec30bb881461028157600080fd5b80639c3f1e901461018d578063b52e0d641461022157600080fd5b80631626ba7e146100a657806317fcb39b146100fc578063322bba21146101555780634c84c1c81461017657600080fd5b366100a157005b600080fd5b3480156100b257600080fd5b506100c66100c13660046110f8565b6102b5565b6040517fffffffff0000000000000000000000000000000000000000000000000000000090911681526020015b60405180910390f35b34801561010857600080fd5b506101307f000000000000000000000000000000000000000000000000000000000000000081565b60405173ffffffffffffffffffffffffffffffffffffffff90911681526020016100f3565b6101686101633660046111b5565b6103a3565b6040519081526020016100f3565b34801561018257600080fd5b5061018b610696565b005b34801561019957600080fd5b506101f06101a83660046111ce565b60006020819052908152604090205473ffffffffffffffffffffffffffffffffffffffff81169074010000000000000000000000000000000000000000900463ffffffff1682565b6040805173ffffffffffffffffffffffffffffffffffffffff909316835263ffffffff9091166020830152016100f3565b34801561022d57600080fd5b5061018b61023c3660046111b5565b6106a1565b34801561024d57600080fd5b5061018b61025c3660046111ce565b610b25565b34801561026d57600080fd5b5061018b61027c3660046111ce565b610bc8565b34801561028d57600080fd5b506101307f000000000000000000000000000000000000000000000000000000000000000081565b60008281526020818152604080832081518083019092525473ffffffffffffffffffffffffffffffffffffffff81168083527401000000000000000000000000000000000000000090910463ffffffff169282019290925290158015906103345750805173ffffffffffffffffffffffffffffffffffffffff90811614155b801561034a575042816020015163ffffffff1610155b1561037857507f1626ba7e00000000000000000000000000000000000000000000000000000000905061039d565b507fffffffff0000000000000000000000000000000000000000000000000000000090505b92915050565b60006103b760a083013560408401356111e7565b34146103ef576040517f8b6ebb4d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b816040013560000361042d576040517feaec5c9d00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b604080518082019091523381526000906020810161045160e0860160c0870161123a565b63ffffffff1690526040805180820190915290915060009080828152602001306040516020016104ac919060609190911b7fffffffffffffffffffffffffffffffffffffffff00000000000000000000000016815260140190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08184030181529190529052905060006104f26101208601610100870161126e565b60208085015160405161053993920160c09290921b825260e01b7fffffffff00000000000000000000000000000000000000000000000000000000166008820152600c0190565b604080517fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe081840301815291905283519091506105b0906105a97f00000000000000000000000000000000000000000000000000000000000000006105a3368a90038a018a6112bd565b90610d02565b8484610ed1565b60008181526020819052604090205490945073ffffffffffffffffffffffffffffffffffffffff1615610617576040517f56a1d2b2000000000000000000000000000000000000000000000000000000008152600481018590526024015b60405180910390fd5b505060008281526020818152604090912082518154929093015163ffffffff1674010000000000000000000000000000000000000000027fffffffffffffffff00000000000000000000000000000000000000000000000090921673ffffffffffffffffffffffffffffffffffffffff90931692909217179055919050565b61069f47610bc8565b565b60006106d67f00000000000000000000000000000000000000000000000000000000000000006105a3368590038501856112bd565b7fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0810180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a082209152604080517f190100000000000000000000000000000000000000000000000000000000000081527f0000000000000000000000000000000000000000000000000000000000000000600282015260228101929092526042909120600081815260208181529083902083518085019094525473ffffffffffffffffffffffffffffffffffffffff8082168086527401000000000000000000000000000000000000000090920463ffffffff1692850192909252939450909214806107fd5750805173ffffffffffffffffffffffffffffffffffffffff16155b80610834575042816020015163ffffffff16101580156108345750805173ffffffffffffffffffffffffffffffffffffffff163314155b1561086e576040517f96d4fcee0000000000000000000000000000000000000000000000000000000081526004810183905260240161060e565b60008281526020818152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000001673ffffffffffffffffffffffffffffffffffffffff1790558051603880825260608201909252918201818036833750505060a08501519091506108e990829085903090610fd3565b6040517f2479fb6e00000000000000000000000000000000000000000000000000000000815260009073ffffffffffffffffffffffffffffffffffffffff7f00000000000000000000000000000000000000000000000000000000000000001690632479fb6e9061095e9085906004016113bb565b6020604051808303816000875af115801561097d573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906109a191906113ce565b90506000808660600151838860e0015102816109bf576109bf6113e7565b048760e0015103905080838860600151030191505080471015610a82576040517f2e1a7d4d00000000000000000000000000000000000000000000000000000000815247820360048201819052907f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b158015610a6857600080fd5b505af1158015610a7c573d6000803e3d6000fd5b50505050505b835160405160009173ffffffffffffffffffffffffffffffffffffffff169083908381818185875af1925050503d8060008114610adb576040519150601f19603f3d011682016040523d82523d6000602084013e610ae0565b606091505b5050905080610b1b576040517f6d963f8800000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b5050505050505050565b6040517f2e1a7d4d000000000000000000000000000000000000000000000000000000008152600481018290527f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff1690632e1a7d4d90602401600060405180830381600087803b158015610bad57600080fd5b505af1158015610bc1573d6000803e3d6000fd5b5050505050565b60007f000000000000000000000000000000000000000000000000000000000000000073ffffffffffffffffffffffffffffffffffffffff168260405160006040518083038185875af1925050503d8060008114610bc1576040519150601f19603f3d011682016040523d82523d6000602084013e610bc1565b604080517f8b73c3c69bb8fe3d512ecc4cf759cc79239f7b179b0ffacaa9a75d522b39400f60208201527f6c85c0337eba1661327f94f3bf46c8a7f9311a563f4d5c948362567f5d8ed60c918101919091527ff9446b8e937d86f0bc87cac73923491692b123ca5f8761908494703758206adf6060820152466080820181905273ffffffffffffffffffffffffffffffffffffffff831660a083015260009160c00160405160208183030381529060405280519060200120915050919050565b604080516101808101825260008082526020808301829052928201819052606082018190526080820181905260a0820181905260c0820181905260e082018190526101008201819052610120820181905261014082018190526101608201529083015173ffffffffffffffffffffffffffffffffffffffff16610db1576040517fefc9ccdf00000000000000000000000000000000000000000000000000000000815260040160405180910390fd5b6040518061018001604052808373ffffffffffffffffffffffffffffffffffffffff168152602001846000015173ffffffffffffffffffffffffffffffffffffffff168152602001846020015173ffffffffffffffffffffffffffffffffffffffff168152602001846040015181526020018460600151815260200163ffffffff80168152602001846080015181526020018460a0015181526020017ff3b277728b3fee749481eb3e0b3b48980dbbab78658fc419025cb16eee34677581526020018460e00151151581526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc981526020017f5a28e9363bb942b639270062aa6bb295f434bcdfc42c97267bf003f272060dc9815250905092915050565b60008473ffffffffffffffffffffffffffffffffffffffff167fcf5f9de2984132265203b5c335b25727702ca77262ff622e136baa7362bf1da9858585604051610f1d93929190611476565b60405180910390a25050507fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe00180517fd5a25ba2e97094ad7d83dc28a6572da797d6b3e7fc6663bd93efb789fc17e48982526101a0822091526040517f190100000000000000000000000000000000000000000000000000000000000081527f00000000000000000000000000000000000000000000000000000000000000006002820152602281019190915260429020919050565b603884511461103e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260206004820152601960248201527f475076323a2075696420627566666572206f766572666c6f7700000000000000604482015260640161060e565b60388401526034830152602090910152565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051610120810167ffffffffffffffff811182821017156110a3576110a3611050565b60405290565b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156110f0576110f0611050565b604052919050565b6000806040838503121561110b57600080fd5b8235915060208084013567ffffffffffffffff8082111561112b57600080fd5b818601915086601f83011261113f57600080fd5b81358181111561115157611151611050565b611181847fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f840116016110a9565b9150808252878482850101111561119757600080fd5b80848401858401376000848284010152508093505050509250929050565b600061012082840312156111c857600080fd5b50919050565b6000602082840312156111e057600080fd5b5035919050565b8082018082111561039d577f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b803563ffffffff8116811461123557600080fd5b919050565b60006020828403121561124c57600080fd5b61125582611221565b9392505050565b8035600781900b811461123557600080fd5b60006020828403121561128057600080fd5b6112558261125c565b803573ffffffffffffffffffffffffffffffffffffffff8116811461123557600080fd5b8035801515811461123557600080fd5b600061012082840312156112d057600080fd5b6112d861107f565b6112e183611289565b81526112ef60208401611289565b602082015260408301356040820152606083013560608201526080830135608082015260a083013560a082015261132860c08401611221565b60c082015261133960e084016112ad565b60e082015261010061134c81850161125c565b908201529392505050565b6000815180845260005b8181101561137d57602081850181015186830182015201611361565b5060006020828601015260207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f83011685010191505092915050565b6020815260006112556020830184611357565b6000602082840312156113e057600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601260045260246000fd5b6000815160028110611451577f4e487b7100000000000000000000000000000000000000000000000000000000600052602160045260246000fd5b8084525060208201516040602085015261146e6040850182611357565b949350505050565b835173ffffffffffffffffffffffffffffffffffffffff16815260006101c060208601516114bc602085018273ffffffffffffffffffffffffffffffffffffffff169052565b5060408601516114e4604085018273ffffffffffffffffffffffffffffffffffffffff169052565b50606086015160608401526080860151608084015260a086015161151060a085018263ffffffff169052565b5060c086015160c084015260e086015160e0840152610100808701518185015250610120808701516115458286018215159052565b505061014086810151908401526101608087015190840152610180830181905261157181840186611416565b90508281036101a08401526115868185611357565b969550505050505056fea26469706673582212203e4c2cbc731f5e96936c5500eaa243a313494094bee39b2806cf739e6e260cdf64736f6c63430008100033";

export class CoWSwapEthFlow__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _cowSwapSettlement: string,
    _wrappedNativeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<CoWSwapEthFlow> {
    return super.deploy(
      _cowSwapSettlement,
      _wrappedNativeToken,
      overrides || {}
    ) as Promise<CoWSwapEthFlow>;
  }
  getDeployTransaction(
    _cowSwapSettlement: string,
    _wrappedNativeToken: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _cowSwapSettlement,
      _wrappedNativeToken,
      overrides || {}
    );
  }
  attach(address: string): CoWSwapEthFlow {
    return super.attach(address) as CoWSwapEthFlow;
  }
  connect(signer: Signer): CoWSwapEthFlow__factory {
    return super.connect(signer) as CoWSwapEthFlow__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): CoWSwapEthFlowInterface {
    return new utils.Interface(_abi) as CoWSwapEthFlowInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): CoWSwapEthFlow {
    return new Contract(address, _abi, signerOrProvider) as CoWSwapEthFlow;
  }
}
