name: Vercel

on:
  workflow_call:
    inputs:
      env_name:
        description: 'Environment to deploy to. Options are: dev, staging, barn and prod'
        required: true
        type: string

env:
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}

jobs:
  build_and_deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set VERCEL_PROJECT_ID env var
        run: >
          if [[ ${{ inputs.env_name == 'dev' }} ]]; then
            echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ID_DEV }}" >> $GITHUB_ENV
          elif [[ ${{ inputs.env_name == 'staging' }} ]]; then
            echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ID_STAGING }}" >> $GITHUB_ENV
          elif [[ ${{ inputs.env_name == 'barn' }} ]]; then
            echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ID_BARN }}" >> $GITHUB_ENV
          elif [[ ${{ inputs.env_name == 'prod' }} ]]; then
            echo "VERCEL_PROJECT_ID=${{ secrets.VERCEL_PROJECT_ID_PROD }}" >> $GITHUB_ENV
          fi

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=production --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build -t ${{ secrets.VERCEL_TOKEN }} --prod

      - name: Get the version
        id: get_version
        run: echo "VERSION=$(echo $GITHUB_REF | cut -d / -f 3)" >> $GITHUB_OUTPUT

      - name: Deploy Project Artifacts to Vercel
        run: >
          vercel deploy --prebuilt --prod
          -t ${{ secrets.VERCEL_TOKEN }}
          -b REACT_APP_SENTRY_DSN=${{ secrets.SENTRY_DSN }}
          -b REACT_APP_SENTRY_AUTH_TOKEN=${{ secrets.SENTRY_AUTH_TOKEN }}
          -b REACT_APP_PINATA_API_KEY=${{ secrets.REACT_APP_PINATA_API_KEY }}
          -b REACT_APP_PINATA_SECRET_API_KEY=${{ secrets.REACT_APP_PINATA_SECRET_API_KEY }}
          -b REACT_APP_BLOCKNATIVE_API_KEY=${{ secrets.REACT_APP_BLOCKNATIVE_API_KEY }}
          -b REACT_APP_GOOGLE_ANALYTICS_ID=${{ secrets.REACT_APP_GOOGLE_ANALYTICS_ID }}
          -b REACT_APP_AMPLITUDE_KEY=${{ secrets.REACT_APP_AMPLITUDE_KEY }}
          -m VERSION=${{ steps.get_version.outputs.VERSION }}
          -m COMMIT=${{ github.sha }}
