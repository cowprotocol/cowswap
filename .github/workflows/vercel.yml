name: Vercel

on:
  workflow_call:
    inputs:
      project_id_env_var_name:
        description: 'The Vercel Project ID identifying which stage will be deployed'
        required: true
        type: string




env:
  VERCEL_PROJECT_ID: ${{ secrets['${{ inputs.project_id_env_var_name }}'] }}
  VERCEL_ORG_ID: ${{ secrets.VERCEL_ORG_ID }}
#  VERCEL_PROJECT_ID_DEV: ${{ secrets.VERCEL_PROJECT_ID_DEV }}
#  VERCEL_PROJECT_ID_STAGING: ${{ secrets.VERCEL_PROJECT_ID_STAGING }}
#  VERCEL_PROJECT_ID_BARN: ${{ secrets.VERCEL_PROJECT_ID_BARN }}
#  VERCEL_PROJECT_ID_PROD: ${{ secrets.VERCEL_PROJECT_ID_PROD }}

jobs:
  run:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Pull Vercel Environment Information
        run: vercel pull --yes --environment=preview --token=${{ secrets.VERCEL_TOKEN }}

      - name: Build Project Artifacts
        run: vercel build -t ${{ secrets.VERCEL_TOKEN }} --prod

      - name: Get the version
        id: get_version
        run: echo ::set-output name=VERSION::$(echo $GITHUB_REF | cut -d / -f 3)

      - name: Deploy Project Artifacts to Vercel
        run: >
          vercel deploy --prebuilt --prod
          -t ${{ secrets.VERCEL_TOKEN }}
          -b REACT_APP_SENTRY_DSN=${{ env.REACT_APP_SENTRY_DSN }}
          -b REACT_APP_PINATA_API_KEY=${{ env.REACT_APP_PINATA_API_KEY }}
          -b REACT_APP_PINATA_SECRET_API_KEY=${{ env.REACT_APP_PINATA_SECRET_API_KEY }}
          -b REACT_APP_SENTRY_AUTH_TOKEN=${{ env.REACT_APP_SENTRY_AUTH_TOKEN }}
          -b REACT_APP_BLOCKNATIVE_API_KEY=${{ env.REACT_APP_BLOCKNATIVE_API_KEY }}
          -b REACT_APP_GOOGLE_ANALYTICS_ID=${{ env.REACT_APP_GOOGLE_ANALYTICS_ID }}
          -b REACT_APP_AMPLITUDE_KEY=${{ env.REACT_APP_AMPLITUDE_KEY }}
          -m VERSION=${{ steps.get_version.outputs.VERSION }}
          -m COMMIT=${{ github.sha }}
