{
  "name": "@cowprotocol/cowswap",
  "version": "1.40.0",
  "description": "CoW Swap",
  "main": "index.js",
  "author": "",
  "license": "ISC",
  "scripts": {
    "start": "nx exec -- craco start",
    "build": "nx run-many -t build",
    "build:cowswap": "nx build cowswap",
    "test": "nx run-many -t test",
    "e2e": "nx run-many -t e2e",
    "start:ssl": "nx exec -- HTTPS=true yarn start",
    "start:service-worker": "nx exec -- yarn _start:service-worker ",
    "lint:fix": "nx exec -- yarn run eslint --fix ./",
    "mock": "nx exec -- REACT_APP_MOCK=true yarn start",
    "build:analyze": "nx exec -- cross-env REACT_APP_ANALYZE_BUNDLE=true yarn build",
    "ipfs:build": "nx exec -- cross-env PUBLIC_URL=\".\" yarn build",
    "ipfs:publish": "nx exec -- ipfs-deploy build -p pinata -O",
    "test:debug": "nx exec -- craco --inspect-brk test --runInBand --no-cache",
    "eject": "react-scripts eject",
    "serve": "nx exec -- serve build -l 3000",
    "serve:ci": "nx exec -- serve website -l 3000",
    "cypress": "nx exec -- cypress open",
    "contracts:add:export": "nx exec -- node ./scripts/contracts_add_export.js",
    "contracts:compile:abi": "nx exec -- typechain --target ethers-v5 --out-dir src/abis/types './src/abis/**/*.json'",
    "contracts:compile:abi-ethflow": "nx exec -- typechain --target ethers-v5 --out-dir src/abis/types/ethflow \"./node_modules/@cowprotocol/ethflowcontract/artifacts/CoWSwapEthFlow.sol/*.json\"",
    "contracts:compile:abi-uniswap": "nx exec -- typechain --target ethers-v5 --out-dir src/legacy/abis/types \"./src/legacy/abis/**/*.json\"",
    "contracts:compile:v3": "nx exec -- typechain --target ethers-v5 --out-dir src/legacy/types/v3 \"./node_modules/@uniswap/**/artifacts/contracts/**/*[!dbg].json\"",
    "contracts:compile": "nx exec -- yarn _contracts:compile ",
    "prei18n:extract": "touch src/locales/en-US.po",
    "optimize-bundle": "nx exec -- node ./scripts/fix-ethereumjs-bundle.js",
    "patch-package": "nx exec -- patch-package",
    "i18n:extract": "nx exec -- cross-env NODE_ENV=development lingui extract --locale en-US",
    "i18n:compile": "nx exec -- yarn _i18n:compile ",
    "i18n:pseudo": "nx exec -- yarn _i18n:pseudo ",
    "postinstall": "yarn contracts:compile && yarn i18n:compile && yarn patch-package",
    "prepare": "husky install",
    "prepublishOnly": "yarn widgets:build",
    "cosmos:clear": "nx exec -- rm -rf ./public/cosmos",
    "cosmos:run": "nx exec -- yarn _cosmos:run ",
    "cosmos:export": "nx exec -- cross-env NODE_ENV=development cosmos-export",
    "widgets:build": "nx exec -- rollup --config --failAfterWarnings --configPlugin typescript2",
    "sitemap": "nx exec -- node src/sitemap",
    "writeVersion": "nx exec -- node src/writeVersion",
    "_start:service-worker": "yarn build && yarn serve",
    "_contracts:compile": "yarn contracts:compile:abi && yarn contracts:compile:abi-ethflow && yarn contracts:add:export && yarn contracts:compile:abi-uniswap && yarn contracts:compile:v3",
    "_i18n:compile": "yarn i18n:extract && lingui compile",
    "_i18n:pseudo": "lingui extract --locale pseudo && lingui compile",
    "_cosmos:run": "yarn cosmos:clear && cosmos"
  },
  "browser": {
    "crypto": false
  },
  "browserslist": {
    "production": [
      ">0.2%",
      "not dead",
      "not op_mini all"
    ],
    "development": [
      "last 1 chrome version",
      "last 1 firefox version",
      "last 1 safari version"
    ]
  },
  "jest": {
    "transformIgnorePatterns": [
      "node_modules/(?!@ledgerhq/connect-kit-loader)"
    ]
  },
  "dependencies": {
    "@amplitude/analytics-browser": "^1.1.4",
    "@babel/runtime": "^7.17.0",
    "@coinbase/wallet-sdk": "^3.3.0",
    "@cowprotocol/app-data": "v0.2.5",
    "@cowprotocol/contracts": "^1.3.1",
    "@cowprotocol/cow-runner-game": "^0.2.9",
    "@cowprotocol/cow-sdk": "^2.0.4",
    "@cowprotocol/ethflowcontract": "cowprotocol/ethflowcontract.git#v1.0.0-artifacts",
    "@davatar/react": "1.8.1",
    "@ethersproject/bignumber": "^5.7.0",
    "@fontsource/ibm-plex-mono": "^4.5.1",
    "@fontsource/inter": "^4.5.1",
    "@ledgerhq/connect-kit-loader": "^1.0.2",
    "@lingui/cli": "^3.9.0",
    "@lingui/core": "^3.15.0",
    "@lingui/macro": "^3.15.0",
    "@lingui/react": "^3.15.0",
    "@metamask/jazzicon": "^2.0.0",
    "@popperjs/core": "^2.4.4",
    "@reach/dialog": "^0.18.0",
    "@reach/menu-button": "^0.18.0",
    "@reach/portal": "^0.18.0",
    "@react-hook/window-scroll": "^1.3.0",
    "@react-spring/web": "^9.6.1",
    "@reduxjs/toolkit": "^1.8.0",
    "@safe-global/api-kit": "^1.0.1",
    "@safe-global/protocol-kit": "^0.1.1",
    "@safe-global/safe-core-sdk-types": "^1.10.1",
    "@safe-global/safe-ethers-lib": "^1.9.2",
    "@sentry/react": "^7.3.0",
    "@sentry/tracing": "^7.3.0",
    "@sentry/webpack-plugin": "^1.17.1",
    "@uniswap/governance": "^1.0.2",
    "@uniswap/liquidity-staker": "^1.0.2",
    "@uniswap/merkle-distributor": "1.0.1",
    "@uniswap/redux-multicall": "^1.1.5",
    "@uniswap/router-sdk": "^1.0.6",
    "@uniswap/sdk-core": "^3.0.1",
    "@uniswap/smart-order-router": "^2.5.26",
    "@uniswap/token-lists": "^1.0.0-beta.30",
    "@uniswap/v2-core": "1.0.0",
    "@uniswap/v2-periphery": "^1.1.0-beta.0",
    "@uniswap/v2-sdk": "^3.0.1",
    "@uniswap/v3-core": "1.0.0",
    "@uniswap/v3-periphery": "^1.1.1",
    "@uniswap/v3-sdk": "^3.9.0",
    "@use-gesture/react": "^10.2.23",
    "@web3-react/coinbase-wallet": "^8.1.2-beta.0",
    "@web3-react/core": "^8.1.2-beta.0",
    "@web3-react/eip1193": "^8.1.2-beta.0",
    "@web3-react/empty": "^8.1.2-beta.0",
    "@web3-react/gnosis-safe": "^8.1.2-beta.0",
    "@web3-react/metamask": "^8.1.2-beta.0",
    "@web3-react/network": "^8.1.2-beta.0",
    "@web3-react/types": "^8.1.2-beta.0",
    "@web3-react/url": "^8.1.2-beta.0",
    "@web3-react/walletconnect": "^8.1.2-beta.0",
    "@web3-react/walletconnect-v2": "^8.1.2-beta.0",
    "ajv": "^6.12.3",
    "bnc-sdk": "^4.6.0",
    "buffer": "^6.0.3",
    "cids": "^1.0.0",
    "clone-deep": "^4.0.1",
    "copy-to-clipboard": "^3.2.0",
    "cross-env": "^7.0.3",
    "d3": "^7.8.1",
    "date-fns": "^2.29.3",
    "ethers": "^5.1.4",
    "exponential-backoff": "^3.1.1",
    "fast-deep-equal": "^3.1.3",
    "fast-safe-stringify": "^2.0.8",
    "fortmatic": "^2.2.1",
    "fraction.js": "^4.2.0",
    "immer": "^9.0.6",
    "inter-ui": "^3.19.3",
    "ipfs-deploy": "^8.0.1",
    "ipfs-http-client": "^52.0.3",
    "jotai": "1.7.0",
    "jsbi": "^3.1.4",
    "launchdarkly-react-client-sdk": "^3.0.4",
    "lightweight-charts": "^3.3.0",
    "limiter": "^2.1.0",
    "make-plural": "^7.0.0",
    "ms": "^2.1.3",
    "ms.macro": "^2.0.0",
    "multicodec": "^3.0.1",
    "multihashes": "^4.0.2",
    "node-vibrant": "^3.2.1-alpha.1",
    "paraswap": "npm:@nenad91/paraswap#5.1.0",
    "polished": "^3.3.2",
    "polyfill-object.fromentries": "^1.0.1",
    "popper-max-size-modifier": "^0.2.0",
    "react": "^18.2.0",
    "react-appzi": "^1.0.4",
    "react-confetti": "^6.1.0",
    "react-device-detect": "^1.6.2",
    "react-dom": "^18.2.0",
    "react-feather": "^2.0.8",
    "react-ga4": "^1.4.1",
    "react-helmet": "^6.1.0",
    "react-inlinesvg": "^3.0.1",
    "react-markdown": "^5.0.3",
    "react-popper": "^2.2.3",
    "react-redux": "^8.0.2",
    "react-router-dom": "^6.6.2",
    "react-router-hash-link": "^2.4.3",
    "react-scripts": "5.0.1",
    "react-virtualized-auto-sizer": "^1.0.2",
    "react-window": "^1.8.5",
    "rebass": "^4.0.7",
    "redux": "^4.1.2",
    "redux-localstorage-simple": "^2.3.1",
    "setimmediate": "^1.0.5",
    "simple-sitemap-renderer": "^1.1.0",
    "styled-components": "^5.3.0",
    "styled-jsx": "5.1.2",
    "swr": "^1.0.1",
    "text-encoding-polyfill": "^0.6.7",
    "timeago.js": "^4.0.2",
    "tiny-invariant": "^1.2.0",
    "tslib": "^2.3.0",
    "typescript": "^4.9.4",
    "ua-parser-js": "^1.0.32",
    "use-async-memo": "^1.2.4",
    "use-count-up": "^2.2.5",
    "use-resize-observer": "^8.0.0",
    "wcag-contrast": "^3.0.0",
    "web-vitals": "^2.1.4",
    "workbox-core": "^6.1.0",
    "workbox-navigation-preload": "^6.1.0",
    "workbox-precaching": "^6.1.0",
    "workbox-routing": "^6.1.0"
  },
  "devDependencies": {
    "@babel/plugin-proposal-nullish-coalescing-operator": "^7.18.6",
    "@commitlint/cli": "^17.6.1",
    "@commitlint/config-conventional": "^17.6.1",
    "@craco/craco": "^7.0.0",
    "@ethersproject/experimental": "^5.7.0",
    "@nx/eslint-plugin": "^16.3.2",
    "@nx/jest": "16.3.2",
    "@nx/js": "16.3.2",
    "@nx/react": "^16.3.2",
    "@nx/vite": "16.3.2",
    "@simbathesailor/babel-plugin-use-what-changed": "^2.1.0",
    "@testing-library/jest-dom": "^5.16.5",
    "@testing-library/react": "14.0.0",
    "@testing-library/react-hooks": "^8.0.1",
    "@testing-library/user-event": "^13.5.0",
    "@typechain/ethers-v5": "^10.2.0",
    "@types/clone-deep": "^4.0.1",
    "@types/d3": "^7.4.0",
    "@types/jest": "^29.4.0",
    "@types/ms": "^0.7.31",
    "@types/ms.macro": "^2.0.0",
    "@types/node": "18.14.2",
    "@types/react": "18.0.28",
    "@types/react-dom": "18.0.11",
    "@types/react-helmet": "^6.1.6",
    "@types/react-router-hash-link": "^2.4.5",
    "@types/react-virtualized-auto-sizer": "^1.0.1",
    "@types/react-window": "^1.8.5",
    "@types/rebass": "^4.0.10",
    "@types/styled-components": "^5.1.26",
    "@types/ua-parser-js": "^0.7.36",
    "@types/wcag-contrast": "^3.0.0",
    "@vitejs/plugin-react": "^3.0.0",
    "@vitest/ui": "^0.31.0",
    "assert": "^2.0.0",
    "babel-jest": "^29.4.1",
    "craco-workbox": "^0.2.0",
    "create-react-app": "^5.0.1",
    "crypto-browserify": "^3.12.0",
    "cypress": "^12.4.1",
    "eslint-config-react-app": "^7.0.1",
    "eslint-plugin-cypress": "^2.12.1",
    "eslint-plugin-import": "2.27.5",
    "eslint-plugin-jsx-a11y": "6.7.1",
    "eslint-plugin-react": "7.32.2",
    "eslint-plugin-react-hooks": "4.6.0",
    "eslint-plugin-unused-imports": "^2.0.0",
    "https-browserify": "^1.0.0",
    "husky": "^8.0.3",
    "jest": "^29.5.0",
    "jest-environment-jsdom": "^29.5.0",
    "jest-fetch-mock": "^3.0.3",
    "jest-styled-components": "^7.1.1",
    "jsdom": "~20.0.3",
    "launchdarkly-js-client-sdk": "^3.1.2",
    "nx": "16.3.2",
    "nx-cloud": "latest",
    "patch-package": "^6.5.1",
    "prettier": "^2.6.2",
    "react-cosmos": "^5.7.2",
    "serve": "^14.2.0",
    "start-server-and-test": "^2.0.0",
    "stream": "^0.0.2",
    "stream-browserify": "^3.0.0",
    "stream-http": "^3.2.0",
    "ts-jest": "^29.1.0",
    "ts-mockito": "^2.6.1",
    "ts-node": "10.9.1",
    "typechain": "^8.1.1",
    "verdaccio": "^5.0.4",
    "vite": "^4.3.4",
    "vite-plugin-dts": "~1.7.1",
    "vite-plugin-eslint": "^1.8.1",
    "vite-tsconfig-paths": "^4.0.2",
    "vitest": "^0.31.0",
    "webpack-bundle-analyzer": "^4.7.0"
  },
  "nx": {
    "targets": {
      "build": {
        "outputs": [
          "{projectRoot}/build",
          "{projectRoot}/src/locales"
        ]
      },
      "build:analyze": {
        "outputs": [
          "{projectRoot}/build"
        ]
      },
      "ipfs:build": {
        "outputs": [
          "{projectRoot}/build"
        ]
      },
      "optimize-bundle": {
        "outputs": [
          "{projectRoot}/../node_modules/@ethereumjs/common/dist.browser/genesisStates/mainnet.json"
        ]
      },
      "contracts:add:export": {
        "outputs": [
          "{projectRoot}/src/abis/types/index.ts"
        ]
      },
      "contracts:compile:abi": {
        "outputs": [
          "{projectRoot}/src/abis/types"
        ]
      },
      "contracts:compile:abi-ethflow": {
        "outputs": [
          "{projectRoot}/src/abis/types/ethflow"
        ]
      },
      "contracts:compile:abi-uniswap": {
        "outputs": [
          "{projectRoot}/src/legacy/abis/types"
        ]
      },
      "contracts:compile:v3": {
        "outputs": [
          "{projectRoot}/src/legacy/types/v3"
        ]
      },
      "i18n:extract": {
        "outputs": [
          "{projectRoot}/src/locales"
        ]
      },
      "i18n:compile": {
        "outputs": [
          "{projectRoot}/src/locales"
        ]
      },
      "i18n:pseudo": {
        "outputs": [
          "{projectRoot}/src/locales"
        ]
      },
      "cosmos:export": {
        "outputs": [
          "{projectRoot}/public/cosmos"
        ]
      },
      "sitemap": {
        "outputs": [
          "{projectRoot}/public/sitemap.xml"
        ]
      },
      "writeVersion": {
        "outputs": [
          "{projectRoot}/public/version.json"
        ]
      }
    }
  }
}
